{
  "api/index.html": {
    "href": "api/index.html",
    "title": "API Documentation | Fantasy Crescendo",
    "keywords": "API Documentation Guides on Game Subsystems Simulation Model Frequently Used API Elements TODO(james7132): Add more common API shortcuts"
  },
  "index.html": {
    "href": "index.html",
    "title": "Fantasy Crescendo | Fantasy Crescendo",
    "keywords": "Fantasy Crescendo This is meant to be a documentation site for developers and testers for Fantasy Crescendo. If you are looking for no For Testers Info regarding the Steam Closed Beta Guide for Reporting Bugs For Developers Getting Started API Reference TODO: Add more development guides"
  },
  "guides/exporting-animation.html": {
    "href": "guides/exporting-animation.html",
    "title": "Exporting Animation | Fantasy Crescendo",
    "keywords": "Exporting Animation TODO(nineball): Document"
  },
  "guides/getting-started.html": {
    "href": "guides/getting-started.html",
    "title": "Getting Started | Fantasy Crescendo",
    "keywords": "Getting Started Before attempting to make any contributions or work with the game at all, we suggest all contributors join the Hourai Teahouse Discord . Installing Tools Fantasy Crescendo is a video game, pulling together multiple creative and technical disciplines. We use a variety of tools to finish the necessary tasks. For Game Designers/Programmers Fantasy Creacendo is developed with the Unity3D engine. If you plan on directly changing game assets or code, you will need Unity 2018.2. It's suggested to use the Unity Hub to manage and install Unity. To also get the project files and push changes, you will also need a Git client . There's multiple choices for this: git bash (Command-line), SourceTree (GUI), GitHub Desktop (GUI). Any git client works, choose one that you feel you work with best. You will also need a GitHub account. If you do not have one already, register . For programmers, while it is possible to work with any program that edits text files (vim, Sublime, Notepad++), it is suggested that you use an editor that supports language specific features for C#. Some suggestions for this are Visual Studio Code , Visual Studio , or Rider . For Animators The source files used to animate characters in Fantasy Crescendo is Autodesk Maya . Specifically, we use Autodesk Maya 2016 Extension 2 . For Localizers Localizers do not need to install anything on their computers, but they will need access to the shared localization Google Sheet . If you wish to localize a language, request access, then contact the project maintainers on the Hourai Teahouse Discord to get the request approved. For 2D Artists/Musicians Luckily for most of these assets used in the game, we do not have any strong requirements so long as the end asset importable by Unity. We suggest you use whatever tool you find most adequate. Development Enviroment Setup This part only pretains to those directly working with files on the repo, namely game designers and programmers. NOTE: Fantasy Crescendo, as of writing, currently depends on using many git submodules to manage dependencies. This is a suboptimal solution for dependency management, but is currently the only available choice we have, even if it complicates the setup process for the project. Sometime in the future we will be migrating to the Unity Package Manager when it supports 3rd party remote packages, which will remove the need to manage these submodules. Setting up remote repo If you are a member of the Hourai Teahouse GitHub organization, you are allowed to directly commit to the official repository, skip this step. If you are an external contributor, it is suggested that you fork the repo onto your own account. Setting up your local files To get the local files, you'll need to git clone the remote repository (the official one or the fork you have created). Via GitHub for Desktop TODO(Gabo7): Document. Via Command Line This assumes you are using a *nix (Linux/macOS) style terminal. Windows users are suggested to use either Windows Subsystem for Linux (requires Windows 10) or GitBash git clone https://github.com/HouraiTeahouse/FantasyCrescendo # Clone the repository cd FantasyCrescendo # Change directory to the cloned repo git submodule init --recursive Loading into the Unity Editor Simply open the cloned directory with the Unity Editor. It will ask to import a large number of files (this may take longer on less powerful development machines). Common Development Operations Running Unit Tests In the top menu bar, Window > General > Test Runner will bring up the Test Runner Window . Press \"Run All\". This will run all unit tests defined in the project. Generally all of these tests should pass for every code change pushed to the repository. The continuous integration system that creates builds will reject any change that causes unit tests to fail. Building Asset Bundles In the top menu bar, \"Hourai Teahouse > Build Asset Bundles ( )\" will build all Asset Bundles in the project. This may take some time for the first you do it. Playing In-Editor Make sure you have built Asset Bundles before doing this step (Errors will occur without them). Load up a common test scene to make sure that the game starts correctly. In the Project Window, search for and open the \"DebugStage\" scene. If you enter Play Mode (press the Play button at the top of the editor), it should load up the game, and a number of test players. It should play out just like any other stock match, but within the Editor. Creating a Build Make sure you have built Asset Bundles before doing this step (Errors will occur without them). In the top menu bar, File > Build Settings, this will open the build window. Select the approriate build target for the operating system you are on. Click either of the Build options (Build and Run will run the build on completion). Deploying a Build Hourai Teahouse employs a continuous integration and continuous deployment pipeline upon source control changes. If you make changes and get them integrated into the official repository's master and develop branches, it will automatically trigger builds to be created. If builds for all platforms (Windows, macOS, and Linux) succeed, and they all pass defined unit tests, it will be deployed to Steam. Please note, the processes for creating game builds can take quite a while, it may take up to 1-3 hours before a build is completed and deployed. The develop branch is configured to deploy only to the latest-beta beta release line on Steam, changes in the default release line must be manually made by a Hourai Teahouse administrator."
  },
  "guides/reporting-bugs.html": {
    "href": "guides/reporting-bugs.html",
    "title": "How to Report a Bug with a Project | Fantasy Crescendo",
    "keywords": "How to Report a Bug with a Project Fantasy Crescendo uses GitHub Issues to manage per-project issues. The process for submitting a bug to a Hourai Teahouse project is as follows: If you do not already have a GitHub account, create an account . Login with your account. Navigate to the issues page for the project you wish to report a bug for. Click the New Issue button. Fill out the form with information about your bug. If the body is pre-filled for you, please provide the information requested by the template. Click the Submit button. Guide to effectively reporting bugs Creating proper bug reports is incredibly important for a tester. Developers cannot fix what they cannot replicate, so please provide as much information as possible. Include which version of the game you are playing on. what operating system, and, if the issue requires, information about the hardware on your machine. As accurately as possible, describe exactly what the bug entails. Provide as much information as to what the expect and actual behavior. Provide information on exactly how to replicate the bug. Additional information that can be helpful: Game Logs - this gives detailed information about what happened to your game, and if and when errors may have happened. To find these logs, see these docs . Screenshots - if the issue is visual, please show what you see that seems to appear incorrectly. For animations, ScreenToGif is a good option to short animations. If the bug is longer lasting, we suggest uploading a short video to demonstrate the issue. When you have reported a bug, you are expected to attend to the bug when possible. Developers may ask you to affirm if the bug has been resolved. {.is-warning}"
  },
  "guides/simulation-model.html": {
    "href": "guides/simulation-model.html",
    "title": "Overview | Fantasy Crescendo",
    "keywords": "Overview TODO(james7132): Document States State is represented as simple data objects. Inputs Inputs are represented as simple data objects. PlayerInput is a plain old C# struct that contains a summary of all input for a player at a given frame. MatchInput represents an aggregation of all player's inputs for a frame. You can get the PlayerInput for a given player ID by indexing into it like any array. Despite being able to index MatchInput like an array of PlayerInputs, it operates under value semantics. It should be noted that both structures only contain input information and do not track the time at which they were generated. Both MatchInput and PlayerInput implement IValidatable . If IsValid is false, the input is not entirely generated locally, or, when in a netowrk match, has not been verified to be the correct input by the server. Inputs are produced by objects of the interface IInputSource<I> . The current input for a frame can be sampled with the SampleInput() method. Interfacing the game with a new input framework (i.e. InControl, Rewired, or Unity's New Input System) involves implementing a new IInputSource and selecting it in the game's global configuration files. Simulation Simulations are represented as the interface ISimulation<S, I> . The sole method it defines is S Simuilate(S, I) . This defines a mapping of the state S and input I to a new state S. It should be noted that these simulations usually do not mutate the input state, instead creating a new state based on the input. In practice, the engine uses two classes MatchInputContext and PlayerInputContext as the input types instead of the raw inputs. Both represent the current and last frame's inputs, information some of the simulations both need to properly run. Simulations generally should be completely self contained and the simulation itself should be stateless. As a general rule, the only information needed to compute the next state should be provided the arguments to Simulate(...) . Exceptions to this rule usually include some unchanging global configuration options or manipulating the intermediate state of a higher level simulation. An example of the latter exception is hitboxes. The Match level simulation of hitboxes are self contained, as in the state of hitboxes from one call to Simulate to another are hold no state, but within one call to the Match level simulate are multiple calls to player level simulations that may manipulate the global state of the hitbox simulation. Views TODO(james7132): Document Configuration TODO(james7132): Document"
  },
  "guides/steam-closed-beta.html": {
    "href": "guides/steam-closed-beta.html",
    "title": "Requesting a Steam Key | Fantasy Crescendo",
    "keywords": "<!-- TITLE: Steam --> Fantasy Crescendo is now available for testing on Steam through a closed beta system. Requesting a Steam Key To participate in this closed beta, you must request a Steam key from the project administrators. At the time of writing, this is best done through our Discord. You will be assigned a Steam key, that can be redeemed like any other Steam CD key. Please refer to the official Valve documentation if you are having difficult activating the key. Hourai Teahouse reserves the right to revoke any provided Steam keys for any arbitrary reason. If found abusing the key(s), their use may be revoked without advanced notice. { .is-warning } Release Branches In the closed beta we have two open branches that we regularly release content to: default and latest-beta . The default branch is updated at a regular pace of once per week on Saturday. The latest-beta branch is updated as soon as game builds are ready. Installing the game by default subscribes you to the default branch. To opt-in to the bleeding edge latest-beta branch, please refer to this guide on how to change the branch your client is subscribed to."
  },
  "api/HouraiTeahouse.FantasyCrescendo.Ledge.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Ledge.html",
    "title": "Class Ledge | Fantasy Crescendo",
    "keywords": "Class Ledge Inheritance MonoBehaviour RegisteredBehaviour < Ledge , System.Byte > Ledge Implements IEntity Inherited Members RegisteredBehaviour<Ledge, Byte>.Id RegisteredBehaviour<Ledge, Byte>.IEntity.Id RegisteredBehaviour<Ledge, Byte>.Awake() RegisteredBehaviour<Ledge, Byte>.OnDestroy() Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public sealed class Ledge : RegisteredBehaviour<Ledge, byte>, IEntity Fields Direction Declaration public bool Direction Field Value Type Description System.Boolean Methods Awake() Awake is called when the script instance is being loaded. Declaration protected override void Awake() Overrides HouraiTeahouse.FantasyCrescendo.RegisteredBehaviour<HouraiTeahouse.FantasyCrescendo.Ledge, System.Byte>.Awake() IsOccupied(MatchState) Declaration public bool IsOccupied(MatchState state) Parameters Type Name Description MatchState state Returns Type Description System.Boolean Implements IEntity"
  },
  "api/HouraiTeahouse.FantasyCrescendo.LoadingScreen.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.LoadingScreen.html",
    "title": "Class LoadingScreen | Fantasy Crescendo",
    "keywords": "Class LoadingScreen Inheritance MonoBehaviour LoadingScreen Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class LoadingScreen : MonoBehaviour Fields ViewObjects Declaration public Object[] ViewObjects Field Value Type Description Object [] Properties Instance Declaration public static LoadingScreen Instance { get; } Property Value Type Description LoadingScreen Methods Await(Task) Declaration public static Task Await(Task task) Parameters Type Name Description Task task Returns Type Description Task AwaitAll() Declaration public static Task AwaitAll() Returns Type Description Task"
  },
  "api/HouraiTeahouse.FantasyCrescendo.MainMenu.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.MainMenu.html",
    "title": "Class MainMenu | Fantasy Crescendo",
    "keywords": "Class MainMenu Inheritance MonoBehaviour MainMenu Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class MainMenu : MonoBehaviour Fields CurrentGameMode Declaration public GameMode CurrentGameMode Field Value Type Description GameMode Methods OpenUrl(String) Declaration public void OpenUrl(string url) Parameters Type Name Description System.String url QuitGame() Declaration public void QuitGame() SetGameMode(GameMode) Declaration public void SetGameMode(GameMode gameMode) Parameters Type Name Description GameMode gameMode"
  },
  "api/HouraiTeahouse.FantasyCrescendo.ManagedAudio.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.ManagedAudio.html",
    "title": "Class ManagedAudio | Fantasy Crescendo",
    "keywords": "Class ManagedAudio A reference to an AudioSource managed by the AudioManager Inheritance MonoBehaviour ManagedAudio Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class ManagedAudio : MonoBehaviour Properties AudioSource The AudioSource for the object Declaration public AudioSource AudioSource { get; } Property Value Type Description AudioSource"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.INetworkClient.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.INetworkClient.html",
    "title": "Interface INetworkClient | Fantasy Crescendo",
    "keywords": "Interface INetworkClient Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public interface INetworkClient : IDisposable Properties Connection Declaration NetworkConnection Connection { get; } Property Value Type Description NetworkConnection IsServerReady Declaration bool IsServerReady { get; } Property Value Type Description System.Boolean Methods Connect(NetworkConnectionConfig) Declaration Task Connect(NetworkConnectionConfig config) Parameters Type Name Description NetworkConnectionConfig config Returns Type Description Task Disconnect() Declaration void Disconnect() SendInput(UInt32, Byte, IEnumerable<MatchInput>) Declaration void SendInput(uint startTimestamp, byte validMask, IEnumerable<MatchInput> inputs) Parameters Type Name Description System.UInt32 startTimestamp System.Byte validMask System.Collections.Generic.IEnumerable < MatchInput > inputs SetConfig(PlayerConfig) Declaration void SetConfig(PlayerConfig config) Parameters Type Name Description PlayerConfig config SetReady(Boolean) Declaration void SetReady(bool isReady) Parameters Type Name Description System.Boolean isReady Update() Declaration void Update() Events OnDisconnect Declaration event Action OnDisconnect Event Type Type Description Action OnMatchConfigUpdated Declaration event Action<MatchConfig> OnMatchConfigUpdated Event Type Type Description Action < MatchConfig > OnMatchFinished Declaration event Action<MatchResult> OnMatchFinished Event Type Type Description Action < MatchResult > OnMatchStarted Declaration event Action<MatchConfig> OnMatchStarted Event Type Type Description Action < MatchConfig > OnRecievedInputs Declaration event Action<uint, ArraySegment<MatchInput>> OnRecievedInputs Event Type Type Description Action < System.UInt32 , ArraySegment < MatchInput >> OnRecievedState Declaration event Action<uint, MatchState, MatchInput? > OnRecievedState Event Type Type Description Action < System.UInt32 , MatchState , System.Nullable < MatchInput >> OnServerReady Declaration event Action<bool> OnServerReady Event Type Type Description Action < System.Boolean >"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.INetworkInterface.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.INetworkInterface.html",
    "title": "Interface INetworkInterface | Fantasy Crescendo",
    "keywords": "Interface INetworkInterface Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public interface INetworkInterface : IDisposable Properties Connections Declaration IReadOnlyCollection<NetworkConnection> Connections { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < NetworkConnection > MessageHandlers Declaration MessageHandlers MessageHandlers { get; } Property Value Type Description MessageHandlers Methods Connect(NetworkConnectionConfig) Declaration Task<NetworkConnection> Connect(NetworkConnectionConfig config) Parameters Type Name Description NetworkConnectionConfig config Returns Type Description Task < NetworkConnection > Disconnect(Int32) Declaration void Disconnect(int connectionId) Parameters Type Name Description System.Int32 connectionId GetConnectionStats(Int32) Declaration ConnectionStats GetConnectionStats(int connectionId) Parameters Type Name Description System.Int32 connectionId Returns Type Description ConnectionStats Initialize(NetworkInterfaceConfiguration) Declaration Task Initialize(NetworkInterfaceConfiguration config) Parameters Type Name Description NetworkInterfaceConfiguration config Returns Type Description Task Send(Int32, Byte[], Int32, NetworkReliablity) Declaration void Send(int connectionId, byte[] bytes, int count, NetworkReliablity reliablity) Parameters Type Name Description System.Int32 connectionId System.Byte [] bytes System.Int32 count NetworkReliablity reliablity Update() Declaration void Update() Events OnPeerConnected Declaration event Action<NetworkConnection> OnPeerConnected Event Type Type Description Action < NetworkConnection > OnPeerDisconnected Declaration event Action<NetworkConnection> OnPeerDisconnected Event Type Type Description Action < NetworkConnection >"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.INetworkSerializable.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.INetworkSerializable.html",
    "title": "Interface INetworkSerializable | Fantasy Crescendo",
    "keywords": "Interface INetworkSerializable Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public interface INetworkSerializable Methods Deserialize(Deserializer) Declaration void Deserialize(Deserializer deserializer) Parameters Type Name Description Deserializer deserializer Serialize(Serializer) Declaration void Serialize(Serializer serializer) Parameters Type Name Description Serializer serializer"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.INetworkServer.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.INetworkServer.html",
    "title": "Interface INetworkServer | Fantasy Crescendo",
    "keywords": "Interface INetworkServer Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public interface INetworkServer : IDisposable Properties Clients Declaration ICollection<NetworkClientPlayer> Clients { get; } Property Value Type Description System.Collections.Generic.ICollection < NetworkClientPlayer > Methods BroadcastInput(UInt32, Byte, IEnumerable<MatchInput>) Declaration void BroadcastInput(uint startTimestamp, byte validMask, IEnumerable<MatchInput> input) Parameters Type Name Description System.UInt32 startTimestamp System.Byte validMask System.Collections.Generic.IEnumerable < MatchInput > input BroadcastState(UInt32, MatchState, Nullable<MatchInput>) Declaration void BroadcastState(uint timestamp, MatchState state, MatchInput? latestInput = default (MatchInput? )) Parameters Type Name Description System.UInt32 timestamp MatchState state System.Nullable < MatchInput > latestInput FinishMatch(MatchResult) Declaration void FinishMatch(MatchResult result) Parameters Type Name Description MatchResult result Initialize() Declaration Task Initialize() Returns Type Description Task SetReady(Boolean) Declaration void SetReady(bool ready) Parameters Type Name Description System.Boolean ready Update() Declaration void Update() Events PlayerAdded Declaration event Action<NetworkClientPlayer> PlayerAdded Event Type Type Description Action < NetworkClientPlayer > PlayerRemoved Declaration event Action<int> PlayerRemoved Event Type Type Description Action < System.Int32 > PlayerUpdated Declaration event Action<NetworkClientPlayer> PlayerUpdated Event Type Type Description Action < NetworkClientPlayer > ReceivedInputs Declaration event Action<int, uint, ArraySegment<MatchInput>> ReceivedInputs Event Type Type Description Action < System.Int32 , System.UInt32 , ArraySegment < MatchInput >>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.INetworkStrategy.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.INetworkStrategy.html",
    "title": "Interface INetworkStrategy | Fantasy Crescendo",
    "keywords": "Interface INetworkStrategy Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public interface INetworkStrategy Methods CreateClient(INetworkClient, MatchConfig) Declaration ClientGameController CreateClient(INetworkClient server, MatchConfig config) Parameters Type Name Description INetworkClient server MatchConfig config Returns Type Description ClientGameController CreateServer(INetworkServer, MatchConfig) Declaration ServerGameController CreateServer(INetworkServer server, MatchConfig config) Parameters Type Name Description INetworkServer server MatchConfig config Returns Type Description ServerGameController"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.INetworkStrategyExtensions.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.INetworkStrategyExtensions.html",
    "title": "Class INetworkStrategyExtensions | Fantasy Crescendo",
    "keywords": "Class INetworkStrategyExtensions Inheritance System.Object INetworkStrategyExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public static class INetworkStrategyExtensions Methods CreateHost(INetworkStrategy, NetworkHost, MatchConfig) Declaration public static IMatchController CreateHost(this INetworkStrategy strategy, NetworkHost host, MatchConfig config) Parameters Type Name Description INetworkStrategy strategy NetworkHost host MatchConfig config Returns Type Description IMatchController"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.InputSetMessage.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.InputSetMessage.html",
    "title": "Struct InputSetMessage | Fantasy Crescendo",
    "keywords": "Struct InputSetMessage Implements INetworkSerializable IDisposable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public struct InputSetMessage : INetworkSerializable, IDisposable Fields InputCount Declaration public uint InputCount Field Value Type Description System.UInt32 Inputs Declaration public MatchInput[] Inputs Field Value Type Description MatchInput [] StartTimestamp Declaration public uint StartTimestamp Field Value Type Description System.UInt32 ValidMask Declaration public byte ValidMask Field Value Type Description System.Byte Methods AsArraySegment() Declaration public ArraySegment<MatchInput> AsArraySegment() Returns Type Description ArraySegment < MatchInput > Deserialize(Deserializer) Declaration public void Deserialize(Deserializer deserializer) Parameters Type Name Description Deserializer deserializer Dispose() Declaration public void Dispose() Serialize(Serializer) Declaration public void Serialize(Serializer serializer) Parameters Type Name Description Serializer serializer Implements INetworkSerializable IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.LockstepStrategy.Client.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.LockstepStrategy.Client.html",
    "title": "Class LockstepStrategy.Client | Fantasy Crescendo",
    "keywords": "Class LockstepStrategy.Client Inheritance System.Object MatchController ClientGameController LockstepStrategy.Client Implements IMatchController IDisposable Inherited Members ClientGameController.NetworkClient MatchController.Timestep MatchController.CurrentState MatchController.Simulation MatchController.InputSource System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public sealed class Client : ClientGameController, IMatchController, IDisposable Methods Dispose() Declaration public override void Dispose() Overrides ClientGameController.Dispose() Update() Declaration public override void Update() Overrides ClientGameController.Update() Implements IMatchController IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.LockstepStrategy.Server.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.LockstepStrategy.Server.html",
    "title": "Class LockstepStrategy.Server | Fantasy Crescendo",
    "keywords": "Class LockstepStrategy.Server Inheritance System.Object MatchController ServerGameController LockstepStrategy.Server Implements IMatchController IDisposable Inherited Members ServerGameController.NetworkServer MatchController.Timestep MatchController.CurrentState MatchController.Simulation MatchController.InputSource System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public sealed class Server : ServerGameController, IMatchController, IDisposable Methods Dispose() Declaration public override void Dispose() Overrides ServerGameController.Dispose() Update() Declaration public override void Update() Overrides ServerGameController.Update() Implements IMatchController IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.LockstepStrategy.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.LockstepStrategy.html",
    "title": "Class LockstepStrategy | Fantasy Crescendo",
    "keywords": "Class LockstepStrategy Inheritance System.Object LockstepStrategy Implements INetworkStrategy Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public sealed class LockstepStrategy : INetworkStrategy Methods CreateClient(INetworkClient, MatchConfig) Declaration public ClientGameController CreateClient(INetworkClient client, MatchConfig config) Parameters Type Name Description INetworkClient client MatchConfig config Returns Type Description ClientGameController CreateServer(INetworkServer, MatchConfig) Declaration public ServerGameController CreateServer(INetworkServer server, MatchConfig config) Parameters Type Name Description INetworkServer server MatchConfig config Returns Type Description ServerGameController Implements INetworkStrategy"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.MatchFinishMessage.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.MatchFinishMessage.html",
    "title": "Struct MatchFinishMessage | Fantasy Crescendo",
    "keywords": "Struct MatchFinishMessage Implements INetworkSerializable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public struct MatchFinishMessage : INetworkSerializable Fields MatchResult Declaration public MatchResult MatchResult Field Value Type Description MatchResult Methods Deserialize(Deserializer) Declaration public void Deserialize(Deserializer deserializer) Parameters Type Name Description Deserializer deserializer Serialize(Serializer) Declaration public void Serialize(Serializer serializer) Parameters Type Name Description Serializer serializer Implements INetworkSerializable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.MatchStartMessage.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.MatchStartMessage.html",
    "title": "Struct MatchStartMessage | Fantasy Crescendo",
    "keywords": "Struct MatchStartMessage Implements INetworkSerializable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public struct MatchStartMessage : INetworkSerializable Fields MatchConfig Declaration public MatchConfig MatchConfig Field Value Type Description MatchConfig Methods Deserialize(Deserializer) Declaration public void Deserialize(Deserializer deserializer) Parameters Type Name Description Deserializer deserializer Serialize(Serializer) Declaration public void Serialize(Serializer serializer) Parameters Type Name Description Serializer serializer Implements INetworkSerializable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.MessageHandlers.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.MessageHandlers.html",
    "title": "Class MessageHandlers | Fantasy Crescendo",
    "keywords": "Class MessageHandlers Inheritance System.Object MessageHandlers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public class MessageHandlers Constructors MessageHandlers() Declaration public MessageHandlers() Methods RegisterHandler(Byte, Action<NetworkDataMessage>) Declaration public void RegisterHandler(byte code, Action<NetworkDataMessage> handler) Parameters Type Name Description System.Byte code Action < NetworkDataMessage > handler RegisterHandler<T>(Byte, Action<T>) Declaration public void RegisterHandler<T>(byte code, Action<T> handler)where T : INetworkSerializable, new () Parameters Type Name Description System.Byte code Action <T> handler Type Parameters Name Description T UnregisterHandler(Byte) Declaration public void UnregisterHandler(byte code) Parameters Type Name Description System.Byte code"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkClientConfig.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkClientConfig.html",
    "title": "Struct NetworkClientConfig | Fantasy Crescendo",
    "keywords": "Struct NetworkClientConfig Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public struct NetworkClientConfig"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkClientPlayer.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkClientPlayer.html",
    "title": "Class NetworkClientPlayer | Fantasy Crescendo",
    "keywords": "Class NetworkClientPlayer Inheritance System.Object NetworkClientPlayer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public class NetworkClientPlayer Constructors NetworkClientPlayer(NetworkConnection, Byte) Declaration public NetworkClientPlayer(NetworkConnection connection, byte playerId) Parameters Type Name Description NetworkConnection connection System.Byte playerId Fields Config Declaration public PlayerConfig Config Field Value Type Description PlayerConfig Connection Declaration public readonly NetworkConnection Connection Field Value Type Description NetworkConnection IsReady Declaration public bool IsReady Field Value Type Description System.Boolean PlayerID Declaration public readonly byte PlayerID Field Value Type Description System.Byte Methods FinishMatch(MatchResult) Declaration public void FinishMatch(MatchResult result) Parameters Type Name Description MatchResult result Kick() Declaration public void Kick() SendConfig(MatchConfig) Declaration public void SendConfig(MatchConfig config) Parameters Type Name Description MatchConfig config SendInputs(UInt32, Byte, IEnumerable<MatchInput>) Declaration public void SendInputs(uint timestamp, byte validMask, IEnumerable<MatchInput> inputs) Parameters Type Name Description System.UInt32 timestamp System.Byte validMask System.Collections.Generic.IEnumerable < MatchInput > inputs SendState(UInt32, MatchState, Nullable<MatchInput>) Declaration public void SendState(uint timestamp, MatchState state, MatchInput? latestInput) Parameters Type Name Description System.UInt32 timestamp MatchState state System.Nullable < MatchInput > latestInput SetServerReady(Boolean) Declaration public void SetServerReady(bool isReady) Parameters Type Name Description System.Boolean isReady StartMatch(MatchConfig) Declaration public void StartMatch(MatchConfig config) Parameters Type Name Description MatchConfig config"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkConnection.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkConnection.html",
    "title": "Class NetworkConnection | Fantasy Crescendo",
    "keywords": "Class NetworkConnection Inheritance System.Object NetworkConnection Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public class NetworkConnection Fields Id Declaration public readonly int Id Field Value Type Description System.Int32 NetworkInterface Declaration public readonly INetworkInterface NetworkInterface Field Value Type Description INetworkInterface Properties IsConnected Declaration public bool IsConnected { get; } Property Value Type Description System.Boolean MessageHandlers Declaration public MessageHandlers MessageHandlers { get; } Property Value Type Description MessageHandlers Stats Declaration public ConnectionStats Stats { get; } Property Value Type Description ConnectionStats Status Declaration public ConnectionStatus Status { get; } Property Value Type Description ConnectionStatus Methods Disconnect() Declaration public void Disconnect() SendBytes(Byte[], Int32, NetworkReliablity) Declaration public void SendBytes(byte[] buffer, int size, NetworkReliablity reliability = NetworkReliablity.Reliable) Parameters Type Name Description System.Byte [] buffer System.Int32 size NetworkReliablity reliability"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkConnectionConfig.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkConnectionConfig.html",
    "title": "Class NetworkConnectionConfig | Fantasy Crescendo",
    "keywords": "Class NetworkConnectionConfig Inheritance System.Object NetworkConnectionConfig Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public class NetworkConnectionConfig Fields IP Declaration public string IP Field Value Type Description System.String LobbyInfo Declaration public LobbyInfo LobbyInfo Field Value Type Description LobbyInfo Port Declaration public int Port Field Value Type Description System.Int32"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkConnectionExtensions.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkConnectionExtensions.html",
    "title": "Class NetworkConnectionExtensions | Fantasy Crescendo",
    "keywords": "Class NetworkConnectionExtensions Inheritance System.Object NetworkConnectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public static class NetworkConnectionExtensions Methods Send(NetworkConnection, Byte, INetworkSerializable, NetworkReliablity) Declaration public static void Send(this NetworkConnection connection, byte header, INetworkSerializable message, NetworkReliablity reliablity = NetworkReliablity.Reliable) Parameters Type Name Description NetworkConnection connection System.Byte header INetworkSerializable message NetworkReliablity reliablity SendToAll<T>(IEnumerable<NetworkConnection>, Byte, T, NetworkReliablity) Declaration public static void SendToAll<T>(this IEnumerable<NetworkConnection> connections, byte header, in T message, NetworkReliablity reliablity = NetworkReliablity.Reliable)where T : INetworkSerializable Parameters Type Name Description System.Collections.Generic.IEnumerable < NetworkConnection > connections System.Byte header T message NetworkReliablity reliablity Type Parameters Name Description T"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkDataMessage.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkDataMessage.html",
    "title": "Struct NetworkDataMessage | Fantasy Crescendo",
    "keywords": "Struct NetworkDataMessage Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public struct NetworkDataMessage Constructors NetworkDataMessage(NetworkConnection, Deserializer) Declaration public NetworkDataMessage(NetworkConnection connection, Deserializer reader) Parameters Type Name Description NetworkConnection connection Deserializer reader Fields Connection Declaration public readonly NetworkConnection Connection Field Value Type Description NetworkConnection NetworkReader Declaration public readonly Deserializer NetworkReader Field Value Type Description Deserializer Methods ReadAs<T>() Declaration public T ReadAs<T>()where T : INetworkSerializable, new () Returns Type Description T Type Parameters Name Description T"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkGameClient.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkGameClient.html",
    "title": "Class NetworkGameClient | Fantasy Crescendo",
    "keywords": "Class NetworkGameClient Inheritance System.Object NetworkGameClient Implements INetworkClient IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public class NetworkGameClient : INetworkClient, IDisposable Constructors NetworkGameClient(Type, NetworkClientConfig) Declaration public NetworkGameClient(Type interfaceType, NetworkClientConfig config) Parameters Type Name Description Type interfaceType NetworkClientConfig config Properties Connection Declaration public NetworkConnection Connection { get; } Property Value Type Description NetworkConnection IsServerReady Declaration public bool IsServerReady { get; } Property Value Type Description System.Boolean Methods Connect(NetworkConnectionConfig) Declaration public Task Connect(NetworkConnectionConfig config) Parameters Type Name Description NetworkConnectionConfig config Returns Type Description Task Disconnect() Declaration public void Disconnect() Dispose() Declaration public void Dispose() SendInput(UInt32, Byte, IEnumerable<MatchInput>) Declaration public void SendInput(uint startTimestamp, byte validMask, IEnumerable<MatchInput> input) Parameters Type Name Description System.UInt32 startTimestamp System.Byte validMask System.Collections.Generic.IEnumerable < MatchInput > input SetConfig(PlayerConfig) Declaration public void SetConfig(PlayerConfig config) Parameters Type Name Description PlayerConfig config SetReady(Boolean) Declaration public void SetReady(bool isReady) Parameters Type Name Description System.Boolean isReady Update() Declaration public void Update() Events OnDisconnect Declaration public event Action OnDisconnect Event Type Type Description Action OnMatchConfigUpdated Declaration public event Action<MatchConfig> OnMatchConfigUpdated Event Type Type Description Action < MatchConfig > OnMatchFinished Declaration public event Action<MatchResult> OnMatchFinished Event Type Type Description Action < MatchResult > OnMatchStarted Declaration public event Action<MatchConfig> OnMatchStarted Event Type Type Description Action < MatchConfig > OnRecievedInputs Declaration public event Action<uint, ArraySegment<MatchInput>> OnRecievedInputs Event Type Type Description Action < System.UInt32 , ArraySegment < MatchInput >> OnRecievedState Declaration public event Action<uint, MatchState, MatchInput? > OnRecievedState Event Type Type Description Action < System.UInt32 , MatchState , System.Nullable < MatchInput >> OnServerReady Declaration public event Action<bool> OnServerReady Event Type Type Description Action < System.Boolean > Implements INetworkClient IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkGameMode.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkGameMode.html",
    "title": "Class NetworkGameMode | Fantasy Crescendo",
    "keywords": "Class NetworkGameMode Inheritance ScriptableObject GameDataBase GameMode DefaultGameMode NetworkGameMode Implements IEntity Inherited Members DefaultGameMode.RunGame(MatchConfig, Boolean) DefaultGameMode.IsValidConfig(MatchConfig) GameMode.GlobalMaxPlayers GameMode.Name GameMode.MinPlayers GameMode.MaxPlayers GameMode.Execute(MatchConfig, Boolean) GameMode.Reset() GameDataBase.Id GameDataBase.IsSelectable GameDataBase.IsVisible GameDataBase.IsDebug Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public class NetworkGameMode : DefaultGameMode, IEntity Properties SupportsNetworkPlay Declaration public override bool SupportsNetworkPlay { get; } Property Value Type Description System.Boolean Overrides GameMode.SupportsNetworkPlay Methods CreateMatch(MatchConfig) Declaration protected override Match CreateMatch(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description Match Overrides DefaultGameMode.CreateMatch(MatchConfig) Implements IEntity"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkGameServer.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkGameServer.html",
    "title": "Class NetworkGameServer | Fantasy Crescendo",
    "keywords": "Class NetworkGameServer Inheritance System.Object NetworkGameServer Implements INetworkServer IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public class NetworkGameServer : INetworkServer, IDisposable Constructors NetworkGameServer(Type, NetworkServerConfig) Declaration public NetworkGameServer(Type interfaceType, NetworkServerConfig config) Parameters Type Name Description Type interfaceType NetworkServerConfig config Fields Config Declaration public readonly NetworkServerConfig Config Field Value Type Description NetworkServerConfig Properties ClientCount Declaration public int ClientCount { get; } Property Value Type Description System.Int32 Clients Declaration public ICollection<NetworkClientPlayer> Clients { get; } Property Value Type Description System.Collections.Generic.ICollection < NetworkClientPlayer > Methods BroadcastInput(UInt32, Byte, IEnumerable<MatchInput>) Declaration public void BroadcastInput(uint timestamp, byte validMask, IEnumerable<MatchInput> inputs) Parameters Type Name Description System.UInt32 timestamp System.Byte validMask System.Collections.Generic.IEnumerable < MatchInput > inputs BroadcastState(UInt32, MatchState, Nullable<MatchInput>) Declaration public void BroadcastState(uint timestamp, MatchState state, MatchInput? latestInput = default (MatchInput? )) Parameters Type Name Description System.UInt32 timestamp MatchState state System.Nullable < MatchInput > latestInput CreateLocalClient() Declaration public INetworkClient CreateLocalClient() Returns Type Description INetworkClient Dispose() Declaration public void Dispose() FinishMatch(MatchResult) Declaration public void FinishMatch(MatchResult result) Parameters Type Name Description MatchResult result Initialize() Declaration public Task Initialize() Returns Type Description Task SetReady(Boolean) Declaration public void SetReady(bool ready) Parameters Type Name Description System.Boolean ready Update() Declaration public void Update() Events PlayerAdded Declaration public event Action<NetworkClientPlayer> PlayerAdded Event Type Type Description Action < NetworkClientPlayer > PlayerRemoved Declaration public event Action<int> PlayerRemoved Event Type Type Description Action < System.Int32 > PlayerUpdated Declaration public event Action<NetworkClientPlayer> PlayerUpdated Event Type Type Description Action < NetworkClientPlayer > ReceivedInputs Declaration public event Action<int, uint, ArraySegment<MatchInput>> ReceivedInputs Event Type Type Description Action < System.Int32 , System.UInt32 , ArraySegment < MatchInput >> Implements INetworkServer IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkGameSetup.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkGameSetup.html",
    "title": "Class NetworkGameSetup | Fantasy Crescendo",
    "keywords": "Class NetworkGameSetup Inheritance MonoBehaviour NetworkGameSetup Implements IValidator < MatchConfig > Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public sealed class NetworkGameSetup : MonoBehaviour, IValidator<MatchConfig> Fields CharacterSelectMenu Declaration public CharacterSelectMenu CharacterSelectMenu Field Value Type Description CharacterSelectMenu GameSetupMenu Declaration public GameSetupMenu GameSetupMenu Field Value Type Description GameSetupMenu Methods CloseConnections() Declaration public void CloseConnections() Explicit Interface Implementations IValidator<MatchConfig>.IsValid(MatchConfig) Declaration bool IValidator<MatchConfig>.IsValid(MatchConfig obj) Parameters Type Name Description MatchConfig obj Returns Type Description System.Boolean Implements IValidator<T>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkHost.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkHost.html",
    "title": "Class NetworkHost | Fantasy Crescendo",
    "keywords": "Class NetworkHost Inheritance IDisposable NetworkHost Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public class NetworkHost : IDisposable Properties Client Declaration public INetworkClient Client { get; set; } Property Value Type Description INetworkClient Server Declaration public INetworkServer Server { get; set; } Property Value Type Description INetworkServer Methods Create(Type, NetworkHostConfig) Declaration public static NetworkHost Create(Type interfaceType, NetworkHostConfig config) Parameters Type Name Description Type interfaceType NetworkHostConfig config Returns Type Description NetworkHost Dispose() Declaration public void Dispose() Update() Declaration public void Update()"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkHostConfig.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkHostConfig.html",
    "title": "Struct NetworkHostConfig | Fantasy Crescendo",
    "keywords": "Struct NetworkHostConfig Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public struct NetworkHostConfig Fields ClientConfig Declaration public NetworkClientConfig ClientConfig Field Value Type Description NetworkClientConfig ServerConfig Declaration public NetworkServerConfig ServerConfig Field Value Type Description NetworkServerConfig"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkHostController.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkHostController.html",
    "title": "Class NetworkHostController | Fantasy Crescendo",
    "keywords": "Class NetworkHostController Inheritance System.Object NetworkHostController Implements IMatchController IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public sealed class NetworkHostController : IMatchController, IDisposable Constructors NetworkHostController(ClientGameController, ServerGameController) Declaration public NetworkHostController(ClientGameController clientController, ServerGameController serverController) Parameters Type Name Description ClientGameController clientController ServerGameController serverController Properties CurrentState Declaration public MatchState CurrentState { get; set; } Property Value Type Description MatchState InputSource Declaration public IMatchInputSource InputSource { get; set; } Property Value Type Description IMatchInputSource Simulation Declaration public ISimulation<MatchState, MatchInputContext> Simulation { get; set; } Property Value Type Description ISimulation < MatchState , MatchInputContext > Timestep Declaration public uint Timestep { get; set; } Property Value Type Description System.UInt32 Methods Dispose() Declaration public void Dispose() Update() Declaration public void Update() Implements IMatchController IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkInterface.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkInterface.html",
    "title": "Class NetworkInterface | Fantasy Crescendo",
    "keywords": "Class NetworkInterface Inheritance System.Object NetworkInterface SteamNetworkInterface Implements INetworkInterface IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public abstract class NetworkInterface : INetworkInterface, IDisposable Constructors NetworkInterface(Int32) Declaration protected NetworkInterface(int maxMsgSize) Parameters Type Name Description System.Int32 maxMsgSize Fields ReadBuffer Declaration protected byte[] ReadBuffer Field Value Type Description System.Byte [] Properties Config Declaration public NetworkInterfaceConfiguration Config { get; } Property Value Type Description NetworkInterfaceConfiguration Connections Declaration public IReadOnlyCollection<NetworkConnection> Connections { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < NetworkConnection > IsDisposed Declaration protected bool IsDisposed { get; } Property Value Type Description System.Boolean MessageHandlers Declaration public MessageHandlers MessageHandlers { get; } Property Value Type Description MessageHandlers Methods AddConnection(Int32) Declaration protected NetworkConnection AddConnection(int connectionId) Parameters Type Name Description System.Int32 connectionId Returns Type Description NetworkConnection Connect(NetworkConnectionConfig) Declaration public abstract Task<NetworkConnection> Connect(NetworkConnectionConfig config) Parameters Type Name Description NetworkConnectionConfig config Returns Type Description Task < NetworkConnection > Disconnect(Int32) Declaration public abstract void Disconnect(int connectionId) Parameters Type Name Description System.Int32 connectionId Dispose() Declaration public virtual void Dispose() GetConnection(Int32) Declaration protected NetworkConnection GetConnection(int connectionId) Parameters Type Name Description System.Int32 connectionId Returns Type Description NetworkConnection GetConnectionStats(Int32) Declaration public virtual ConnectionStats GetConnectionStats(int connectionId) Parameters Type Name Description System.Int32 connectionId Returns Type Description ConnectionStats Initialize(NetworkInterfaceConfiguration) Declaration public virtual Task Initialize(NetworkInterfaceConfiguration config) Parameters Type Name Description NetworkInterfaceConfiguration config Returns Type Description Task OnDisconnect(Int32, Exception) Declaration protected virtual void OnDisconnect(int connectionId, Exception exception) Parameters Type Name Description System.Int32 connectionId Exception exception OnNewConnection(Int32) Declaration protected virtual NetworkConnection OnNewConnection(int connectionId) Parameters Type Name Description System.Int32 connectionId Returns Type Description NetworkConnection OnRecieveData(Int32, Byte[], Int32) Declaration protected virtual void OnRecieveData(int connectionId, byte[] data, int dataSize) Parameters Type Name Description System.Int32 connectionId System.Byte [] data System.Int32 dataSize RemoveConnection(NetworkConnection) Declaration protected void RemoveConnection(NetworkConnection connection) Parameters Type Name Description NetworkConnection connection Send(Int32, Byte[], Int32, NetworkReliablity) Declaration public void Send(int connectionId, byte[] buffer, int count, NetworkReliablity reliability) Parameters Type Name Description System.Int32 connectionId System.Byte [] buffer System.Int32 count NetworkReliablity reliability SendImpl(Int32, Byte[], Int32, NetworkReliablity) Declaration protected abstract void SendImpl(int connectionId, byte[] buffer, int count, NetworkReliablity reliablity) Parameters Type Name Description System.Int32 connectionId System.Byte [] buffer System.Int32 count NetworkReliablity reliablity Update() Declaration public abstract void Update() Events OnPeerConnected Declaration public event Action<NetworkConnection> OnPeerConnected Event Type Type Description Action < NetworkConnection > OnPeerDisconnected Declaration public event Action<NetworkConnection> OnPeerDisconnected Event Type Type Description Action < NetworkConnection > Implements INetworkInterface IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkInterfaceConfiguration.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkInterfaceConfiguration.html",
    "title": "Class NetworkInterfaceConfiguration | Fantasy Crescendo",
    "keywords": "Class NetworkInterfaceConfiguration Inheritance System.Object NetworkInterfaceConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public class NetworkInterfaceConfiguration Fields Port Declaration public int Port Field Value Type Description System.Int32 ServerSteamLobbyMaxSize Declaration public int ServerSteamLobbyMaxSize Field Value Type Description System.Int32 ServerSteamLobbyType Declaration public ELobbyType ServerSteamLobbyType Field Value Type Description ELobbyType Type Declaration public NetworkInterfaceType Type Field Value Type Description NetworkInterfaceType"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkInterfaceType.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkInterfaceType.html",
    "title": "Enum NetworkInterfaceType | Fantasy Crescendo",
    "keywords": "Enum NetworkInterfaceType Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public enum NetworkInterfaceType Fields Name Description Client Server"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkManager.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkManager.html",
    "title": "Class NetworkManager | Fantasy Crescendo",
    "keywords": "Class NetworkManager Singleton MonoBehaviour manager of network related operations. Inheritance MonoBehaviour NetworkManager Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public class NetworkManager : MonoBehaviour Properties Client Gets the currently active NetworkClient. Null if not active. Declaration public INetworkClient Client { get; } Property Value Type Description INetworkClient Host Gets the currently active NetworkHost. Null if not active. Declaration public NetworkHost Host { get; } Property Value Type Description NetworkHost Instance Gets the singleton instance of NetworkManager. Declaration public static NetworkManager Instance { get; } Property Value Type Description NetworkManager IsClient Gets whether the current instance is a client to a server. True if the NetworkClient is currently active. Declaration public bool IsClient { get; } Property Value Type Description System.Boolean IsHost Gets whether both server and client are active on the current game. True if both client and server are active. Declaration public bool IsHost { get; } Property Value Type Description System.Boolean IsNetworkActive Gets whether any network activity is currently being. True if either client or server are active. Declaration public bool IsNetworkActive { get; } Property Value Type Description System.Boolean IsServer Gets whether the current instance is server to clients. True if the NetworkClient is currently active. Declaration public bool IsServer { get; } Property Value Type Description System.Boolean Matchmaker Declaration public IMatchmaker Matchmaker { get; } Property Value Type Description IMatchmaker Server Gets the currently active NetworkServer. Null if not active. Declaration public INetworkServer Server { get; } Property Value Type Description INetworkServer Methods CreateMatchController(MatchConfig) Declaration public IMatchController CreateMatchController(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description IMatchController StartClient(NetworkClientConfig, Type) Starts the local NetworkClient. Declaration public INetworkClient StartClient(NetworkClientConfig config, Type interfaceType = null) Parameters Type Name Description NetworkClientConfig config the NetworkClientConfig used to start the server. Type interfaceType INetworkInterface type to use, uses default if null. Returns Type Description INetworkClient the NetworkClient created or fetched. Remarks This does not connect the client to any server. This only opens the socket for a client. If a client is already active, another client will not be started. and the active client will be returned. StartHost(NetworkHostConfig, Type) Starts the local NetworkServer and NetworkClient, and connects the client to the local server. Declaration public Task<NetworkHost> StartHost(NetworkHostConfig config, Type interfaceType = null) Parameters Type Name Description NetworkHostConfig config the NetworkHostConfig used to start the host. Type interfaceType INetworkInterface type to use, uses default if null. Returns Type Description Task < NetworkHost > an awaitable task for the resultant NetworkHost Remarks This will open a connection and does not immediately resolve. To assure the connection is complete. Await the returned task. If a client is already active, another client will not be started. and the active client will be returned. StartServer(NetworkServerConfig, Type) Starts the local NetworkServer. Declaration public Task<INetworkServer> StartServer(NetworkServerConfig config, Type interfaceType = null) Parameters Type Name Description NetworkServerConfig config the NetworkServerConfig used to start the server. Type interfaceType INetworkInterface type to use, uses default if null. Returns Type Description Task < INetworkServer > the NetworkServer created or fetched. Remarks This does not connect the server to any client. This only opens the socket for a server. If a server is already active, another server will not be started. and the active server will be returned. StopClient() Stops the local NetworkClient. Declaration public void StopClient() Remarks This will forcibly disconnect the client from any connected servers. StopHost() Stops both the local client and server.. Declaration public void StopHost() Remarks This will forcibly disconnect all connected peers. StopServer() Stops the local NetworkServer. Declaration public void StopServer() Remarks This will forcibly disconnect all connected clients."
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkMatch.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkMatch.html",
    "title": "Class NetworkMatch | Fantasy Crescendo",
    "keywords": "Class NetworkMatch Inheritance System.Object Match DefaultMatch NetworkMatch Inherited Members Match.RunMatch(MatchConfig, Boolean) Match.CreateRules(MatchConfig) Match.CreateSimulation(MatchConfig) Match.CreateInitialState(MatchConfig) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public class NetworkMatch : DefaultMatch Constructors NetworkMatch(NetworkManager) Declaration public NetworkMatch(NetworkManager networkManager) Parameters Type Name Description NetworkManager networkManager Methods CreateMatchController(MatchConfig) Declaration protected override IMatchController CreateMatchController(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description IMatchController Overrides Match.CreateMatchController(MatchConfig) InitializeMatch(MatchManager, MatchConfig) Declaration protected override Task InitializeMatch(MatchManager manager, MatchConfig config) Parameters Type Name Description MatchManager manager MatchConfig config Returns Type Description Task Overrides DefaultMatch.InitializeMatch(MatchManager, MatchConfig)"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkServerConfig.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkServerConfig.html",
    "title": "Struct NetworkServerConfig | Fantasy Crescendo",
    "keywords": "Struct NetworkServerConfig Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public struct NetworkServerConfig Fields Port Declaration public int Port Field Value Type Description System.Int32"
  },
  "api/HouraiTeahouse.FantasyCrescendo.AggregateObject-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.AggregateObject-1.html",
    "title": "Class AggregateObject<T> | Fantasy Crescendo",
    "keywords": "Class AggregateObject<T> Inheritance System.Object AggregateObject<T> AggregateSimulation<TState, TContext> AggregateView<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public abstract class AggregateObject<T> Type Parameters Name Description T Constructors AggregateObject(IEnumerable<T>) Declaration protected AggregateObject(IEnumerable<T> subitems) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> subitems Properties Subitems Declaration protected ReadOnlyCollection<T> Subitems { get; } Property Value Type Description ReadOnlyCollection <T>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.AggregateSimulation-2.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.AggregateSimulation-2.html",
    "title": "Class AggregateSimulation<TState, TContext> | Fantasy Crescendo",
    "keywords": "Class AggregateSimulation<TState, TContext> Inheritance System.Object AggregateObject < ISimulation <TState, TContext>> AggregateSimulation<TState, TContext> Implements ISimulation <TState, TContext> IDisposable Inherited Members AggregateObject<ISimulation<TState, TContext>>.Subitems System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class AggregateSimulation<TState, TContext> : AggregateObject<ISimulation<TState, TContext>>, ISimulation<TState, TContext>, IDisposable Type Parameters Name Description TState TContext Constructors AggregateSimulation(IEnumerable<ISimulation<TState, TContext>>) Declaration public AggregateSimulation(IEnumerable<ISimulation<TState, TContext>> simulations) Parameters Type Name Description System.Collections.Generic.IEnumerable < ISimulation <TState, TContext>> simulations Methods Dispose() Declaration public void Dispose() Simulate(ref TState, TContext) Declaration public void Simulate(ref TState state, TContext context) Parameters Type Name Description TState state TContext context Implements ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.AggregateView-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.AggregateView-1.html",
    "title": "Class AggregateView<T> | Fantasy Crescendo",
    "keywords": "Class AggregateView<T> Inheritance System.Object AggregateObject < IStateView <T>> AggregateView<T> Implements IStateView <T> IDisposable Inherited Members AggregateObject<IStateView<T>>.Subitems System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class AggregateView<T> : AggregateObject<IStateView<T>>, IStateView<T>, IDisposable Type Parameters Name Description T Constructors AggregateView(IEnumerable<IStateView<T>>) Declaration public AggregateView(IEnumerable<IStateView<T>> views) Parameters Type Name Description System.Collections.Generic.IEnumerable < IStateView <T>> views Methods Dispose() Declaration public void Dispose() UpdateView(T) Declaration public void UpdateView(in T state) Parameters Type Name Description T state Implements IStateView<S> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.AnalyticsManager.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.AnalyticsManager.html",
    "title": "Class AnalyticsManager | Fantasy Crescendo",
    "keywords": "Class AnalyticsManager Inheritance MonoBehaviour AnalyticsManager Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class AnalyticsManager : MonoBehaviour"
  },
  "api/HouraiTeahouse.FantasyCrescendo.AnimationTriggerOnChange.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.AnimationTriggerOnChange.html",
    "title": "Class AnimationTriggerOnChange | Fantasy Crescendo",
    "keywords": "Class AnimationTriggerOnChange Inheritance MonoBehaviour AnimationTriggerOnChange Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class AnimationTriggerOnChange : MonoBehaviour Fields Animators Declaration public Animator[] Animators Field Value Type Description Animator [] Trigger Declaration public string Trigger Field Value Type Description System.String TriggerOnDisable Declaration public bool TriggerOnDisable Field Value Type Description System.Boolean TriggerOnEnable Declaration public bool TriggerOnEnable Field Value Type Description System.Boolean"
  },
  "api/HouraiTeahouse.FantasyCrescendo.ArrayUtil.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.ArrayUtil.html",
    "title": "Class ArrayUtil | Fantasy Crescendo",
    "keywords": "Class ArrayUtil Inheritance System.Object ArrayUtil Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public static class ArrayUtil Methods AreEqual<T>(T[], T[]) Declaration public static bool AreEqual<T>(T[] a, T[] b) Parameters Type Name Description T[] a T[] b Returns Type Description System.Boolean Type Parameters Name Description T ConvertToArray<T>(IEnumerable<T>, out Int32) Declaration public static T[] ConvertToArray<T>(IEnumerable<T> values, out int size) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> values System.Int32 size Returns Type Description T[] Type Parameters Name Description T GetOrderedHash<T>(T[]) Declaration public static int GetOrderedHash<T>(T[] array) Parameters Type Name Description T[] array Returns Type Description System.Int32 Type Parameters Name Description T GetUnorderedHash<T>(T[]) Declaration public static int GetUnorderedHash<T>(T[] array) Parameters Type Name Description T[] array Returns Type Description System.Int32 Type Parameters Name Description T Join<T>(T[], T[], Int32) Declaration public static int Join<T>(T[] lhs, T[] rhs, int lhsSize) Parameters Type Name Description T[] lhs T[] rhs System.Int32 lhsSize Returns Type Description System.Int32 Type Parameters Name Description T RemoveDuplicates<T>(T[]) Declaration public static int RemoveDuplicates<T>(T[] array) Parameters Type Name Description T[] array Returns Type Description System.Int32 Type Parameters Name Description T"
  },
  "api/HouraiTeahouse.FantasyCrescendo.AudioConfig.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.AudioConfig.html",
    "title": "Class AudioConfig | Fantasy Crescendo",
    "keywords": "Class AudioConfig Inheritance ScriptableObject AudioConfig Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class AudioConfig : ScriptableObject Fields MusicMixer Declaration public AudioMixerGroup MusicMixer Field Value Type Description AudioMixerGroup SoundEffectsMixer Declaration public AudioMixerGroup SoundEffectsMixer Field Value Type Description AudioMixerGroup Methods CreateSFXAudioSource(Single) Declaration public AudioSource CreateSFXAudioSource(float volume = 1F) Parameters Type Name Description System.Single volume Returns Type Description AudioSource"
  },
  "api/HouraiTeahouse.FantasyCrescendo.AudioManager.VolumeOptionBinding.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.AudioManager.VolumeOptionBinding.html",
    "title": "Struct AudioManager.VolumeOptionBinding | Fantasy Crescendo",
    "keywords": "Struct AudioManager.VolumeOptionBinding A serializable binding between an Option and a AudioMixer control. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public struct VolumeOptionBinding Fields ControlId The control ID. This is the same string that is used as a exposed parameter. Declaration public string ControlId Field Value Type Description System.String Option The Option bound to the volume control Declaration public Option Option Field Value Type Description Option"
  },
  "api/HouraiTeahouse.FantasyCrescendo.AudioManager.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.AudioManager.html",
    "title": "Class AudioManager | Fantasy Crescendo",
    "keywords": "Class AudioManager Singleton manager of all audio related functions in the game. Inheritance MonoBehaviour AudioManager Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class AudioManager : MonoBehaviour Fields MasterMixer The AudioMixer for the entire game Declaration public AudioMixer MasterMixer Field Value Type Description AudioMixer MaxVolume Declaration public float MaxVolume Field Value Type Description System.Single MinVolume Declaration public float MinVolume Field Value Type Description System.Single OptionBindings The set of all bindings between AudioMixer volume controls and Options. Declaration public AudioManager.VolumeOptionBinding[] OptionBindings Field Value Type Description AudioManager.VolumeOptionBinding [] Properties Instance Gets the singleton instance of the AudioManager. Declaration public static AudioManager Instance { get; } Property Value Type Description AudioManager Methods Rent() Rents an AudioSource from the sound effects pool. Declaration public AudioSource Rent() Returns Type Description AudioSource the rented AudioSource Remarks There is no need to return the AudioSource to the pool. It will automatically be cleaned up when the sound effect is no longer playing or is destroyed."
  },
  "api/HouraiTeahouse.FantasyCrescendo.BGM.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.BGM.html",
    "title": "Class BGM | Fantasy Crescendo",
    "keywords": "Class BGM Inheritance ScriptableObject BGM Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class BGM : ScriptableObject Fields Author Declaration public string Author Field Value Type Description System.String DefaultWeight Declaration public float DefaultWeight Field Value Type Description System.Single Original Declaration public string Original Field Value Type Description System.String Properties Clip Declaration public IAsset<AudioClip> Clip { get; } Property Value Type Description IAsset < AudioClip >"
  },
  "api/HouraiTeahouse.FantasyCrescendo.BGMPlayer.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.BGMPlayer.html",
    "title": "Class BGMPlayer | Fantasy Crescendo",
    "keywords": "Class BGMPlayer Inheritance MonoBehaviour BGMPlayer Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class BGMPlayer : MonoBehaviour Fields AudioSource Declaration public AudioSource AudioSource Field Value Type Description AudioSource BGM Declaration public BGM BGM Field Value Type Description BGM PlayOnAwake Declaration public bool PlayOnAwake Field Value Type Description System.Boolean Scene Declaration public SceneData Scene Field Value Type Description SceneData Methods LoadBGM(BGM) Declaration public Task LoadBGM(BGM bgm) Parameters Type Name Description BGM bgm Returns Type Description Task PlayBGM(BGM) Declaration public Task PlayBGM(BGM bgm) Parameters Type Name Description BGM bgm Returns Type Description Task"
  },
  "api/HouraiTeahouse.FantasyCrescendo.BootstrapSceneLoader.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.BootstrapSceneLoader.html",
    "title": "Class BootstrapSceneLoader | Fantasy Crescendo",
    "keywords": "Class BootstrapSceneLoader Inheritance MonoBehaviour BootstrapSceneLoader Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class BootstrapSceneLoader : MonoBehaviour"
  },
  "api/HouraiTeahouse.FantasyCrescendo.BufferedInputSource-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.BufferedInputSource-1.html",
    "title": "Class BufferedInputSource<I> | Fantasy Crescendo",
    "keywords": "Class BufferedInputSource<I> Inheritance System.Object BufferedInputSource<I> Implements IInputSource <I> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class BufferedInputSource<I> : IInputSource<I> Type Parameters Name Description I Constructors BufferedInputSource(Int32, IInputSource<I>) Declaration public BufferedInputSource(int bufferSize, IInputSource<I> baseInputSource) Parameters Type Name Description System.Int32 bufferSize IInputSource <I> baseInputSource Methods SampleInput() Declaration public I SampleInput() Returns Type Description I Implements IInputSource<I>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.CameraController.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.CameraController.html",
    "title": "Class CameraController | Fantasy Crescendo",
    "keywords": "Class CameraController Inheritance MonoBehaviour CameraController Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class CameraController : MonoBehaviour Fields Camera Declaration public Camera Camera Field Value Type Description Camera Target Declaration public CameraTarget Target Field Value Type Description CameraTarget Properties Instance Declaration public static CameraController Instance { get; } Property Value Type Description CameraController"
  },
  "api/HouraiTeahouse.FantasyCrescendo.CameraTarget.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.CameraTarget.html",
    "title": "Class CameraTarget | Fantasy Crescendo",
    "keywords": "Class CameraTarget Inheritance MonoBehaviour CameraTarget Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class CameraTarget : MonoBehaviour Fields FieldOfView Declaration public float FieldOfView Field Value Type Description System.Single"
  },
  "api/HouraiTeahouse.FantasyCrescendo.CharacterData.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.CharacterData.html",
    "title": "Class CharacterData | Fantasy Crescendo",
    "keywords": "Class CharacterData A data object representing a playable character. Inheritance ScriptableObject GameDataBase CharacterData Implements IEntity Inherited Members GameDataBase.Id GameDataBase.IsSelectable GameDataBase.IsVisible GameDataBase.IsDebug Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class CharacterData : GameDataBase, IEntity Fields LongName Declaration public string LongName Field Value Type Description System.String PortraitCropCenter Declaration public Vector2 PortraitCropCenter Field Value Type Description Vector2 PortraitCropSize Declaration public float PortraitCropSize Field Value Type Description System.Single ShortName Declaration public string ShortName Field Value Type Description System.String Properties HomeStage Declaration public IAsset<SceneData> HomeStage { get; } Property Value Type Description IAsset < SceneData > Icon Declaration public IAsset<Sprite> Icon { get; } Property Value Type Description IAsset < Sprite > PalleteCount Declaration public int PalleteCount { get; } Property Value Type Description System.Int32 PortraitCropRect Declaration public Rect PortraitCropRect { get; } Property Value Type Description Rect VictoryTheme Declaration public IAsset<AudioClip> VictoryTheme { get; } Property Value Type Description IAsset < AudioClip > Methods GetPallete(Int32) Declaration public CharacterPallete GetPallete(int index) Parameters Type Name Description System.Int32 index Returns Type Description CharacterPallete ToString() Declaration public override string ToString() Returns Type Description System.String Unload() Declaration public void Unload() Implements IEntity"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterMovement.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterMovement.html",
    "title": "Class CharacterMovement | Fantasy Crescendo",
    "keywords": "Class CharacterMovement Inheritance MonoBehaviour PlayerComponent CharacterMovement Implements IPlayerView IPlayerSimulation Inherited Members PlayerComponent.Presimulate(PlayerState) PlayerComponent.UpdateView(PlayerState) PlayerComponent.Dispose() Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class CharacterMovement : PlayerComponent, IPlayerView, IPlayerSimulation Fields JumpPower Declaration public float[] JumpPower Field Value Type Description System.Single [] Physics Declaration public CharacterPhysics Physics Field Value Type Description CharacterPhysics StateMachine Declaration public CharacterStateMachine StateMachine Field Value Type Description CharacterStateMachine Properties MaxJumpCount Declaration public int MaxJumpCount { get; } Property Value Type Description System.Int32 Methods ApplyControlledMovement(ref PlayerState, Vector2) Declaration public void ApplyControlledMovement(ref PlayerState state, Vector2 movementInput) Parameters Type Name Description PlayerState state Vector2 movementInput CanJump(PlayerState) Declaration public bool CanJump(in PlayerState state) Parameters Type Name Description PlayerState state Returns Type Description System.Boolean GetJumpPower(PlayerState) Declaration public float GetJumpPower(in PlayerState state) Parameters Type Name Description PlayerState state Returns Type Description System.Single Initialize(PlayerConfig, Boolean) Declaration public override Task Initialize(PlayerConfig config, bool isView) Parameters Type Name Description PlayerConfig config System.Boolean isView Returns Type Description Task Overrides PlayerComponent.Initialize(PlayerConfig, Boolean) Jump(ref PlayerState) Declaration public void Jump(ref PlayerState state) Parameters Type Name Description PlayerState state ResetState(ref PlayerState) Declaration public override void ResetState(ref PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.ResetState(ref PlayerState) Simulate(ref PlayerState, PlayerInputContext) Declaration public override void Simulate(ref PlayerState state, PlayerInputContext input) Parameters Type Name Description PlayerState state PlayerInputContext input Overrides PlayerComponent.Simulate(ref PlayerState, PlayerInputContext) Implements IPlayerView IPlayerSimulation"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterMover.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterMover.html",
    "title": "Class CharacterMover | Fantasy Crescendo",
    "keywords": "Class CharacterMover Inheritance System.Object CharacterMover Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public abstract class CharacterMover Properties Character Declaration public CharacterMovement Character { get; set; } Property Value Type Description CharacterMovement Methods Move(ref PlayerState, PlayerInputContext) Declaration public abstract void Move(ref PlayerState state, PlayerInputContext input) Parameters Type Name Description PlayerState state PlayerInputContext input ShouldMove(ref PlayerState) Declaration public abstract bool ShouldMove(ref PlayerState state) Parameters Type Name Description PlayerState state Returns Type Description System.Boolean"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterPhysics.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterPhysics.html",
    "title": "Class CharacterPhysics | Fantasy Crescendo",
    "keywords": "Class CharacterPhysics Inheritance MonoBehaviour PlayerComponent CharacterPhysics Implements IPlayerView IPlayerSimulation Inherited Members PlayerComponent.Dispose() Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class CharacterPhysics : PlayerComponent, IPlayerView, IPlayerSimulation Fields CharacterController Declaration public CharacterController CharacterController Field Value Type Description CharacterController FastFallSpeed Declaration public float FastFallSpeed Field Value Type Description System.Single Gravity Declaration public float Gravity Field Value Type Description System.Single LedgeGrabBone Declaration public Transform LedgeGrabBone Field Value Type Description Transform MaxFallSpeed Declaration public float MaxFallSpeed Field Value Type Description System.Single Properties IsGrounded Declaration public bool IsGrounded { get; } Property Value Type Description System.Boolean Methods Initialize(PlayerConfig, Boolean) Declaration public override Task Initialize(PlayerConfig config, bool isView) Parameters Type Name Description PlayerConfig config System.Boolean isView Returns Type Description Task Overrides PlayerComponent.Initialize(PlayerConfig, Boolean) Presimulate(PlayerState) Declaration public override void Presimulate(in PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.Presimulate(PlayerState) ResetState(ref PlayerState) Declaration public override void ResetState(ref PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.ResetState(ref PlayerState) Simulate(ref PlayerState, PlayerInputContext) Declaration public override void Simulate(ref PlayerState state, PlayerInputContext input) Parameters Type Name Description PlayerState state PlayerInputContext input Overrides PlayerComponent.Simulate(ref PlayerState, PlayerInputContext) UpdateView(PlayerState) Declaration public override void UpdateView(in PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.UpdateView(PlayerState) Implements IPlayerView IPlayerSimulation"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterRespawn.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterRespawn.html",
    "title": "Class CharacterRespawn | Fantasy Crescendo",
    "keywords": "Class CharacterRespawn Inheritance MonoBehaviour PlayerComponent CharacterRespawn Implements IPlayerView IPlayerSimulation Inherited Members PlayerComponent.Presimulate(PlayerState) PlayerComponent.Dispose() Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class CharacterRespawn : PlayerComponent, IPlayerView, IPlayerSimulation Fields Offset Declaration public Vector3 Offset Field Value Type Description Vector3 Methods Initialize(PlayerConfig, Boolean) Declaration public override Task Initialize(PlayerConfig config, bool isView = false) Parameters Type Name Description PlayerConfig config System.Boolean isView Returns Type Description Task Overrides PlayerComponent.Initialize(PlayerConfig, Boolean) ResetState(ref PlayerState) Declaration public override void ResetState(ref PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.ResetState(ref PlayerState) Simulate(ref PlayerState, PlayerInputContext) Declaration public override void Simulate(ref PlayerState state, PlayerInputContext input) Parameters Type Name Description PlayerState state PlayerInputContext input Overrides PlayerComponent.Simulate(ref PlayerState, PlayerInputContext) UpdateView(PlayerState) Declaration public override void UpdateView(in PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.UpdateView(PlayerState) Implements IPlayerView IPlayerSimulation"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterShield.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterShield.html",
    "title": "Class CharacterShield | Fantasy Crescendo",
    "keywords": "Class CharacterShield Inheritance MonoBehaviour PlayerComponent CharacterShield Implements IPlayerView IPlayerSimulation Inherited Members PlayerComponent.Presimulate(PlayerState) PlayerComponent.Dispose() PlayerComponent.ResetState(PlayerState) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public sealed class CharacterShield : PlayerComponent, IPlayerView, IPlayerSimulation Fields DepletionRate Declaration public uint DepletionRate Field Value Type Description System.UInt32 MaxShieldHealth Declaration public uint MaxShieldHealth Field Value Type Description System.UInt32 RecoveryCooldown Declaration public uint RecoveryCooldown Field Value Type Description System.UInt32 RegenRate Declaration public uint RegenRate Field Value Type Description System.UInt32 ResetHealth Declaration public float ResetHealth Field Value Type Description System.Single ShieldPrefab Declaration public GameObject ShieldPrefab Field Value Type Description GameObject ShieldScale Declaration public float ShieldScale Field Value Type Description System.Single ShieldSize Declaration public AnimationCurve ShieldSize Field Value Type Description AnimationCurve StateMachine Declaration public CharacterStateMachine StateMachine Field Value Type Description CharacterStateMachine TargetBone Declaration public Transform TargetBone Field Value Type Description Transform Methods Initialize(PlayerConfig, Boolean) Declaration public override Task Initialize(PlayerConfig config, bool isView) Parameters Type Name Description PlayerConfig config System.Boolean isView Returns Type Description Task Overrides PlayerComponent.Initialize(PlayerConfig, Boolean) IsShieldActive(PlayerState) Declaration public bool IsShieldActive(in PlayerState state) Parameters Type Name Description PlayerState state Returns Type Description System.Boolean IsShieldBroken(PlayerState) Declaration public bool IsShieldBroken(in PlayerState state) Parameters Type Name Description PlayerState state Returns Type Description System.Boolean Simulate(ref PlayerState, PlayerInputContext) Declaration public override void Simulate(ref PlayerState state, PlayerInputContext input) Parameters Type Name Description PlayerState state PlayerInputContext input Overrides PlayerComponent.Simulate(ref PlayerState, PlayerInputContext) UpdateView(PlayerState) Declaration public override void UpdateView(in PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.UpdateView(PlayerState) Implements IPlayerView IPlayerSimulation"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterStateExtensions.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterStateExtensions.html",
    "title": "Class CharacterStateExtensions | Fantasy Crescendo",
    "keywords": "Class CharacterStateExtensions Inheritance System.Object CharacterStateExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public static class CharacterStateExtensions Methods AddTransitionTo(IEnumerable<State>, State) Declaration public static IEnumerable<State> AddTransitionTo(this IEnumerable<State> states, State state) Parameters Type Name Description System.Collections.Generic.IEnumerable < State > states State state Returns Type Description System.Collections.Generic.IEnumerable < State > Chain(IEnumerable<State>) Declaration public static void Chain(this IEnumerable<State> states) Parameters Type Name Description System.Collections.Generic.IEnumerable < State > states"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterStateMachine.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterStateMachine.html",
    "title": "Class CharacterStateMachine | Fantasy Crescendo",
    "keywords": "Class CharacterStateMachine Inheritance MonoBehaviour PlayerComponent CharacterStateMachine Implements IPlayerView IPlayerSimulation Inherited Members PlayerComponent.Presimulate(PlayerState) PlayerComponent.Dispose() Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class CharacterStateMachine : PlayerComponent, IPlayerView, IPlayerSimulation Fields States Declaration public CharacterControllerBuilder States Field Value Type Description CharacterControllerBuilder Properties StateController Declaration public StateController StateController { get; } Property Value Type Description StateController Methods GetControllerState(PlayerState) Declaration public State GetControllerState(in PlayerState state) Parameters Type Name Description PlayerState state Returns Type Description State GetControllerState(UInt32) Declaration public State GetControllerState(uint id) Parameters Type Name Description System.UInt32 id Returns Type Description State Initialize(PlayerConfig, Boolean) Declaration public override Task Initialize(PlayerConfig config, bool isView = false) Parameters Type Name Description PlayerConfig config System.Boolean isView Returns Type Description Task Overrides PlayerComponent.Initialize(PlayerConfig, Boolean) ResetState(ref PlayerState) Declaration public override void ResetState(ref PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.ResetState(ref PlayerState) Simulate(ref PlayerState, PlayerInputContext) Declaration public override void Simulate(ref PlayerState state, PlayerInputContext input) Parameters Type Name Description PlayerState state PlayerInputContext input Overrides PlayerComponent.Simulate(ref PlayerState, PlayerInputContext) UpdateView(PlayerState) Declaration public override void UpdateView(in PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.UpdateView(PlayerState) Implements IPlayerView IPlayerSimulation"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterTeeter.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterTeeter.html",
    "title": "Class CharacterTeeter | Fantasy Crescendo",
    "keywords": "Class CharacterTeeter Inheritance MonoBehaviour PlayerComponent CharacterTeeter Implements IPlayerView IPlayerSimulation Inherited Members PlayerComponent.Presimulate(PlayerState) PlayerComponent.Dispose() Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class CharacterTeeter : PlayerComponent, IPlayerView, IPlayerSimulation Fields CheckRegions Declaration public Bounds[] CheckRegions Field Value Type Description Bounds [] Methods Initialize(PlayerConfig, Boolean) Declaration public override Task Initialize(PlayerConfig config, bool isView) Parameters Type Name Description PlayerConfig config System.Boolean isView Returns Type Description Task Overrides PlayerComponent.Initialize(PlayerConfig, Boolean) ResetState(ref PlayerState) Declaration public override void ResetState(ref PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.ResetState(ref PlayerState) Simulate(ref PlayerState, PlayerInputContext) Declaration public override void Simulate(ref PlayerState state, PlayerInputContext input) Parameters Type Name Description PlayerState state PlayerInputContext input Overrides PlayerComponent.Simulate(ref PlayerState, PlayerInputContext) UpdateView(PlayerState) Declaration public override void UpdateView(in PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.UpdateView(PlayerState) Implements IPlayerView IPlayerSimulation"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.JumpState.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.JumpState.html",
    "title": "Class JumpState | Fantasy Crescendo",
    "keywords": "Class JumpState Inheritance System.Object State JumpState Implements IEntity IStateView < PlayerState > ISimulation < PlayerState , PlayerInputContext > IDisposable Inherited Members State.Name State.Id State.Data State.AnimatorName State.AnimatorHash State.Transitions State.AddTransition(State.Transition) State.Passthrough(CharacterContext) State.EvaluateTransitions(CharacterContext) State.GetEntryPolicy(CharacterContext) State.OnStateUpdate(CharacterContext) State.OnStateExit(CharacterContext) State.Simulate(PlayerState, PlayerInputContext) State.UpdateView(PlayerState) State.Dispose() State.AddTransitionTo(State, Func<CharacterContext, Boolean>) State.Equals(Object) State.ToString() State.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class JumpState : State, IEntity, IStateView<PlayerState>, ISimulation<PlayerState, PlayerInputContext>, IDisposable Methods Initalize(PlayerConfig, GameObject, Boolean) Declaration public override Task Initalize(PlayerConfig config, GameObject gameObject, bool isView) Parameters Type Name Description PlayerConfig config GameObject gameObject System.Boolean isView Returns Type Description Task Overrides State.Initalize(PlayerConfig, GameObject, Boolean) OnStateEnter(CharacterContext) Declaration public override void OnStateEnter(CharacterContext context) Parameters Type Name Description CharacterContext context Overrides State.OnStateEnter(CharacterContext) Implements IEntity IStateView<S> ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.LedgeState.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.LedgeState.html",
    "title": "Class LedgeState | Fantasy Crescendo",
    "keywords": "Class LedgeState Inheritance System.Object State LedgeState Implements IEntity IStateView < PlayerState > ISimulation < PlayerState , PlayerInputContext > IDisposable Inherited Members State.Name State.Id State.Data State.AnimatorName State.AnimatorHash State.Initalize(PlayerConfig, GameObject, Boolean) State.Transitions State.AddTransition(State.Transition) State.Passthrough(CharacterContext) State.EvaluateTransitions(CharacterContext) State.GetEntryPolicy(CharacterContext) State.OnStateEnter(CharacterContext) State.OnStateUpdate(CharacterContext) State.OnStateExit(CharacterContext) State.Simulate(PlayerState, PlayerInputContext) State.UpdateView(PlayerState) State.Dispose() State.AddTransitionTo(State, Func<CharacterContext, Boolean>) State.Equals(Object) State.ToString() State.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class LedgeState : State, IEntity, IStateView<PlayerState>, ISimulation<PlayerState, PlayerInputContext>, IDisposable Implements IEntity IStateView<S> ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.ShieldState.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.ShieldState.html",
    "title": "Class ShieldState | Fantasy Crescendo",
    "keywords": "Class ShieldState Inheritance System.Object State ShieldState Implements IEntity IStateView < PlayerState > ISimulation < PlayerState , PlayerInputContext > IDisposable Inherited Members State.Name State.Id State.Data State.AnimatorName State.AnimatorHash State.Initalize(PlayerConfig, GameObject, Boolean) State.Transitions State.AddTransition(State.Transition) State.Passthrough(CharacterContext) State.EvaluateTransitions(CharacterContext) State.GetEntryPolicy(CharacterContext) State.OnStateEnter(CharacterContext) State.OnStateUpdate(CharacterContext) State.OnStateExit(CharacterContext) State.Simulate(PlayerState, PlayerInputContext) State.UpdateView(PlayerState) State.Dispose() State.AddTransitionTo(State, Func<CharacterContext, Boolean>) State.Equals(Object) State.ToString() State.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class ShieldState : State, IEntity, IStateView<PlayerState>, ISimulation<PlayerState, PlayerInputContext>, IDisposable Implements IEntity IStateView<S> ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.SmashAttackState.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.SmashAttackState.html",
    "title": "Class SmashAttackState | Fantasy Crescendo",
    "keywords": "Class SmashAttackState Inheritance System.Object State SmashAttackState Implements IEntity IStateView < PlayerState > ISimulation < PlayerState , PlayerInputContext > IDisposable Inherited Members State.Name State.Id State.Data State.AnimatorName State.AnimatorHash State.Initalize(PlayerConfig, GameObject, Boolean) State.Transitions State.AddTransition(State.Transition) State.Passthrough(CharacterContext) State.EvaluateTransitions(CharacterContext) State.GetEntryPolicy(CharacterContext) State.OnStateEnter(CharacterContext) State.OnStateUpdate(CharacterContext) State.Simulate(PlayerState, PlayerInputContext) State.UpdateView(PlayerState) State.Dispose() State.AddTransitionTo(State, Func<CharacterContext, Boolean>) State.Equals(Object) State.ToString() State.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class SmashAttackState : State, IEntity, IStateView<PlayerState>, ISimulation<PlayerState, PlayerInputContext>, IDisposable Methods OnStateExit(CharacterContext) Declaration public override void OnStateExit(CharacterContext context) Parameters Type Name Description CharacterContext context Overrides State.OnStateExit(CharacterContext) Implements IEntity IStateView<S> ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.SmashChargeState.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.SmashChargeState.html",
    "title": "Class SmashChargeState | Fantasy Crescendo",
    "keywords": "Class SmashChargeState Inheritance System.Object State SmashChargeState Implements IEntity IStateView < PlayerState > ISimulation < PlayerState , PlayerInputContext > IDisposable Inherited Members State.Name State.Id State.Data State.AnimatorName State.AnimatorHash State.Initalize(PlayerConfig, GameObject, Boolean) State.Transitions State.AddTransition(State.Transition) State.Passthrough(CharacterContext) State.EvaluateTransitions(CharacterContext) State.GetEntryPolicy(CharacterContext) State.OnStateExit(CharacterContext) State.Simulate(PlayerState, PlayerInputContext) State.UpdateView(PlayerState) State.Dispose() State.AddTransitionTo(State, Func<CharacterContext, Boolean>) State.Equals(Object) State.ToString() State.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class SmashChargeState : State, IEntity, IStateView<PlayerState>, ISimulation<PlayerState, PlayerInputContext>, IDisposable Methods OnStateEnter(CharacterContext) Declaration public override void OnStateEnter(CharacterContext context) Parameters Type Name Description CharacterContext context Overrides State.OnStateEnter(CharacterContext) OnStateUpdate(CharacterContext) Declaration public override void OnStateUpdate(CharacterContext context) Parameters Type Name Description CharacterContext context Overrides State.OnStateUpdate(CharacterContext) Implements IEntity IStateView<S> ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.State.Transition.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.State.Transition.html",
    "title": "Delegate State.Transition | Fantasy Crescendo",
    "keywords": "Delegate State.Transition Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public delegate State Transition(CharacterContext context); Parameters Type Name Description CharacterContext context Returns Type Description State"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.State.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.State.html",
    "title": "Class State | Fantasy Crescendo",
    "keywords": "Class State Inheritance System.Object State JumpState LedgeState ShieldState SmashAttackState SmashChargeState Implements IEntity IStateView < PlayerState > ISimulation < PlayerState , PlayerInputContext > IDisposable Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class State : IEntity, IStateView<PlayerState>, ISimulation<PlayerState, PlayerInputContext>, IDisposable Constructors State() Declaration public State() Properties AnimatorHash Declaration public int AnimatorHash { get; } Property Value Type Description System.Int32 AnimatorName Declaration public string AnimatorName { get; } Property Value Type Description System.String Data Declaration public CharacterStateData Data { get; } Property Value Type Description CharacterStateData Id Declaration public uint Id { get; } Property Value Type Description System.UInt32 Name Declaration public string Name { get; } Property Value Type Description System.String Transitions Declaration public ReadOnlyCollection<State.Transition> Transitions { get; } Property Value Type Description ReadOnlyCollection < State.Transition > Methods AddTransition(State.Transition) Declaration public State AddTransition(State.Transition transition) Parameters Type Name Description State.Transition transition Returns Type Description State AddTransitionTo(State, Func<CharacterContext, Boolean>) Declaration public State AddTransitionTo(State state, Func<CharacterContext, bool> extraCheck = null) Parameters Type Name Description State state Func < CharacterContext , System.Boolean > extraCheck Returns Type Description State Dispose() Declaration public virtual void Dispose() Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) EvaluateTransitions(CharacterContext) Declaration public State EvaluateTransitions(CharacterContext context) Parameters Type Name Description CharacterContext context Returns Type Description State GetEntryPolicy(CharacterContext) Declaration public virtual StateEntryPolicy GetEntryPolicy(CharacterContext context) Parameters Type Name Description CharacterContext context Returns Type Description StateEntryPolicy GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() Initalize(PlayerConfig, GameObject, Boolean) Declaration public virtual Task Initalize(PlayerConfig config, GameObject gameObject, bool isView) Parameters Type Name Description PlayerConfig config GameObject gameObject System.Boolean isView Returns Type Description Task OnStateEnter(CharacterContext) Declaration public virtual void OnStateEnter(CharacterContext context) Parameters Type Name Description CharacterContext context OnStateExit(CharacterContext) Declaration public virtual void OnStateExit(CharacterContext context) Parameters Type Name Description CharacterContext context OnStateUpdate(CharacterContext) Declaration public virtual void OnStateUpdate(CharacterContext context) Parameters Type Name Description CharacterContext context Passthrough(CharacterContext) Declaration public virtual State Passthrough(CharacterContext context) Parameters Type Name Description CharacterContext context Returns Type Description State Simulate(ref PlayerState, PlayerInputContext) Declaration public virtual void Simulate(ref PlayerState state, PlayerInputContext simulate) Parameters Type Name Description PlayerState state PlayerInputContext simulate ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() UpdateView(PlayerState) Declaration public virtual void UpdateView(in PlayerState state) Parameters Type Name Description PlayerState state Operators Equality(State, State) Declaration public static bool operator ==(State lhs, State rhs) Parameters Type Name Description State lhs State rhs Returns Type Description System.Boolean Inequality(State, State) Declaration public static bool operator !=(State lhs, State rhs) Parameters Type Name Description State lhs State rhs Returns Type Description System.Boolean Implements IEntity IStateView<S> ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.StateAsset.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.StateAsset.html",
    "title": "Class StateAsset | Fantasy Crescendo",
    "keywords": "Class StateAsset Inheritance ScriptableObject BaseStateAsset StateAsset Inherited Members BaseStateAsset.StateMachine BaseStateAsset.Transitions BaseStateAsset.OnEnable() BaseStateAsset.Destroy() BaseStateAsset.CreateTransition(BaseStateAsset) BaseStateAsset.RemoveTransition(StateTransitionAsset) BaseStateAsset.RemoveTransitionsTo(BaseStateAsset) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class StateAsset : BaseStateAsset Fields StateData Declaration public CharacterStateData StateData Field Value Type Description CharacterStateData Methods BuildState(UInt32) Declaration public State BuildState(uint id) Parameters Type Name Description System.UInt32 id Returns Type Description State GetBaseStates() Declaration public override IEnumerable<StateAsset> GetBaseStates() Returns Type Description System.Collections.Generic.IEnumerable < StateAsset > Overrides BaseStateAsset.GetBaseStates()"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.StateController.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.StateController.html",
    "title": "Class StateController | Fantasy Crescendo",
    "keywords": "Class StateController Inheritance System.Object StateController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class StateController Properties DefaultState Declaration public State DefaultState { get; } Property Value Type Description State States Declaration public ReadOnlyCollection<State> States { get; } Property Value Type Description ReadOnlyCollection < State > Methods ChangeState(State, State) Declaration public void ChangeState(State src, State dst) Parameters Type Name Description State src State dst UpdateState(State, CharacterContext) Evaluates possible state transitions, and updates approriately. Declaration public State UpdateState(State src, CharacterContext context) Parameters Type Name Description State src CharacterContext context the context object for evaluating the chnage against Returns Type Description State the new current state Events OnStateChange Declaration public event Action<State, State> OnStateChange Event Type Type Description Action < State , State >"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.StateControllerBuilder.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.StateControllerBuilder.html",
    "title": "Class StateControllerBuilder | Fantasy Crescendo",
    "keywords": "Class StateControllerBuilder Inheritance System.Object StateControllerBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class StateControllerBuilder Constructors StateControllerBuilder() Declaration public StateControllerBuilder() Properties DefaultState Declaration public State DefaultState { get; set; } Property Value Type Description State States Declaration public IEnumerable<State> States { get; } Property Value Type Description System.Collections.Generic.IEnumerable < State > Methods AddState(State) Declaration public StateControllerBuilder AddState(State state) Parameters Type Name Description State state Returns Type Description StateControllerBuilder Build() Declaration public StateController Build() Returns Type Description StateController WithDefaultState(State) Declaration public StateControllerBuilder WithDefaultState(State state) Parameters Type Name Description State state Returns Type Description StateControllerBuilder"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.StateExtensions.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.StateExtensions.html",
    "title": "Class StateExtensions | Fantasy Crescendo",
    "keywords": "Class StateExtensions Inheritance System.Object StateExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public static class StateExtensions Methods AddTransition(State, Func<State>) Declaration public static State AddTransition(this State state, Func<State> transition) Parameters Type Name Description State state Func < State > transition Returns Type Description State AddTransition(State, State, Func<CharacterContext, Boolean>) Declaration public static State AddTransition(this State src, State dst, Func<CharacterContext, bool> predicate) Parameters Type Name Description State src State dst Func < CharacterContext , System.Boolean > predicate Returns Type Description State AddTransitions(IEnumerable<State>, State, Func<CharacterContext, Boolean>) Declaration public static IEnumerable<State> AddTransitions(this IEnumerable<State> srcs, State dst, Func<CharacterContext, bool> predicate) Parameters Type Name Description System.Collections.Generic.IEnumerable < State > srcs State dst Func < CharacterContext , System.Boolean > predicate Returns Type Description System.Collections.Generic.IEnumerable < State > AddTransitions(IEnumerable<State>, State.Transition) Declaration public static IEnumerable<State> AddTransitions(this IEnumerable<State> states, State.Transition transition) Parameters Type Name Description System.Collections.Generic.IEnumerable < State > states State.Transition transition Returns Type Description System.Collections.Generic.IEnumerable < State >"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.StateGroupAsset.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.StateGroupAsset.html",
    "title": "Class StateGroupAsset | Fantasy Crescendo",
    "keywords": "Class StateGroupAsset Inheritance ScriptableObject BaseStateAsset StateGroupAsset Inherited Members BaseStateAsset.StateMachine BaseStateAsset.Transitions BaseStateAsset.OnEnable() BaseStateAsset.Destroy() BaseStateAsset.CreateTransition(BaseStateAsset) BaseStateAsset.RemoveTransition(StateTransitionAsset) BaseStateAsset.RemoveTransitionsTo(BaseStateAsset) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class StateGroupAsset : BaseStateAsset Fields States Declaration public List<StateAsset> States Field Value Type Description System.Collections.Generic.List < StateAsset > Methods GetBaseStates() Declaration public override IEnumerable<StateAsset> GetBaseStates() Returns Type Description System.Collections.Generic.IEnumerable < StateAsset > Overrides BaseStateAsset.GetBaseStates()"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.StateMachineAsset.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.StateMachineAsset.html",
    "title": "Class StateMachineAsset | Fantasy Crescendo",
    "keywords": "Class StateMachineAsset The serializable asset representation of a State Controller. Inheritance ScriptableObject BaseStateMachineAsset StateMachineAsset Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class StateMachineAsset : BaseStateMachineAsset Properties States Gets a read-only collection of all states within the state machine. Declaration public ReadOnlyCollection<BaseStateAsset> States { get; } Property Value Type Description ReadOnlyCollection < BaseStateAsset > Transitions Gets an enumeration of all transitions within the state machine. Declaration public IEnumerable<StateTransitionAsset> Transitions { get; } Property Value Type Description System.Collections.Generic.IEnumerable < StateTransitionAsset > Methods BuildController() Creates a StateController based on the asset. Declaration public override StateController BuildController() Returns Type Description StateController the created StateController Overrides BaseStateMachineAsset.BuildController() CreateState<T>(String) Creates a StateAsset and adds it to the state machine's list of states. Declaration public T CreateState<T>(string name)where T : BaseStateAsset Parameters Type Name Description System.String name the name of the state Returns Type Description T the created state asset Type Parameters Name Description T Remarks This will save any unsaved changes with the state machine. RemoveState(BaseStateAsset) Removes a state from the state machine. Declaration public void RemoveState(BaseStateAsset state) Parameters Type Name Description BaseStateAsset state the state to remove Remarks This will also destroy all transitions related to the state (i.e. transitions starting from or ending with the state). Does nothing if the state is null. This will save any unsaved changes with the state machine to disk."
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.StateTransitionAsset.ConditionRequirement.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.StateTransitionAsset.ConditionRequirement.html",
    "title": "Enum StateTransitionAsset.ConditionRequirement | Fantasy Crescendo",
    "keywords": "Enum StateTransitionAsset.ConditionRequirement Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public enum ConditionRequirement Fields Name Description TransitionIfAll TransitionIfAny TransitionIfNone"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.StateTransitionAsset.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.StateTransitionAsset.html",
    "title": "Class StateTransitionAsset | Fantasy Crescendo",
    "keywords": "Class StateTransitionAsset Inheritance ScriptableObject StateTransitionAsset Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class StateTransitionAsset : ScriptableObject Fields Muted Declaration public bool Muted Field Value Type Description System.Boolean TransitionRequirement Declaration public StateTransitionAsset.ConditionRequirement TransitionRequirement Field Value Type Description StateTransitionAsset.ConditionRequirement Properties Conditions Declaration public ReadOnlyCollection<StateTransitionCondition> Conditions { get; } Property Value Type Description ReadOnlyCollection < StateTransitionCondition > DefaultName Declaration public string DefaultName { get; } Property Value Type Description System.String DestinationState Declaration public BaseStateAsset DestinationState { get; } Property Value Type Description BaseStateAsset DisplayName Declaration public string DisplayName { get; } Property Value Type Description System.String SourceState Declaration public BaseStateAsset SourceState { get; } Property Value Type Description BaseStateAsset StateMachine Declaration public StateMachineAsset StateMachine { get; } Property Value Type Description StateMachineAsset Methods BuildTransition(State) Declaration public State.Transition BuildTransition(State targetState) Parameters Type Name Description State targetState Returns Type Description State.Transition Destroy() Destroys the transition. This removes it from the list of transitions in the source state as well. Declaration public void Destroy() Involves(StateAsset) Checks if the transition is related to a given state. Declaration public bool Involves(StateAsset state) Parameters Type Name Description StateAsset state the state to check against Returns Type Description System.Boolean true if the state is involved in the transition, false otherwise."
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.StateTransitionCondition.AxisType.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.StateTransitionCondition.AxisType.html",
    "title": "Enum StateTransitionCondition.AxisType | Fantasy Crescendo",
    "keywords": "Enum StateTransitionCondition.AxisType Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public enum AxisType Fields Name Description Movement Smash"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.StateTransitionCondition.ButtonType.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.StateTransitionCondition.ButtonType.html",
    "title": "Enum StateTransitionCondition.ButtonType | Fantasy Crescendo",
    "keywords": "Enum StateTransitionCondition.ButtonType Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public enum ButtonType Fields Name Description Attack Jump Shield Special"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.StateTransitionCondition.ConditionType.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.StateTransitionCondition.ConditionType.html",
    "title": "Enum StateTransitionCondition.ConditionType | Fantasy Crescendo",
    "keywords": "Enum StateTransitionCondition.ConditionType Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public enum ConditionType Fields Name Description CanJump InputButtonHeld InputButtonWasPressed InputButtonWasReleased InputDirection IsGrabbingLedge IsGrounded IsHit IsRespawing IsShieldBroken PlayerDirection Time"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.StateTransitionCondition.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.StateTransitionCondition.html",
    "title": "Class StateTransitionCondition | Fantasy Crescendo",
    "keywords": "Class StateTransitionCondition Inheritance System.Object StateTransitionCondition Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class StateTransitionCondition Fields Axis Declaration public StateTransitionCondition.AxisType Axis Field Value Type Description StateTransitionCondition.AxisType AxisDirection Declaration public Direction AxisDirection Field Value Type Description Direction BoolParam Declaration public bool BoolParam Field Value Type Description System.Boolean Button Declaration public StateTransitionCondition.ButtonType Button Field Value Type Description StateTransitionCondition.ButtonType FloatParam Declaration public float FloatParam Field Value Type Description System.Single Type Declaration public StateTransitionCondition.ConditionType Type Field Value Type Description StateTransitionCondition.ConditionType Methods BuildPredicate() Declaration public Func<CharacterContext, bool> BuildPredicate() Returns Type Description Func < CharacterContext , System.Boolean >"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.UI.CharacterIcon.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.UI.CharacterIcon.html",
    "title": "Class CharacterIcon | Fantasy Crescendo",
    "keywords": "Class CharacterIcon Inheritance MonoBehaviour CharacterUIBase CharacterIcon Implements IInitializable < PlayerConfig > IInitializable < CharacterData > Inherited Members CharacterUIBase.Character CharacterUIBase.Initialize(PlayerConfig) Namespace : HouraiTeahouse.FantasyCrescendo.Characters.UI Assembly : cs.temp.dll.dll Syntax public class CharacterIcon : CharacterUIBase, IInitializable<PlayerConfig>, IInitializable<CharacterData> Fields Image Declaration public Image Image Field Value Type Description Image Methods Initialize(CharacterData) Declaration public override Task Initialize(CharacterData character) Parameters Type Name Description CharacterData character Returns Type Description Task Overrides CharacterUIBase.Initialize(CharacterData) Implements IInitializable<T> IInitializable<T>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.UI.CharacterName.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.UI.CharacterName.html",
    "title": "Class CharacterName | Fantasy Crescendo",
    "keywords": "Class CharacterName Inheritance MonoBehaviour CharacterUIBase CharacterName Implements IInitializable < PlayerConfig > IInitializable < CharacterData > Inherited Members CharacterUIBase.Character CharacterUIBase.Initialize(PlayerConfig) Namespace : HouraiTeahouse.FantasyCrescendo.Characters.UI Assembly : cs.temp.dll.dll Syntax public class CharacterName : CharacterUIBase, IInitializable<PlayerConfig>, IInitializable<CharacterData> Fields Text Declaration public TMP_Text Text Field Value Type Description TMP_Text Uppercase Declaration public bool Uppercase Field Value Type Description System.Boolean UseLongName Declaration public bool UseLongName Field Value Type Description System.Boolean Methods Initialize(CharacterData) Declaration public override Task Initialize(CharacterData character) Parameters Type Name Description CharacterData character Returns Type Description Task Overrides CharacterUIBase.Initialize(CharacterData) Implements IInitializable<T> IInitializable<T>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.UI.CharacterPortrait.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.UI.CharacterPortrait.html",
    "title": "Class CharacterPortrait | Fantasy Crescendo",
    "keywords": "Class CharacterPortrait Inheritance UIBehaviour CharacterPortrait Implements IInitializable < PlayerConfig > IStateView < PlayerConfig > IDisposable Namespace : HouraiTeahouse.FantasyCrescendo.Characters.UI Assembly : cs.temp.dll.dll Syntax public class CharacterPortrait : UIBehaviour, IInitializable<PlayerConfig>, IStateView<PlayerConfig>, IDisposable Fields Cropped Declaration public bool Cropped Field Value Type Description System.Boolean CropRect Declaration public Rect CropRect Field Value Type Description Rect DisabledTint Declaration public Color DisabledTint Field Value Type Description Color Fitter Declaration public AspectRatioFitter Fitter Field Value Type Description AspectRatioFitter Image Declaration public Graphic Image Field Value Type Description Graphic RectBias Declaration public Vector2 RectBias Field Value Type Description Vector2 Methods Awake() Awake is called when the script instance is being loaded. Declaration protected override void Awake() Dispose() Declaration public void Dispose() Initialize(PlayerConfig) Declaration public Task Initialize(PlayerConfig config) Parameters Type Name Description PlayerConfig config Returns Type Description Task OnRectTransformDimensionsChange() Declaration protected override void OnRectTransformDimensionsChange() UpdateView(PlayerConfig) Declaration public void UpdateView(in PlayerConfig config) Parameters Type Name Description PlayerConfig config Implements IInitializable<T> IStateView<S> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.UI.CharacterUIBase.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.UI.CharacterUIBase.html",
    "title": "Class CharacterUIBase | Fantasy Crescendo",
    "keywords": "Class CharacterUIBase Inheritance MonoBehaviour CharacterUIBase CharacterIcon CharacterName Implements IInitializable < PlayerConfig > IInitializable < CharacterData > Namespace : HouraiTeahouse.FantasyCrescendo.Characters.UI Assembly : cs.temp.dll.dll Syntax public abstract class CharacterUIBase : MonoBehaviour, IInitializable<PlayerConfig>, IInitializable<CharacterData> Fields Character Declaration public CharacterData Character Field Value Type Description CharacterData Methods Initialize(CharacterData) Declaration public abstract Task Initialize(CharacterData character) Parameters Type Name Description CharacterData character Returns Type Description Task Initialize(PlayerConfig) Declaration public Task Initialize(PlayerConfig config) Parameters Type Name Description PlayerConfig config Returns Type Description Task Implements IInitializable<T> IInitializable<T>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.UI.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.UI.html",
    "title": "Namespace HouraiTeahouse.FantasyCrescendo.Characters.UI | Fantasy Crescendo",
    "keywords": "Namespace HouraiTeahouse.FantasyCrescendo.Characters.UI Classes CharacterIcon CharacterName CharacterPortrait CharacterUIBase"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.html",
    "title": "Namespace HouraiTeahouse.FantasyCrescendo.Characters | Fantasy Crescendo",
    "keywords": "Namespace HouraiTeahouse.FantasyCrescendo.Characters Classes BaseStateAsset An asset that represents a single state or a group of states in built StateController. BaseStateMachineAsset A base abstract class for assets that create runtime StateControllers CharacterAnimation CharacterCamera CharacterContext CharacterControllerBuilder CharacterControllerBuilder.ShieldStates CharacterControllerBuilder.SmashAttackStates CharacterControllerBuilder.StateData CharacterHitboxController CharacterIndicator CharacterLedge CharacterMovement CharacterMover CharacterPhysics CharacterRespawn CharacterShield CharacterStateExtensions CharacterStateMachine CharacterTeeter JumpState LedgeState ShieldState SmashAttackState SmashChargeState State StateAsset StateController StateControllerBuilder StateExtensions StateGroupAsset StateMachineAsset The serializable asset representation of a State Controller. StateTransitionAsset StateTransitionCondition Enums StateTransitionAsset.ConditionRequirement StateTransitionCondition.AxisType StateTransitionCondition.ButtonType StateTransitionCondition.ConditionType Delegates State.Transition"
  },
  "api/HouraiTeahouse.FantasyCrescendo.ConstantRotation.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.ConstantRotation.html",
    "title": "Class ConstantRotation | Fantasy Crescendo",
    "keywords": "Class ConstantRotation Inheritance MonoBehaviour ConstantRotation Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class ConstantRotation : MonoBehaviour Fields RotationPerSecond Declaration public Vector3 RotationPerSecond Field Value Type Description Vector3"
  },
  "api/HouraiTeahouse.FantasyCrescendo.CoreUtility.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.CoreUtility.html",
    "title": "Class CoreUtility | Fantasy Crescendo",
    "keywords": "Class CoreUtility Inheritance System.Object CoreUtility Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public static class CoreUtility Methods CreateAllViews<T, TConfig>(TConfig) Declaration public static Task<IStateView<T>[]> CreateAllViews<T, TConfig>(TConfig config) Parameters Type Name Description TConfig config Returns Type Description Task < IStateView <T>[]> Type Parameters Name Description T TConfig CreateViews<T, TConfig>(IEnumerable<IViewFactory<T, TConfig>>, TConfig) Declaration public static Task<IStateView<T>[]> CreateViews<T, TConfig>(this IEnumerable<IViewFactory<T, TConfig>> factories, TConfig config) Parameters Type Name Description System.Collections.Generic.IEnumerable < IViewFactory <T, TConfig>> factories TConfig config Returns Type Description Task < IStateView <T>[]> Type Parameters Name Description T TConfig Initialize<T>(GameObject, T) Declaration public static Task Initialize<T>(this GameObject gameObject, T config) Parameters Type Name Description GameObject gameObject T config Returns Type Description Task Type Parameters Name Description T Initialize<T>(IEnumerable<IInitializable<T>>, T) Declaration public static Task Initialize<T>(this IEnumerable<IInitializable<T>> initializers, T config) Parameters Type Name Description System.Collections.Generic.IEnumerable < IInitializable <T>> initializers T config Returns Type Description Task Type Parameters Name Description T Simulate<T, TInput>(ISimulation<T, TInput>[], ref T, TInput) Declaration public static void Simulate<T, TInput>(this ISimulation<T, TInput>[] simulations, ref T state, TInput input) Parameters Type Name Description ISimulation <T, TInput>[] simulations T state TInput input Type Parameters Name Description T TInput UpdateView<T>(IStateView<T>[], T) Declaration public static void UpdateView<T>(this IStateView<T>[] views, T state) Parameters Type Name Description IStateView <T>[] views T state Type Parameters Name Description T"
  },
  "api/HouraiTeahouse.FantasyCrescendo.CustomControllerLayouts.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.CustomControllerLayouts.html",
    "title": "Class CustomControllerLayouts | Fantasy Crescendo",
    "keywords": "Class CustomControllerLayouts Inheritance MonoBehaviour CustomControllerLayouts Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class CustomControllerLayouts : MonoBehaviour"
  },
  "api/HouraiTeahouse.FantasyCrescendo.CustomEventBuilder.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.CustomEventBuilder.html",
    "title": "Class CustomEventBuilder | Fantasy Crescendo",
    "keywords": "Class CustomEventBuilder Inheritance System.Object CustomEventBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class CustomEventBuilder Constructors CustomEventBuilder(String) Declaration public CustomEventBuilder(string eventName) Parameters Type Name Description System.String eventName Methods AddParameter(String, Object) Declaration public CustomEventBuilder AddParameter(string name, object value) Parameters Type Name Description System.String name System.Object value Returns Type Description CustomEventBuilder Execute() Declaration public void Execute()"
  },
  "api/HouraiTeahouse.FantasyCrescendo.DataLoader.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.DataLoader.html",
    "title": "Class DataLoader | Fantasy Crescendo",
    "keywords": "Class DataLoader A iniitalizer component that loads dynamically loadable data into the global Registry. Inheritance MonoBehaviour DataLoader Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class DataLoader : MonoBehaviour Fields BundleSearch Declaration public string[] BundleSearch Field Value Type Description System.String [] GameModes The supported game mode types. Declaration public GameMode[] GameModes Field Value Type Description GameMode [] LoadTask Declaration public static TaskCompletionSource<object> LoadTask Field Value Type Description TaskCompletionSource < System.Object >"
  },
  "api/HouraiTeahouse.FantasyCrescendo.DebugConfig.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.DebugConfig.html",
    "title": "Class DebugConfig | Fantasy Crescendo",
    "keywords": "Class DebugConfig Inheritance ScriptableObject DebugConfig Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class DebugConfig : ScriptableObject"
  },
  "api/HouraiTeahouse.FantasyCrescendo.DebugDisplay.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.DebugDisplay.html",
    "title": "Class DebugDisplay | Fantasy Crescendo",
    "keywords": "Class DebugDisplay Inheritance MonoBehaviour DebugDisplay Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class DebugDisplay : MonoBehaviour Fields MatchManager Declaration public MatchManager MatchManager Field Value Type Description MatchManager"
  },
  "api/HouraiTeahouse.FantasyCrescendo.DefaultGameMode.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.DefaultGameMode.html",
    "title": "Class DefaultGameMode | Fantasy Crescendo",
    "keywords": "Class DefaultGameMode Inheritance ScriptableObject GameDataBase GameMode DefaultGameMode NetworkGameMode Implements IEntity Inherited Members GameMode.GlobalMaxPlayers GameMode.Name GameMode.MinPlayers GameMode.MaxPlayers GameMode.SupportsNetworkPlay GameMode.Execute(MatchConfig, Boolean) GameMode.Reset() GameDataBase.Id GameDataBase.IsSelectable GameDataBase.IsVisible GameDataBase.IsDebug Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class DefaultGameMode : GameMode, IEntity Methods CreateMatch(MatchConfig) Declaration protected virtual Match CreateMatch(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description Match IsValidConfig(MatchConfig) Declaration public override bool IsValidConfig(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description System.Boolean Overrides GameMode.IsValidConfig(MatchConfig) RunGame(MatchConfig, Boolean) Declaration protected override Task RunGame(MatchConfig config, bool loadStage = true) Parameters Type Name Description MatchConfig config System.Boolean loadStage Returns Type Description Task Overrides GameMode.RunGame(MatchConfig, Boolean) Implements IEntity"
  },
  "api/HouraiTeahouse.FantasyCrescendo.DirectionMode.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.DirectionMode.html",
    "title": "Enum DirectionMode | Fantasy Crescendo",
    "keywords": "Enum DirectionMode Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public enum DirectionMode Fields Name Description AlwaysLeft AlwaysRight InvertOnEnter InvertOnExit Locked PlayerControlled"
  },
  "api/HouraiTeahouse.FantasyCrescendo.DiscordManager.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.DiscordManager.html",
    "title": "Class DiscordManager | Fantasy Crescendo",
    "keywords": "Class DiscordManager Inheritance MonoBehaviour DiscordManager Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class DiscordManager : MonoBehaviour Fields ApplicationId Declaration public string ApplicationId Field Value Type Description System.String AutoRegister Declaration public bool AutoRegister Field Value Type Description System.Boolean OptionalSteamID Declaration public string OptionalSteamID Field Value Type Description System.String"
  },
  "api/HouraiTeahouse.FantasyCrescendo.DrawColliders.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.DrawColliders.html",
    "title": "Class DrawColliders | Fantasy Crescendo",
    "keywords": "Class DrawColliders Inheritance MonoBehaviour DrawColliders Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class DrawColliders : MonoBehaviour Fields GizmoColor Declaration public Color GizmoColor Field Value Type Description Color Wire Declaration public bool Wire Field Value Type Description System.Boolean"
  },
  "api/HouraiTeahouse.FantasyCrescendo.EditorQuickMatch.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.EditorQuickMatch.html",
    "title": "Class EditorQuickMatch | Fantasy Crescendo",
    "keywords": "Class EditorQuickMatch Inheritance MonoBehaviour EditorQuickMatch Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class EditorQuickMatch : MonoBehaviour Fields GameManager Declaration public MatchManager GameManager Field Value Type Description MatchManager GameMode Declaration public GameMode GameMode Field Value Type Description GameMode"
  },
  "api/HouraiTeahouse.FantasyCrescendo.EditorQuickMatchResults.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.EditorQuickMatchResults.html",
    "title": "Class EditorQuickMatchResults | Fantasy Crescendo",
    "keywords": "Class EditorQuickMatchResults Inheritance MonoBehaviour EditorQuickMatchResults Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class EditorQuickMatchResults : MonoBehaviour Fields DisplayFactory Declaration public PlayerMatchResultDisplayFactory DisplayFactory Field Value Type Description PlayerMatchResultDisplayFactory Results Declaration public MatchResult Results Field Value Type Description MatchResult"
  },
  "api/HouraiTeahouse.FantasyCrescendo.ErrorManager.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.ErrorManager.html",
    "title": "Class ErrorManager | Fantasy Crescendo",
    "keywords": "Class ErrorManager Inheritance MonoBehaviour ErrorManager Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class ErrorManager : MonoBehaviour Methods TriggerError(Exception) Declaration public static void TriggerError(Exception exception) Parameters Type Name Description Exception exception TriggerError(String) Declaration public static void TriggerError(string error) Parameters Type Name Description System.String error"
  },
  "api/HouraiTeahouse.FantasyCrescendo.ErrorScreen.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.ErrorScreen.html",
    "title": "Class ErrorScreen | Fantasy Crescendo",
    "keywords": "Class ErrorScreen Inheritance MonoBehaviour ErrorScreen Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class ErrorScreen : MonoBehaviour Fields ErrorText Declaration public TMP_Text ErrorText Field Value Type Description TMP_Text Format Declaration public string Format Field Value Type Description System.String Methods OpenURL(String) Declaration public void OpenURL(string url) Parameters Type Name Description System.String url QuitGame() Declaration public void QuitGame() SetError(String) Declaration public void SetError(string error) Parameters Type Name Description System.String error"
  },
  "api/HouraiTeahouse.FantasyCrescendo.FPSCounter.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.FPSCounter.html",
    "title": "Class FPSCounter | Fantasy Crescendo",
    "keywords": "Class FPSCounter Inheritance System.Object FPSCounter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class FPSCounter Constructors FPSCounter() Declaration public FPSCounter() Properties FPS Declaration public float FPS { get; } Property Value Type Description System.Single Methods Update() Declaration public void Update()"
  },
  "api/HouraiTeahouse.FantasyCrescendo.GameDataBase.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.GameDataBase.html",
    "title": "Class GameDataBase | Fantasy Crescendo",
    "keywords": "Class GameDataBase Inheritance ScriptableObject GameDataBase CharacterData GameMode SceneData Implements IEntity Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public abstract class GameDataBase : ScriptableObject, IEntity Fields IsDebug Declaration public bool IsDebug Field Value Type Description System.Boolean IsSelectable Declaration public bool IsSelectable Field Value Type Description System.Boolean IsVisible Declaration public bool IsVisible Field Value Type Description System.Boolean Properties Id Declaration public uint Id { get; } Property Value Type Description System.UInt32 Implements IEntity"
  },
  "api/HouraiTeahouse.FantasyCrescendo.GameMode.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.GameMode.html",
    "title": "Class GameMode | Fantasy Crescendo",
    "keywords": "Class GameMode Inheritance ScriptableObject GameDataBase GameMode DefaultGameMode TrainingGameMode Implements IEntity Inherited Members GameDataBase.Id GameDataBase.IsSelectable GameDataBase.IsVisible GameDataBase.IsDebug Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public abstract class GameMode : GameDataBase, IEntity Fields GlobalMaxPlayers Declaration public const uint GlobalMaxPlayers = 4U Field Value Type Description System.UInt32 MaxPlayers Declaration public uint MaxPlayers Field Value Type Description System.UInt32 MinPlayers Declaration public uint MinPlayers Field Value Type Description System.UInt32 Name Declaration public string Name Field Value Type Description System.String Properties SupportsNetworkPlay Declaration public virtual bool SupportsNetworkPlay { get; } Property Value Type Description System.Boolean Methods Execute(MatchConfig, Boolean) Declaration public Task Execute(MatchConfig config, bool loadStage = true) Parameters Type Name Description MatchConfig config System.Boolean loadStage Returns Type Description Task IsValidConfig(MatchConfig) Declaration public virtual bool IsValidConfig(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description System.Boolean Reset() Declaration protected virtual void Reset() RunGame(MatchConfig, Boolean) Declaration protected abstract Task RunGame(MatchConfig config, bool loadStage = true) Parameters Type Name Description MatchConfig config System.Boolean loadStage Returns Type Description Task Implements IEntity"
  },
  "api/HouraiTeahouse.FantasyCrescendo.GameplayConfig.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.GameplayConfig.html",
    "title": "Class GameplayConfig | Fantasy Crescendo",
    "keywords": "Class GameplayConfig Inheritance ScriptableObject GameplayConfig Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class GameplayConfig : ScriptableObject Properties LedgeGrabCooldown Declaration public short LedgeGrabCooldown { get; } Property Value Type Description System.Int16 MaxLedgeHangTime Declaration public short MaxLedgeHangTime { get; } Property Value Type Description System.Int16 Methods CreateInputSource(MatchConfig) Declaration public IMatchInputSource CreateInputSource(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description IMatchInputSource"
  },
  "api/HouraiTeahouse.FantasyCrescendo.GizmoUtil.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.GizmoUtil.html",
    "title": "Class GizmoUtil | Fantasy Crescendo",
    "keywords": "Class GizmoUtil Inheritance System.Object GizmoUtil Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public static class GizmoUtil Methods DrawBox(Bounds, Boolean) Declaration public static void DrawBox(Bounds bounds, bool wire = true) Parameters Type Name Description Bounds bounds System.Boolean wire DrawBox(Vector3, Vector3, Boolean) Declaration public static void DrawBox(Vector3 center, Vector3 size, bool wire = true) Parameters Type Name Description Vector3 center Vector3 size System.Boolean wire DrawBoxCollider(BoxCollider, Boolean) Declaration public static void DrawBoxCollider(BoxCollider collider, bool wire = true) Parameters Type Name Description BoxCollider collider System.Boolean wire DrawCapsule(Vector3, Vector3, Single) Declaration public static void DrawCapsule(Vector3 start, Vector3 end, float radius) Parameters Type Name Description Vector3 start Vector3 end System.Single radius DrawCapsuleCollider(CapsuleCollider) Declaration public static void DrawCapsuleCollider(CapsuleCollider collider) Parameters Type Name Description CapsuleCollider collider DrawCircle(Vector3, Vector3, Single) Declaration public static void DrawCircle(Vector3 position, Vector3 up, float radius = 1F) Parameters Type Name Description Vector3 position Vector3 up System.Single radius DrawCollider(Collider, Boolean) Declaration public static void DrawCollider(Collider collider, bool wire = true) Parameters Type Name Description Collider collider System.Boolean wire DrawSphere(Vector3, Single, Boolean) Declaration public static void DrawSphere(Vector3 center, float radius, bool wire = true) Parameters Type Name Description Vector3 center System.Single radius System.Boolean wire DrawSphereCollider(SphereCollider, Boolean) Declaration public static void DrawSphereCollider(SphereCollider collider, bool wire = true) Parameters Type Name Description SphereCollider collider System.Boolean wire With(Color) Declaration public static IDisposable With(Color color) Parameters Type Name Description Color color Returns Type Description IDisposable With(Matrix4x4) Declaration public static IDisposable With(Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix Returns Type Description IDisposable With(Transform) Declaration public static IDisposable With(Transform transform) Parameters Type Name Description Transform transform Returns Type Description IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.HitEffect.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.HitEffect.html",
    "title": "Class HitEffect | Fantasy Crescendo",
    "keywords": "Class HitEffect Inheritance MonoBehaviour HitEffect Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public abstract class HitEffect : MonoBehaviour Methods Setup(HitInfo) Declaration public abstract void Setup(HitInfo hitInfo) Parameters Type Name Description HitInfo hitInfo"
  },
  "api/HouraiTeahouse.FantasyCrescendo.HitInfo.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.HitInfo.html",
    "title": "Struct HitInfo | Fantasy Crescendo",
    "keywords": "Struct HitInfo Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public struct HitInfo Fields DamageDealt Declaration public float DamageDealt Field Value Type Description System.Single Destination Declaration public Hurtbox Destination Field Value Type Description Hurtbox KnockbackDealt Declaration public Vector2 KnockbackDealt Field Value Type Description Vector2 MatchState Declaration public MatchState MatchState Field Value Type Description MatchState Source Declaration public Hitbox Source Field Value Type Description Hitbox Properties Position Declaration public Vector3 Position { get; } Property Value Type Description Vector3"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Hitbox.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Hitbox.html",
    "title": "Class Hitbox | Fantasy Crescendo",
    "keywords": "Class Hitbox Inheritance MonoBehaviour AbstractHitDetector Hitbox Implements IComparable < AbstractHitDetector > Inherited Members AbstractHitDetector.PlayerID AbstractHitDetector.Priority AbstractHitDetector.CompareTo(AbstractHitDetector) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class Hitbox : AbstractHitDetector, IComparable<AbstractHitDetector> Fields BaseDamage Declaration public float BaseDamage Field Value Type Description System.Single BaseHitstun Declaration public uint BaseHitstun Field Value Type Description System.UInt32 BaseKnockback Declaration public float BaseKnockback Field Value Type Description System.Single HitstunScaling Declaration public float HitstunScaling Field Value Type Description System.Single KnockbackAngle Declaration public float KnockbackAngle Field Value Type Description System.Single KnockbackScaling Declaration public float KnockbackScaling Field Value Type Description System.Single MirrorDirection Declaration public bool MirrorDirection Field Value Type Description System.Boolean Offset Declaration public Vector3 Offset Field Value Type Description Vector3 Radius Declaration public float Radius Field Value Type Description System.Single SFX Declaration public SoundEffect[] SFX Field Value Type Description SoundEffect [] Type Declaration public HitboxType Type Field Value Type Description HitboxType VisualEffects Declaration public GameObject[] VisualEffects Field Value Type Description GameObject [] Properties Center Declaration public Vector3 Center { get; } Property Value Type Description Vector3 Hitlag Declaration public uint Hitlag { get; } Property Value Type Description System.UInt32 IsActive Declaration public bool IsActive { get; } Property Value Type Description System.Boolean Methods GetCollidedHurtboxes(Hurtbox[]) Declaration public int GetCollidedHurtboxes(Hurtbox[] hurtboxes) Parameters Type Name Description Hurtbox [] hurtboxes Returns Type Description System.Int32 GetHitstun(Single) Declaration public uint GetHitstun(float damage) Parameters Type Name Description System.Single damage Returns Type Description System.UInt32 GetKnocback(Single, Boolean) Declaration public Vector2 GetKnocback(float damage, bool dir) Parameters Type Name Description System.Single damage System.Boolean dir Returns Type Description Vector2 GetKnockbackDirection(Boolean) Declaration public Vector2 GetKnockbackDirection(bool direction) Parameters Type Name Description System.Boolean direction Returns Type Description Vector2 GetKnockbackScale(Single) Declaration public float GetKnockbackScale(float damage) Parameters Type Name Description System.Single damage Returns Type Description System.Single PlayEffect(HitInfo) Declaration public void PlayEffect(HitInfo hitInfo) Parameters Type Name Description HitInfo hitInfo Presimulate() Declaration public void Presimulate() Implements IComparable<>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.HitboxCollision.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.HitboxCollision.html",
    "title": "Struct HitboxCollision | Fantasy Crescendo",
    "keywords": "Struct HitboxCollision Implements IComparable < HitboxCollision > Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public struct HitboxCollision : IComparable<HitboxCollision> Fields Destination Declaration public Hurtbox Destination Field Value Type Description Hurtbox Source Declaration public Hitbox Source Field Value Type Description Hitbox Properties IsSelfCollision Declaration public bool IsSelfCollision { get; } Property Value Type Description System.Boolean Priority Declaration public uint Priority { get; } Property Value Type Description System.UInt32 Methods CompareTo(HitboxCollision) Declaration public int CompareTo(HitboxCollision obj) Parameters Type Name Description HitboxCollision obj Returns Type Description System.Int32 PlayEffect(HitInfo) Declaration public void PlayEffect(HitInfo hitInfo) Parameters Type Name Description HitInfo hitInfo ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Implements IComparable<>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.HitboxType.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.HitboxType.html",
    "title": "Enum HitboxType | Fantasy Crescendo",
    "keywords": "Enum HitboxType Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public enum HitboxType Fields Name Description Inactive Offensive"
  },
  "api/HouraiTeahouse.FantasyCrescendo.HitboxUtil.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.HitboxUtil.html",
    "title": "Class HitboxUtil | Fantasy Crescendo",
    "keywords": "Class HitboxUtil Inheritance System.Object HitboxUtil Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public static class HitboxUtil Methods FlushHurtboxDedupCache() Declaration public static void FlushHurtboxDedupCache() GetHitboxColor(HitboxType) Declaration public static Color GetHitboxColor(HitboxType type) Parameters Type Name Description HitboxType type Returns Type Description Color GetHurtboxColor(HurtboxType) Declaration public static Color GetHurtboxColor(HurtboxType type) Parameters Type Name Description HurtboxType type Returns Type Description Color IsValidHurtbox(Hurtbox) Declaration public static bool IsValidHurtbox(Hurtbox hurtbox) Parameters Type Name Description Hurtbox hurtbox Returns Type Description System.Boolean"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Hurtbox.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Hurtbox.html",
    "title": "Class Hurtbox | Fantasy Crescendo",
    "keywords": "Class Hurtbox Inheritance MonoBehaviour AbstractHitDetector Hurtbox Implements IComparable < AbstractHitDetector > Inherited Members AbstractHitDetector.PlayerID AbstractHitDetector.Priority AbstractHitDetector.CompareTo(AbstractHitDetector) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class Hurtbox : AbstractHitDetector, IComparable<AbstractHitDetector> Fields Type Declaration public HurtboxType Type Field Value Type Description HurtboxType Properties Center Declaration public Vector3 Center { get; } Property Value Type Description Vector3 Methods Initalize() Declaration public void Initalize() Implements IComparable<>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.HurtboxType.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.HurtboxType.html",
    "title": "Enum HurtboxType | Fantasy Crescendo",
    "keywords": "Enum HurtboxType Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public enum HurtboxType Fields Name Description Damageable Intangible Invincible Shield"
  },
  "api/HouraiTeahouse.FantasyCrescendo.IEntity.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.IEntity.html",
    "title": "Interface IEntity | Fantasy Crescendo",
    "keywords": "Interface IEntity An (almost) uniquely identifiable object. Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public interface IEntity Properties Id Gets the (almost) unique identifier for the object. Declaration uint Id { get; } Property Value Type Description System.UInt32 Remarks This value must be static over the lifetime of an object. The identifier should be unique on any local application using this interface. Any networked use of this identifier should point to the same resource or object no matter what machine it executes on."
  },
  "api/HouraiTeahouse.FantasyCrescendo.IInitializable-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.IInitializable-1.html",
    "title": "Interface IInitializable<T> | Fantasy Crescendo",
    "keywords": "Interface IInitializable<T> An asynchronously initializable object. Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public interface IInitializable<T> Type Parameters Name Description T Methods Initialize(T) Starts initializing the object with a given config. Declaration Task Initialize(T config) Parameters Type Name Description T config the configuration options for initialization. Returns Type Description Task a promise that will be resolved on completion of initialization."
  },
  "api/HouraiTeahouse.FantasyCrescendo.IInputSource-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.IInputSource-1.html",
    "title": "Interface IInputSource<I> | Fantasy Crescendo",
    "keywords": "Interface IInputSource<I> A source of MatchInputs. Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public interface IInputSource<I> Type Parameters Name Description I Methods SampleInput() Samples an input to represent the current timeframe's input. Declaration I SampleInput() Returns Type Description I the input summary for the current time frame."
  },
  "api/HouraiTeahouse.FantasyCrescendo.IMatchInputSource.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.IMatchInputSource.html",
    "title": "Interface IMatchInputSource | Fantasy Crescendo",
    "keywords": "Interface IMatchInputSource Inherited Members IInputSource<MatchInput>.SampleInput() Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public interface IMatchInputSource : IInputSource<MatchInput> Properties ValidMask Gets the bitmask of what inputs are valid. Declaration byte ValidMask { get; } Property Value Type Description System.Byte Remarks Lowest signifgant bit is Player 1. Highest signifigant bit is Player 8."
  },
  "api/HouraiTeahouse.FantasyCrescendo.IMergable-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.IMergable-1.html",
    "title": "Interface IMergable<T> | Fantasy Crescendo",
    "keywords": "Interface IMergable<T> A generic interface for supporting merging with instances of type T Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public interface IMergable<T> Type Parameters Name Description T the type that can be merged with. Methods MergeWith(T) Merges the current instance with the provided object. Declaration T MergeWith(T obj) Parameters Type Name Description T obj the object to merge with. Returns Type Description T the merged object"
  },
  "api/HouraiTeahouse.FantasyCrescendo.IMerger-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.IMerger-1.html",
    "title": "Interface IMerger<I> | Fantasy Crescendo",
    "keywords": "Interface IMerger<I> A merge strategy for combining two objects into one. Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public interface IMerger<I> Type Parameters Name Description I Methods Merge(I, I) Declaration I Merge(I a, I b) Parameters Type Name Description I a I b Returns Type Description I"
  },
  "api/HouraiTeahouse.FantasyCrescendo.ISimulation-2.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.ISimulation-2.html",
    "title": "Interface ISimulation<S, I> | Fantasy Crescendo",
    "keywords": "Interface ISimulation<S, I> A stateless simulation for advancing states through time given some external input. Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public interface ISimulation<S, I> : IDisposable Type Parameters Name Description S I Methods Simulate(ref S, I) Advances a state by one timestep given the corresponding input. Declaration void Simulate(ref S state, I input) Parameters Type Name Description S state the previous timestep's state. I input the input for the timestep."
  },
  "api/HouraiTeahouse.FantasyCrescendo.IStateView-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.IStateView-1.html",
    "title": "Interface IStateView<S> | Fantasy Crescendo",
    "keywords": "Interface IStateView<S> A player-facing display for showing a state. Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public interface IStateView<S> : IDisposable Type Parameters Name Description S Methods UpdateView(S) Alters the outward appearance of the view to match the d data represented by a state. Declaration void UpdateView(in S state) Parameters Type Name Description S state the state to display."
  },
  "api/HouraiTeahouse.FantasyCrescendo.IValidatable.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.IValidatable.html",
    "title": "Interface IValidatable | Fantasy Crescendo",
    "keywords": "Interface IValidatable An object with potentially invalid states. Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public interface IValidatable Properties IsValid Gets whether the current state of the object is valid or not. Declaration bool IsValid { get; } Property Value Type Description System.Boolean"
  },
  "api/HouraiTeahouse.FantasyCrescendo.IValidatableExtensions.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.IValidatableExtensions.html",
    "title": "Class IValidatableExtensions | Fantasy Crescendo",
    "keywords": "Class IValidatableExtensions A set of extension methods for IValidatable objects and their enumerations. Inheritance System.Object IValidatableExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public static class IValidatableExtensions Methods IsAllValid<T>(IEnumerable<T>) Gets whether all of a given validatable set are valid or not. Declaration public static bool IsAllValid<T>(this IEnumerable<T> group)where T : IValidatable Parameters Type Name Description System.Collections.Generic.IEnumerable <T> group the objects to validate. Returns Type Description System.Boolean true, if all objects are valid, false otherwise. Type Parameters Name Description T"
  },
  "api/HouraiTeahouse.FantasyCrescendo.IValidator-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.IValidator-1.html",
    "title": "Interface IValidator<T> | Fantasy Crescendo",
    "keywords": "Interface IValidator<T> A validation policy to check the validity of the state of provided objects. Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public interface IValidator<T> Type Parameters Name Description T the type of object that can be validated. Methods IsValid(T) Gets whether is valid or not. Declaration bool IsValid(T obj) Parameters Type Name Description T obj the object to validate. Returns Type Description System.Boolean true, if is valid, false otherwise."
  },
  "api/HouraiTeahouse.FantasyCrescendo.IViewFactory-2.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.IViewFactory-2.html",
    "title": "Interface IViewFactory<TState, TConfig> | Fantasy Crescendo",
    "keywords": "Interface IViewFactory<TState, TConfig> Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public interface IViewFactory<TState, TConfig> Type Parameters Name Description TState TConfig Methods CreateViews(TConfig) Declaration Task<IStateView<TState>[]> CreateViews(TConfig config) Parameters Type Name Description TConfig config Returns Type Description Task < IStateView <TState>[]>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.InputConfig.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.InputConfig.html",
    "title": "Class InputConfig | Fantasy Crescendo",
    "keywords": "Class InputConfig Inheritance ScriptableObject InputConfig Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class InputConfig : ScriptableObject Fields DeadZone Declaration public float DeadZone Field Value Type Description System.Single SmashFrameWindow Declaration public uint SmashFrameWindow Field Value Type Description System.UInt32 SmashThreshold Declaration public float SmashThreshold Field Value Type Description System.Single"
  },
  "api/HouraiTeahouse.FantasyCrescendo.InputHistory-1.Enumerator.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.InputHistory-1.Enumerator.html",
    "title": "Struct InputHistory<I>.Enumerator | Fantasy Crescendo",
    "keywords": "Struct InputHistory<I>.Enumerator Implements System.Collections.Generic.IEnumerator < TimedInput <I>> System.IDisposable System.Collections.IEnumerator Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public struct Enumerator : IEnumerator<TimedInput<I>>, IDisposable, IEnumerator Properties Current Declaration public TimedInput<I> Current { get; } Property Value Type Description TimedInput <I> Methods MoveNext() Declaration public bool MoveNext() Returns Type Description System.Boolean Reset() Declaration public void Reset() Explicit Interface Implementations IEnumerator.Current Declaration object IEnumerator.Current { get; } Returns Type Description System.Object Implements System.Collections.Generic.IEnumerator<T> System.IDisposable System.Collections.IEnumerator"
  },
  "api/HouraiTeahouse.FantasyCrescendo.InputHistory-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.InputHistory-1.html",
    "title": "Class InputHistory<I> | Fantasy Crescendo",
    "keywords": "Class InputHistory<I> A managed history of a set of inputs. Inheritance System.Object InputHistory<I> Implements System.Collections.Generic.IEnumerable < TimedInput <I>> System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class InputHistory<I> : IEnumerable<TimedInput<I>>, IEnumerable Type Parameters Name Description I Remarks This is internally implemented as a singly-linked list, most of the operations on these objects run in O(n) time. Constructors InputHistory(I) Initalizes a new instance of the InputHistory<I> class. Declaration public InputHistory(I input) Parameters Type Name Description I input the starting base input. InputHistory(I, IMerger<I>) Initalizes a new instance of the InputHistory<I> class. Declaration public InputHistory(I input, IMerger<I> merger) Parameters Type Name Description I input the starting base input. IMerger <I> merger a IMerger<I> used to merge inputs. InputHistory(I, UInt32) Initalizes a new instance of the InputHistory<I> class. Declaration public InputHistory(I input, uint startTimestamp) Parameters Type Name Description I input the starting base input. System.UInt32 startTimestamp the timestamp of the first element. InputHistory(I, UInt32, IMerger<I>, Int32) Initalizes a new instance of the InputHistory<I> class. Declaration public InputHistory(I start, uint startTimestep, IMerger<I> merger, int capacity = 128) Parameters Type Name Description I start System.UInt32 startTimestep IMerger <I> merger a IMerger<I> used to merge inputs. System.Int32 capacity Fields kDefaultStartSize Declaration public const int kDefaultStartSize = 128 Field Value Type Description System.Int32 Properties Count Declaration public int Count { get; } Property Value Type Description System.Int32 Current Gets the current input and timestamp. Declaration public TimedInput<I> Current { get; set; } Property Value Type Description TimedInput <I> Newest Gets the newest recorded input and timestamp. Declaration public TimedInput<I> Newest { get; } Property Value Type Description TimedInput <I> Oldest Gets the oldest recorded input and timestamp. Declaration public TimedInput<I> Oldest { get; } Property Value Type Description TimedInput <I> Methods Append(I) Advances the Current input by one timestep and records it in the history. Declaration public I Append(I input) Parameters Type Name Description I input Returns Type Description I Remarks If there are inputs in the history newer than the current input, the provided input may be merged with the newer input before being stored. The merge strategy is determined by the provided during the history's construction. This operation runs in O(1) time. DropBefore(UInt32) Drops all elements older than a certain timestamp. Declaration public void DropBefore(uint timestep) Parameters Type Name Description System.UInt32 timestep the new oldest timestamp supported. Remarks If the input is dropped, it will be updated to the new oldest input in the history. If T inherits from all dropped inputs will be disposed. This operation runs in O(n) time where n is the number of elements managed by the history. FastForward() Updates Current forward to the newest recorded input. Declaration public I FastForward() Returns Type Description I the new current input. Remarks This operation runs in O(1) time. GetEnumerator(Boolean) Declaration public InputHistory<I>.Enumerator GetEnumerator(bool full = false) Parameters Type Name Description System.Boolean full Returns Type Description InputHistory.Enumerator <> GetFullSequence() Enumerates the full sequence of timed inputs, including the inputs newer than the Current timed input. Declaration public IEnumerable<TimedInput<I>> GetFullSequence() Returns Type Description System.Collections.Generic.IEnumerable < TimedInput <I>> MergeWith(UInt32, ArraySegment<I>) Merges the sequence of inputs with the existing history of inputs. Declaration public void MergeWith(uint timestep, ArraySegment<I> inputs) Parameters Type Name Description System.UInt32 timestep The start timestamp corresponding to the first element in the list. ArraySegment <I> inputs the list of inputs to merge into the history. Remarks Inputs from before the oldest recorded input will be ignored. Inputs newer than the newest recorded input will be appended to the history and become the newest inputs added. Intermediate inputs that have a matching input for the same timestep will be merged according to the provided during the history's construction. Intermedate inputs that do not have a corresponding input will be inserted into approriate locations. This operation runs in O(n) time where n is the number of elements managed by the history. MergeWith(UInt32, IEnumerable<I>) Merges the sequence of inputs with the existing history of inputs. Declaration public void MergeWith(uint timestep, IEnumerable<I> inputs) Parameters Type Name Description System.UInt32 timestep The start timestamp corresponding to the first element in the list. System.Collections.Generic.IEnumerable <I> inputs the list of inputs to merge into the history. Remarks Inputs from before the oldest recorded input will be ignored. Inputs newer than the newest recorded input will be appended to the history and become the newest inputs added. Intermediate inputs that have a matching input for the same timestep will be merged according to the provided during the history's construction. Intermedate inputs that do not have a corresponding input will be inserted into approriate locations. This operation runs in O(n) time where n is the number of elements managed by the history. Rewind() Resets Current back to the oldest recorded input. Declaration public I Rewind() Returns Type Description I the new current input. Remarks This operation runs in O(1) time. StartingWith(UInt32, Boolean) Declaration public IEnumerable<TimedInput<I>> StartingWith(uint timestep, bool full = false) Parameters Type Name Description System.UInt32 timestep System.Boolean full Returns Type Description System.Collections.Generic.IEnumerable < TimedInput <I>> Step() Declaration public I Step() Returns Type Description I Explicit Interface Implementations IEnumerable<TimedInput<I>>.GetEnumerator() Declaration IEnumerator<TimedInput<I>> IEnumerable<TimedInput<I>>.GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator < TimedInput <I>> IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.InputModule.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.InputModule.html",
    "title": "Class InputModule | Fantasy Crescendo",
    "keywords": "Class InputModule Inheritance StandaloneInputModule InputModule Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class InputModule : StandaloneInputModule Fields InputInterface Declaration public BaseInput InputInterface Field Value Type Description BaseInput Methods Awake() Awake is called when the script instance is being loaded. Declaration protected override void Awake()"
  },
  "api/HouraiTeahouse.FantasyCrescendo.KeyboardOverridePlayerInputSource.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.KeyboardOverridePlayerInputSource.html",
    "title": "Class KeyboardOverridePlayerInputSource | Fantasy Crescendo",
    "keywords": "Class KeyboardOverridePlayerInputSource Inheritance System.Object KeyboardOverridePlayerInputSource Implements IInputSource < PlayerInput > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class KeyboardOverridePlayerInputSource : IInputSource<PlayerInput> Constructors KeyboardOverridePlayerInputSource(IInputSource<PlayerInput>) Declaration public KeyboardOverridePlayerInputSource(IInputSource<PlayerInput> inputSource) Parameters Type Name Description IInputSource < PlayerInput > inputSource Methods SampleInput() Declaration public PlayerInput SampleInput() Returns Type Description PlayerInput Implements IInputSource<I>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.html",
    "title": "Namespace HouraiTeahouse.FantasyCrescendo.Networking | Fantasy Crescendo",
    "keywords": "Namespace HouraiTeahouse.FantasyCrescendo.Networking Classes ClientGameController Deserializer INetworkStrategyExtensions LockstepStrategy LockstepStrategy.Client LockstepStrategy.Server MessageHandlers NetworkClientPlayer NetworkConnection NetworkConnectionConfig NetworkConnectionExtensions NetworkGameClient NetworkGameMode NetworkGameServer NetworkGameSetup NetworkHost NetworkHostController NetworkingException NetworkInterface NetworkInterfaceConfiguration NetworkManager Singleton MonoBehaviour manager of network related operations. NetworkMatch RollbackStrategy RollbackStrategy.Client RollbackStrategy.Server Serializer ServerGameController SteamUtility Structs ClientUpdateConfigMessage ConnectionStats InputSetMessage MatchFinishMessage MatchStartMessage NetworkClientConfig NetworkDataMessage NetworkHostConfig NetworkServerConfig PeerReadyMessage ServerStateMessage ServerUpdateConfigMessage Interfaces INetworkClient INetworkInterface INetworkSerializable INetworkServer INetworkStrategy Enums ConnectionStatus NetworkInterfaceType"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PauseCamera.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PauseCamera.html",
    "title": "Class PauseCamera | Fantasy Crescendo",
    "keywords": "Class PauseCamera Inheritance MonoBehaviour PauseCamera Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class PauseCamera : MonoBehaviour Fields CameraTarget Declaration public CameraTarget CameraTarget Field Value Type Description CameraTarget MatchManager Declaration public MatchManager MatchManager Field Value Type Description MatchManager PauseController Declaration public MatchPauseController PauseController Field Value Type Description MatchPauseController RotationSpeed Declaration public Vector2 RotationSpeed Field Value Type Description Vector2 StartOffset Declaration public Vector3 StartOffset Field Value Type Description Vector3 TranslationSpeed Declaration public Vector3 TranslationSpeed Field Value Type Description Vector3"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PauseSFX.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PauseSFX.html",
    "title": "Class PauseSFX | Fantasy Crescendo",
    "keywords": "Class PauseSFX Inheritance MonoBehaviour PauseSFX Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class PauseSFX : MonoBehaviour Fields AudioSource Declaration public AudioSource AudioSource Field Value Type Description AudioSource PauseClip Declaration public AudioClip PauseClip Field Value Type Description AudioClip UnpauseClip Declaration public AudioClip UnpauseClip Field Value Type Description AudioClip"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PauseVisibility.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PauseVisibility.html",
    "title": "Class PauseVisibility | Fantasy Crescendo",
    "keywords": "Class PauseVisibility Inheritance MonoBehaviour PauseVisibility Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class PauseVisibility : MonoBehaviour Fields DefaultState Declaration public bool DefaultState Field Value Type Description System.Boolean Invert Declaration public bool Invert Field Value Type Description System.Boolean Objects Declaration public Object[] Objects Field Value Type Description Object []"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PhysicsConfig.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PhysicsConfig.html",
    "title": "Class PhysicsConfig | Fantasy Crescendo",
    "keywords": "Class PhysicsConfig Inheritance ScriptableObject PhysicsConfig Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class PhysicsConfig : ScriptableObject Fields BaseHitlag Declaration public uint BaseHitlag Field Value Type Description System.UInt32 DownwardGravityMultiplier Declaration public float DownwardGravityMultiplier Field Value Type Description System.Single GlobalKnockbackScaling Declaration public float GlobalKnockbackScaling Field Value Type Description System.Single GroundedSnapDistance Declaration public float GroundedSnapDistance Field Value Type Description System.Single GroundedSnapOffset Declaration public float GroundedSnapOffset Field Value Type Description System.Single HitlagScaling Declaration public uint HitlagScaling Field Value Type Description System.UInt32 HurtboxLayer Declaration public int HurtboxLayer Field Value Type Description System.Int32 ShortJumpGravityMultiplier Declaration public float ShortJumpGravityMultiplier Field Value Type Description System.Single StageLayers Declaration public LayerMask StageLayers Field Value Type Description LayerMask Properties HurtboxLayerMask Declaration public int HurtboxLayerMask { get; } Property Value Type Description System.Int32"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Platform.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Platform.html",
    "title": "Class Platform | Fantasy Crescendo",
    "keywords": "Class Platform Inheritance MonoBehaviour RegisteredBehaviour < Platform , System.Byte > Platform Implements IEntity Inherited Members RegisteredBehaviour<Platform, Byte>.Id RegisteredBehaviour<Platform, Byte>.IEntity.Id RegisteredBehaviour<Platform, Byte>.Awake() RegisteredBehaviour<Platform, Byte>.OnDestroy() Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class Platform : RegisteredBehaviour<Platform, byte>, IEntity Fields CheckRegions Declaration public Bounds[] CheckRegions Field Value Type Description Bounds [] Type Declaration public PlatformHardness Type Field Value Type Description PlatformHardness Properties SolidColliders Declaration public IReadOnlyCollection<Collider> SolidColliders { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < Collider > Methods Awake() Awake is called when the script instance is being loaded. Declaration protected override void Awake() Overrides HouraiTeahouse.FantasyCrescendo.RegisteredBehaviour<HouraiTeahouse.FantasyCrescendo.Platform, System.Byte>.Awake() CollisionStatusCheck(Collider) Declaration public bool CollisionStatusCheck(Collider collider) Parameters Type Name Description Collider collider Returns Type Description System.Boolean CollisionStatusCheckAll(Collider) Declaration public static void CollisionStatusCheckAll(Collider collider) Parameters Type Name Description Collider collider IsIgnoringPlatform(Collider) Declaration public bool IsIgnoringPlatform(Collider collier) Parameters Type Name Description Collider collier Returns Type Description System.Boolean UpdateCollisionStatus(Collider, Boolean) Declaration public void UpdateCollisionStatus(Collider collider, bool collide) Parameters Type Name Description Collider collider System.Boolean collide Implements IEntity"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PlatformHardness.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PlatformHardness.html",
    "title": "Enum PlatformHardness | Fantasy Crescendo",
    "keywords": "Enum PlatformHardness Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public enum PlatformHardness Fields Name Description Hard Semisoft Soft Supersoft"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PlayerColor.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PlayerColor.html",
    "title": "Class PlayerColor | Fantasy Crescendo",
    "keywords": "Class PlayerColor A UI component for changing a Unity UI component's color to match that of a given player. The color is defined by the registered VisualConfig. Inheritance MonoBehaviour PlayerColor Implements IInitializable < PlayerConfig > IStateView < PlayerConfig > IDisposable Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class PlayerColor : MonoBehaviour, IInitializable<PlayerConfig>, IStateView<PlayerConfig>, IDisposable Fields Graphics Declaration public Graphic[] Graphics Field Value Type Description Graphic [] Methods Dispose() Declaration public void Dispose() Initialize(PlayerConfig) Declaration public Task Initialize(PlayerConfig config) Parameters Type Name Description PlayerConfig config Returns Type Description Task UpdateView(PlayerConfig) Declaration public void UpdateView(in PlayerConfig config) Parameters Type Name Description PlayerConfig config Implements IInitializable<T> IStateView<S> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PlayerComponent.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PlayerComponent.html",
    "title": "Class PlayerComponent | Fantasy Crescendo",
    "keywords": "Class PlayerComponent Inheritance MonoBehaviour PlayerComponent CharacterAnimation CharacterHitboxController CharacterIndicator CharacterLedge CharacterMovement CharacterPhysics CharacterRespawn CharacterShield CharacterStateMachine CharacterTeeter PlayerActive PlayerDamage PlayerStockDisplay PlayerStateDebugView Implements IPlayerView IPlayerSimulation Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public abstract class PlayerComponent : MonoBehaviour, IPlayerView, IPlayerSimulation Methods Dispose() Declaration public virtual void Dispose() Initialize(PlayerConfig, Boolean) Declaration public virtual Task Initialize(PlayerConfig config, bool isView = false) Parameters Type Name Description PlayerConfig config System.Boolean isView Returns Type Description Task Presimulate(PlayerState) Declaration public virtual void Presimulate(in PlayerState state) Parameters Type Name Description PlayerState state ResetState(ref PlayerState) Declaration public virtual void ResetState(ref PlayerState state) Parameters Type Name Description PlayerState state Simulate(ref PlayerState, PlayerInputContext) Declaration public virtual void Simulate(ref PlayerState state, PlayerInputContext input) Parameters Type Name Description PlayerState state PlayerInputContext input UpdateView(PlayerState) Declaration public virtual void UpdateView(in PlayerState state) Parameters Type Name Description PlayerState state Implements IPlayerView IPlayerSimulation"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PlayerConfig.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PlayerConfig.html",
    "title": "Struct PlayerConfig | Fantasy Crescendo",
    "keywords": "Struct PlayerConfig A data object for configuring a single player within a multiplayer match. Implements IValidatable INetworkSerializable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public struct PlayerConfig : IValidatable, INetworkSerializable Fields DefaultDamage The default amount of damage the player will have on (re)spawning. Declaration public float DefaultDamage Field Value Type Description System.Single LocalPlayerID The local player number. Mainly used to determine what local input device to read the input from. Declaration public sbyte LocalPlayerID Field Value Type Description System.SByte PlayerID The Player ID of the player. Determines what is visually displayed to denote the player. Declaration public byte PlayerID Field Value Type Description System.Byte Selection Declaration public PlayerSelection Selection Field Value Type Description PlayerSelection Properties IsLocal Declaration public bool IsLocal { get; } Property Value Type Description System.Boolean IsValid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean Methods Deserialize(Deserializer) Declaration public void Deserialize(Deserializer deserializer) Parameters Type Name Description Deserializer deserializer Serialize(Serializer) Declaration public void Serialize(Serializer serializer) Parameters Type Name Description Serializer serializer ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Implements IValidatable INetworkSerializable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PlayerControllerMapping.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PlayerControllerMapping.html",
    "title": "Class PlayerControllerMapping | Fantasy Crescendo",
    "keywords": "Class PlayerControllerMapping Inheritance System.Object PlayerControllerMapping Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class PlayerControllerMapping"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PlayerIndicatorFactory.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PlayerIndicatorFactory.html",
    "title": "Class PlayerIndicatorFactory | Fantasy Crescendo",
    "keywords": "Class PlayerIndicatorFactory Inheritance MonoBehaviour PlayerIndicatorFactory Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class PlayerIndicatorFactory : MonoBehaviour Fields Container Declaration public RectTransform Container Field Value Type Description RectTransform Instance Declaration public static PlayerIndicatorFactory Instance Field Value Type Description PlayerIndicatorFactory Prefab Declaration public RectTransform Prefab Field Value Type Description RectTransform Methods CreateIndicator() Declaration public RectTransform CreateIndicator() Returns Type Description RectTransform"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PlayerMatchResultDisplayFactory.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PlayerMatchResultDisplayFactory.html",
    "title": "Class PlayerMatchResultDisplayFactory | Fantasy Crescendo",
    "keywords": "Class PlayerMatchResultDisplayFactory Inheritance MonoBehaviour ViewFactory < PlayerMatchStats , PlayerConfig > PlayerViewFactory < PlayerMatchStats > PlayerMatchResultDisplayFactory Implements IViewFactory < PlayerMatchStats , PlayerConfig > Inherited Members PlayerViewFactory<PlayerMatchStats>.Prefab PlayerViewFactory<PlayerMatchStats>.CreateViews(PlayerConfig) PlayerViewFactory<PlayerMatchStats>.Postinitalize(PlayerConfig, GameObject) ViewFactory<PlayerMatchStats, PlayerConfig>.CreateViews(PlayerConfig) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class PlayerMatchResultDisplayFactory : PlayerViewFactory<PlayerMatchStats>, IViewFactory<PlayerMatchStats, PlayerConfig> Fields Container Declaration public RectTransform Container Field Value Type Description RectTransform Methods Preinitialize(PlayerConfig, GameObject) Declaration protected override void Preinitialize(PlayerConfig config, GameObject view) Parameters Type Name Description PlayerConfig config GameObject view Overrides HouraiTeahouse.FantasyCrescendo.PlayerViewFactory<HouraiTeahouse.FantasyCrescendo.PlayerMatchStats>.Preinitialize(HouraiTeahouse.FantasyCrescendo.PlayerConfig, GameObject) Implements IViewFactory<TState, TConfig>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PlayerMatchStats.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PlayerMatchStats.html",
    "title": "Struct PlayerMatchStats | Fantasy Crescendo",
    "keywords": "Struct PlayerMatchStats Inherited Members System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public struct PlayerMatchStats Fields Config Declaration public PlayerConfig Config Field Value Type Description PlayerConfig DamageDealt Declaration public float DamageDealt Field Value Type Description System.Single DamageTaken Declaration public float DamageTaken Field Value Type Description System.Single Deaths Declaration public uint[] Deaths Field Value Type Description System.UInt32 [] Kills Declaration public uint[] Kills Field Value Type Description System.UInt32 [] SelfDestructs Declaration public uint SelfDestructs Field Value Type Description System.UInt32 Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode()"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PlayerName.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PlayerName.html",
    "title": "Class PlayerName | Fantasy Crescendo",
    "keywords": "Class PlayerName Inheritance MonoBehaviour PlayerName Implements IInitializable < PlayerConfig > IStateView < PlayerConfig > IDisposable Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class PlayerName : MonoBehaviour, IInitializable<PlayerConfig>, IStateView<PlayerConfig>, IDisposable Fields Format Declaration public string Format Field Value Type Description System.String Text Declaration public TMP_Text Text Field Value Type Description TMP_Text Methods Dispose() Declaration public void Dispose() Initialize(PlayerConfig) Declaration public Task Initialize(PlayerConfig config) Parameters Type Name Description PlayerConfig config Returns Type Description Task UpdateView(PlayerConfig) Declaration public void UpdateView(in PlayerConfig config) Parameters Type Name Description PlayerConfig config Implements IInitializable<T> IStateView<S> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PlayerSelection.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PlayerSelection.html",
    "title": "Struct PlayerSelection | Fantasy Crescendo",
    "keywords": "Struct PlayerSelection A data object for managing the human selected elements of a player's configuration. Implements IValidatable INetworkSerializable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public struct PlayerSelection : IValidatable, INetworkSerializable Fields CharacterID Declaration public uint CharacterID Field Value Type Description System.UInt32 Pallete Declaration public byte Pallete Field Value Type Description System.Byte Properties IsValid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean Methods Deserialize(Deserializer) Declaration public void Deserialize(Deserializer deserializer) Parameters Type Name Description Deserializer deserializer GetCharacter() Declaration public CharacterData GetCharacter() Returns Type Description CharacterData GetPallete() Declaration public CharacterPallete GetPallete() Returns Type Description CharacterPallete GetPrettyString() Declaration public string GetPrettyString() Returns Type Description System.String Serialize(Serializer) Declaration public void Serialize(Serializer serializer) Parameters Type Name Description Serializer serializer ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Implements IValidatable INetworkSerializable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PlayerStateDebugView.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PlayerStateDebugView.html",
    "title": "Class PlayerStateDebugView | Fantasy Crescendo",
    "keywords": "Class PlayerStateDebugView Inheritance MonoBehaviour PlayerComponent PlayerStateDebugView Implements IPlayerView IPlayerSimulation Inherited Members PlayerComponent.Presimulate(PlayerState) PlayerComponent.Simulate(PlayerState, PlayerInputContext) PlayerComponent.Dispose() PlayerComponent.ResetState(PlayerState) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class PlayerStateDebugView : PlayerComponent, IPlayerView, IPlayerSimulation Fields Config Declaration public PlayerConfig Config Field Value Type Description PlayerConfig State Declaration public PlayerState State Field Value Type Description PlayerState Methods Initialize(PlayerConfig, Boolean) Declaration public override Task Initialize(PlayerConfig config, bool isView = false) Parameters Type Name Description PlayerConfig config System.Boolean isView Returns Type Description Task Overrides PlayerComponent.Initialize(PlayerConfig, Boolean) UpdateView(PlayerState) Declaration public override void UpdateView(in PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.UpdateView(PlayerState) Implements IPlayerView IPlayerSimulation"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PlayerViewFactory-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PlayerViewFactory-1.html",
    "title": "Class PlayerViewFactory<T> | Fantasy Crescendo",
    "keywords": "Class PlayerViewFactory<T> Inheritance MonoBehaviour ViewFactory <T, PlayerConfig > PlayerViewFactory<T> PlayerMatchResultDisplayFactory PlayerDisplayFactory Implements IViewFactory <T, PlayerConfig > Inherited Members ViewFactory<T, PlayerConfig>.CreateViews(PlayerConfig) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class PlayerViewFactory<T> : ViewFactory<T, PlayerConfig>, IViewFactory<T, PlayerConfig> Type Parameters Name Description T Fields Prefab Declaration public GameObject Prefab Field Value Type Description GameObject Methods CreateViews(PlayerConfig) Declaration public override Task<IStateView<T>[]> CreateViews(PlayerConfig config) Parameters Type Name Description PlayerConfig config Returns Type Description Task < IStateView <T>[]> Overrides HouraiTeahouse.FantasyCrescendo.ViewFactory<T, HouraiTeahouse.FantasyCrescendo.PlayerConfig>.CreateViews(HouraiTeahouse.FantasyCrescendo.PlayerConfig) Postinitalize(PlayerConfig, GameObject) Declaration protected virtual void Postinitalize(PlayerConfig config, GameObject view) Parameters Type Name Description PlayerConfig config GameObject view Preinitialize(PlayerConfig, GameObject) Declaration protected virtual void Preinitialize(PlayerConfig config, GameObject view) Parameters Type Name Description PlayerConfig config GameObject view Implements IViewFactory<TState, TConfig>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.ButtonContext.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.ButtonContext.html",
    "title": "Struct ButtonContext | Fantasy Crescendo",
    "keywords": "Struct ButtonContext A simple data object for managing the state and change of a single button over two ticks of gameplay. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public struct ButtonContext Fields Current Declaration public bool Current Field Value Type Description System.Boolean Previous Declaration public bool Previous Field Value Type Description System.Boolean Properties WasPressed Declaration public bool WasPressed { get; } Property Value Type Description System.Boolean WasReleased Declaration public bool WasReleased { get; } Property Value Type Description System.Boolean"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.Direction.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.Direction.html",
    "title": "Enum Direction | Fantasy Crescendo",
    "keywords": "Enum Direction Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public enum Direction Fields Name Description Down Left Neutral Right Up"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.DirectionalInput.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.DirectionalInput.html",
    "title": "Struct DirectionalInput | Fantasy Crescendo",
    "keywords": "Struct DirectionalInput Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public struct DirectionalInput Fields Value Declaration public Vector2 Value Field Value Type Description Vector2 Properties Direction Declaration public Direction Direction { get; } Property Value Type Description Direction Methods GetDirection(Vector2) Declaration public static Direction GetDirection(Vector2 dir) Parameters Type Name Description Vector2 dir Returns Type Description Direction Operators Implicit(Vector2 to DirectionalInput) Declaration public static implicit operator DirectionalInput(Vector2 dir) Parameters Type Name Description Vector2 dir Returns Type Description DirectionalInput"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.IPlayerComponent.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.IPlayerComponent.html",
    "title": "Interface IPlayerComponent | Fantasy Crescendo",
    "keywords": "Interface IPlayerComponent Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public interface IPlayerComponent Methods Initialize(PlayerConfig, Boolean) Declaration Task Initialize(PlayerConfig config, bool isView = false) Parameters Type Name Description PlayerConfig config System.Boolean isView Returns Type Description Task"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.IPlayerSimulation.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.IPlayerSimulation.html",
    "title": "Interface IPlayerSimulation | Fantasy Crescendo",
    "keywords": "Interface IPlayerSimulation Inherited Members IPlayerComponent.Initialize(PlayerConfig, Boolean) ISimulation<PlayerState, PlayerInputContext>.Simulate(PlayerState, PlayerInputContext) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public interface IPlayerSimulation : IPlayerComponent, ISimulation<PlayerState, PlayerInputContext>, IDisposable Methods Presimulate(PlayerState) Declaration void Presimulate(in PlayerState state) Parameters Type Name Description PlayerState state ResetState(ref PlayerState) Declaration void ResetState(ref PlayerState state) Parameters Type Name Description PlayerState state"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.IPlayerView.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.IPlayerView.html",
    "title": "Interface IPlayerView | Fantasy Crescendo",
    "keywords": "Interface IPlayerView Inherited Members IPlayerComponent.Initialize(PlayerConfig, Boolean) IStateView<PlayerState>.UpdateView(PlayerState) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public interface IPlayerView : IPlayerComponent, IStateView<PlayerState>, IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.InputUtil.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.InputUtil.html",
    "title": "Class InputUtil | Fantasy Crescendo",
    "keywords": "Class InputUtil Inheritance System.Object InputUtil Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public static class InputUtil Methods EnforceDeadZone(Vector2, Nullable<Single>) Declaration public static Vector2 EnforceDeadZone(Vector2 input, float? deadZone = default (float? )) Parameters Type Name Description Vector2 input System.Nullable < System.Single > deadZone Returns Type Description Vector2 MaxComponent(Vector2) Declaration public static Vector2 MaxComponent(Vector2 value) Parameters Type Name Description Vector2 value Returns Type Description Vector2 OutsideDeadZone(Single, Nullable<Single>) Declaration public static bool OutsideDeadZone(float value, float? deadZone = default (float? )) Parameters Type Name Description System.Single value System.Nullable < System.Single > deadZone Returns Type Description System.Boolean OutsideDeadZone(Vector2, Nullable<Single>) Declaration public static bool OutsideDeadZone(Vector2 value, float? deadZone = default (float? )) Parameters Type Name Description Vector2 value System.Nullable < System.Single > deadZone Returns Type Description System.Boolean"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerActive.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerActive.html",
    "title": "Class PlayerActive | Fantasy Crescendo",
    "keywords": "Class PlayerActive Inheritance MonoBehaviour PlayerComponent PlayerActive Implements IPlayerView IPlayerSimulation Inherited Members PlayerComponent.Initialize(PlayerConfig, Boolean) PlayerComponent.Presimulate(PlayerState) PlayerComponent.Simulate(PlayerState, PlayerInputContext) PlayerComponent.UpdateView(PlayerState) PlayerComponent.Dispose() PlayerComponent.ResetState(PlayerState) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public class PlayerActive : PlayerComponent, IPlayerView, IPlayerSimulation Fields Invert Declaration public bool Invert Field Value Type Description System.Boolean TargetObjects Declaration public Object[] TargetObjects Field Value Type Description Object [] Methods UpdateView(PlayerState) Declaration public override void UpdateView(in PlayerState state) Parameters Type Name Description PlayerState state Implements IPlayerView IPlayerSimulation"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerDamage.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerDamage.html",
    "title": "Class PlayerDamage | Fantasy Crescendo",
    "keywords": "Class PlayerDamage A UI Component that allows displaying a players current damage. Inheritance MonoBehaviour PlayerComponent PlayerDamage Implements IPlayerView IPlayerSimulation Inherited Members PlayerComponent.Initialize(PlayerConfig, Boolean) PlayerComponent.Presimulate(PlayerState) PlayerComponent.Simulate(PlayerState, PlayerInputContext) PlayerComponent.UpdateView(PlayerState) PlayerComponent.Dispose() PlayerComponent.ResetState(PlayerState) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public class PlayerDamage : PlayerComponent, IPlayerView, IPlayerSimulation Fields DisplayColor Declaration public Gradient DisplayColor Field Value Type Description Gradient DisplayText Declaration public TMP_Text DisplayText Field Value Type Description TMP_Text Format Declaration public string Format Field Value Type Description System.String MaxDamage Declaration public float MaxDamage Field Value Type Description System.Single MinDamage Declaration public float MinDamage Field Value Type Description System.Single Methods UpdateView(PlayerState) Declaration public override void UpdateView(in PlayerState state) Parameters Type Name Description PlayerState state Implements IPlayerView IPlayerSimulation"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerDiedEvent.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerDiedEvent.html",
    "title": "Class PlayerDiedEvent | Fantasy Crescendo",
    "keywords": "Class PlayerDiedEvent Inheritance System.Object MatchEvent PlayerEvent PlayerDiedEvent Inherited Members PlayerEvent.PlayerID PlayerEvent.PlayerState PlayerEvent.Copy(PlayerEvent) MatchEvent.MatchConfig MatchEvent.MatchState MatchEvent.Copy(MatchEvent) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public class PlayerDiedEvent : PlayerEvent Fields Respawned Declaration public bool Respawned Field Value Type Description System.Boolean"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerDisplayFactory.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerDisplayFactory.html",
    "title": "Class PlayerDisplayFactory | Fantasy Crescendo",
    "keywords": "Class PlayerDisplayFactory Inheritance MonoBehaviour ViewFactory < PlayerState , PlayerConfig > PlayerViewFactory < PlayerState > PlayerDisplayFactory Implements IViewFactory < PlayerState , PlayerConfig > Inherited Members PlayerViewFactory<PlayerState>.Prefab PlayerViewFactory<PlayerState>.CreateViews(PlayerConfig) PlayerViewFactory<PlayerState>.Postinitalize(PlayerConfig, GameObject) ViewFactory<PlayerState, PlayerConfig>.CreateViews(PlayerConfig) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public class PlayerDisplayFactory : PlayerViewFactory<PlayerState>, IViewFactory<PlayerState, PlayerConfig> Fields Container Declaration public RectTransform Container Field Value Type Description RectTransform Methods Preinitialize(PlayerConfig, GameObject) Declaration protected override void Preinitialize(PlayerConfig config, GameObject view) Parameters Type Name Description PlayerConfig config GameObject view Overrides HouraiTeahouse.FantasyCrescendo.PlayerViewFactory<HouraiTeahouse.FantasyCrescendo.Players.PlayerState>.Preinitialize(HouraiTeahouse.FantasyCrescendo.PlayerConfig, GameObject) Implements IViewFactory<TState, TConfig>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerEvent.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerEvent.html",
    "title": "Class PlayerEvent | Fantasy Crescendo",
    "keywords": "Class PlayerEvent Inheritance System.Object MatchEvent PlayerEvent PlayerDiedEvent PlayerResetEvent PlayerRespawnEvent Inherited Members MatchEvent.MatchConfig MatchEvent.MatchState MatchEvent.Copy(MatchEvent) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public abstract class PlayerEvent : MatchEvent Constructors PlayerEvent() Declaration public PlayerEvent() PlayerEvent(PlayerEvent) Declaration public PlayerEvent(PlayerEvent evt) Parameters Type Name Description PlayerEvent evt Fields PlayerID Declaration public int PlayerID Field Value Type Description System.Int32 Properties PlayerState Declaration public PlayerState PlayerState { get; } Property Value Type Description PlayerState Methods Copy(PlayerEvent) Declaration public void Copy(PlayerEvent evt) Parameters Type Name Description PlayerEvent evt"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerInput.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerInput.html",
    "title": "Struct PlayerInput | Fantasy Crescendo",
    "keywords": "Struct PlayerInput A data object representing the complete input of one player for a given tick. Implements IValidatable IMergable < PlayerInput > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public struct PlayerInput : IValidatable, IMergable<PlayerInput> Fields Buttons Declaration public byte Buttons Field Value Type Description System.Byte Movement Declaration public Vector2b Movement Field Value Type Description Vector2b Smash Declaration public Vector2b Smash Field Value Type Description Vector2b Properties Attack Declaration public bool Attack { get; set; } Property Value Type Description System.Boolean Grab Declaration public bool Grab { get; set; } Property Value Type Description System.Boolean IsValid Declaration public bool IsValid { get; set; } Property Value Type Description System.Boolean Jump Declaration public bool Jump { get; set; } Property Value Type Description System.Boolean Shield Declaration public bool Shield { get; set; } Property Value Type Description System.Boolean Special Declaration public bool Special { get; set; } Property Value Type Description System.Boolean Methods Deserialize(Deserializer, Nullable<PlayerInput>) Declaration public static PlayerInput Deserialize(Deserializer deserializer, PlayerInput? previous = default (PlayerInput? )) Parameters Type Name Description Deserializer deserializer System.Nullable < PlayerInput > previous Returns Type Description PlayerInput Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() MergeWith(PlayerInput) Declaration public PlayerInput MergeWith(PlayerInput other) Parameters Type Name Description PlayerInput other Returns Type Description PlayerInput Serialize(Serializer, Nullable<PlayerInput>) Declaration public void Serialize(Serializer serializer, PlayerInput? previous = default (PlayerInput? )) Parameters Type Name Description Serializer serializer System.Nullable < PlayerInput > previous ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Explicit Interface Implementations IValidatable.IsValid Declaration bool IValidatable.IsValid { get; } Returns Type Description System.Boolean Implements IValidatable IMergable<T>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerInputContext.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerInputContext.html",
    "title": "Struct PlayerInputContext | Fantasy Crescendo",
    "keywords": "Struct PlayerInputContext A data object for managing the state and change of a single player's input over two ticks of gameplay. Implements IValidatable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public struct PlayerInputContext : IValidatable Fields Current Declaration public PlayerInput Current Field Value Type Description PlayerInput Previous Declaration public PlayerInput Previous Field Value Type Description PlayerInput Properties Attack Declaration public ButtonContext Attack { get; } Property Value Type Description ButtonContext Grab Declaration public ButtonContext Grab { get; } Property Value Type Description ButtonContext IsValid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean Jump Declaration public ButtonContext Jump { get; } Property Value Type Description ButtonContext Movement Declaration public DirectionalInput Movement { get; } Property Value Type Description DirectionalInput Shield Declaration public ButtonContext Shield { get; } Property Value Type Description ButtonContext Smash Declaration public DirectionalInput Smash { get; } Property Value Type Description DirectionalInput Special Declaration public ButtonContext Special { get; } Property Value Type Description ButtonContext Methods ForceValid(Boolean) Declaration public void ForceValid(bool valid) Parameters Type Name Description System.Boolean valid Update(PlayerInput) Declaration public void Update(PlayerInput input) Parameters Type Name Description PlayerInput input Implements IValidatable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerResetEvent.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerResetEvent.html",
    "title": "Class PlayerResetEvent | Fantasy Crescendo",
    "keywords": "Class PlayerResetEvent Inheritance System.Object MatchEvent PlayerEvent PlayerResetEvent Inherited Members PlayerEvent.PlayerID PlayerEvent.PlayerState PlayerEvent.Copy(PlayerEvent) MatchEvent.MatchConfig MatchEvent.MatchState MatchEvent.Copy(MatchEvent) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public class PlayerResetEvent : PlayerEvent Constructors PlayerResetEvent(PlayerEvent) Declaration public PlayerResetEvent(PlayerEvent evt) Parameters Type Name Description PlayerEvent evt"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerRespawnEvent.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerRespawnEvent.html",
    "title": "Class PlayerRespawnEvent | Fantasy Crescendo",
    "keywords": "Class PlayerRespawnEvent Inheritance System.Object MatchEvent PlayerEvent PlayerRespawnEvent Inherited Members PlayerEvent.PlayerID PlayerEvent.PlayerState PlayerEvent.Copy(PlayerEvent) MatchEvent.MatchConfig MatchEvent.MatchState MatchEvent.Copy(MatchEvent) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public class PlayerRespawnEvent : PlayerEvent Constructors PlayerRespawnEvent(PlayerEvent) Declaration public PlayerRespawnEvent(PlayerEvent evt) Parameters Type Name Description PlayerEvent evt"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerSimulation.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerSimulation.html",
    "title": "Class PlayerSimulation | Fantasy Crescendo",
    "keywords": "Class PlayerSimulation Inheritance System.Object PlayerSimulation Implements IInitializable < PlayerConfig > ISimulation < PlayerState , PlayerInputContext > IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public class PlayerSimulation : IInitializable<PlayerConfig>, ISimulation<PlayerState, PlayerInputContext>, IDisposable Methods Dispose() Declaration public void Dispose() Initialize(PlayerConfig) Declaration public Task Initialize(PlayerConfig config) Parameters Type Name Description PlayerConfig config Returns Type Description Task Presimulate(PlayerState) Declaration public void Presimulate(in PlayerState state) Parameters Type Name Description PlayerState state ResetState(ref PlayerState) Declaration public void ResetState(ref PlayerState state) Parameters Type Name Description PlayerState state Simulate(ref PlayerState, PlayerInputContext) Declaration public void Simulate(ref PlayerState state, PlayerInputContext input) Parameters Type Name Description PlayerState state PlayerInputContext input Implements IInitializable<T> ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerState.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerState.html",
    "title": "Struct PlayerState | Fantasy Crescendo",
    "keywords": "Struct PlayerState A complete representation of a player's state at a given tick. Implements INetworkSerializable Inherited Members System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public struct PlayerState : INetworkSerializable Fields Charge Declaration public byte Charge Field Value Type Description System.Byte Direction Declaration public bool Direction Field Value Type Description System.Boolean GrabbedLedgeID Declaration public byte GrabbedLedgeID Field Value Type Description System.Byte GrabbedLedgeTimer Declaration public short GrabbedLedgeTimer Field Value Type Description System.Int16 Hitlag Declaration public uint Hitlag Field Value Type Description System.UInt32 Hitstun Declaration public uint Hitstun Field Value Type Description System.UInt32 IsFastFalling Declaration public bool IsFastFalling Field Value Type Description System.Boolean IsTeetering Declaration public bool IsTeetering Field Value Type Description System.Boolean JumpCount Declaration public uint JumpCount Field Value Type Description System.UInt32 MatchState Declaration public MatchState MatchState Field Value Type Description MatchState PlayersHit Declaration public byte PlayersHit Field Value Type Description System.Byte RespawnTimeRemaining Declaration public uint RespawnTimeRemaining Field Value Type Description System.UInt32 ShieldDamage Declaration public uint ShieldDamage Field Value Type Description System.UInt32 ShieldRecoveryCooldown Declaration public uint ShieldRecoveryCooldown Field Value Type Description System.UInt32 StateID Declaration public uint StateID Field Value Type Description System.UInt32 StateTick Declaration public uint StateTick Field Value Type Description System.UInt32 Stocks Declaration public sbyte Stocks Field Value Type Description System.SByte Properties Damage Declaration public float Damage { get; set; } Property Value Type Description System.Single IsActive Declaration public bool IsActive { get; } Property Value Type Description System.Boolean IsGrabbingLedge Declaration public bool IsGrabbingLedge { get; } Property Value Type Description System.Boolean IsHit Declaration public bool IsHit { get; } Property Value Type Description System.Boolean IsRespawning Declaration public bool IsRespawning { get; } Property Value Type Description System.Boolean Position Declaration public Vector2 Position { get; set; } Property Value Type Description Vector2 PositionX Declaration public float PositionX { get; set; } Property Value Type Description System.Single PositionY Declaration public float PositionY { get; set; } Property Value Type Description System.Single StateTime Declaration public float StateTime { get; } Property Value Type Description System.Single Velocity Declaration public Vector2 Velocity { get; set; } Property Value Type Description Vector2 VelocityX Declaration public float VelocityX { get; set; } Property Value Type Description System.Single VelocityY Declaration public float VelocityY { get; set; } Property Value Type Description System.Single Methods Deserialize(Deserializer) Declaration public void Deserialize(Deserializer deserializer) Parameters Type Name Description Deserializer deserializer Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GrabLedge(Ledge) Declaration public void GrabLedge(Ledge ledge) Parameters Type Name Description Ledge ledge HasHit(Int32) Declaration public bool HasHit(int playerId) Parameters Type Name Description System.Int32 playerId Returns Type Description System.Boolean HitPlayer(Int32) Declaration public void HitPlayer(int playerId) Parameters Type Name Description System.Int32 playerId ReleaseLedge() Declaration public void ReleaseLedge() ResetPlayersHit() Declaration public void ResetPlayersHit() Serialize(Serializer) Declaration public void Serialize(Serializer writer) Parameters Type Name Description Serializer writer Implements INetworkSerializable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerStockDisplay.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerStockDisplay.html",
    "title": "Class PlayerStockDisplay | Fantasy Crescendo",
    "keywords": "Class PlayerStockDisplay Inheritance MonoBehaviour PlayerComponent PlayerStockDisplay Implements IPlayerView IPlayerSimulation Inherited Members PlayerComponent.Initialize(PlayerConfig, Boolean) PlayerComponent.Presimulate(PlayerState) PlayerComponent.Simulate(PlayerState, PlayerInputContext) PlayerComponent.UpdateView(PlayerState) PlayerComponent.Dispose() PlayerComponent.ResetState(PlayerState) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public class PlayerStockDisplay : PlayerComponent, IPlayerView, IPlayerSimulation Fields ExcessDisplay Declaration public TMP_Text ExcessDisplay Field Value Type Description TMP_Text ExcessFormat Declaration public string ExcessFormat Field Value Type Description System.String standardIndicators Declaration public GameObject[] standardIndicators Field Value Type Description GameObject [] Methods UpdateView(PlayerState) Declaration public override void UpdateView(in PlayerState state) Parameters Type Name Description PlayerState state Implements IPlayerView IPlayerSimulation"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerUtil.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.PlayerUtil.html",
    "title": "Class PlayerUtil | Fantasy Crescendo",
    "keywords": "Class PlayerUtil Utility static class for management of Player related components. Inheritance System.Object PlayerUtil Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public static class PlayerUtil Methods DestroyAll(GameObject, Type[]) Finds and destroys all components of a given set of types found on a GameObject or any of it's children. Declaration public static void DestroyAll(GameObject characterObject, params Type[] componentTypes) Parameters Type Name Description GameObject characterObject the root object to search from. Type [] componentTypes the types to destroy. Remarks This function uses Object.DestroyImmediate. Instantiate(PlayerConfig, Boolean) Declaration public static Task<GameObject> Instantiate(PlayerConfig config, bool isView = false) Parameters Type Name Description PlayerConfig config System.Boolean isView Returns Type Description Task < GameObject > RespawnPlayer(PlayerDiedEvent) Declaration public static PlayerRespawnEvent RespawnPlayer(PlayerDiedEvent evt) Parameters Type Name Description PlayerDiedEvent evt Returns Type Description PlayerRespawnEvent"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.Vector2b.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.Vector2b.html",
    "title": "Struct Vector2b | Fantasy Crescendo",
    "keywords": "Struct Vector2b Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Players Assembly : cs.temp.dll.dll Syntax public struct Vector2b Fields X Declaration public sbyte X Field Value Type Description System.SByte Y Declaration public sbyte Y Field Value Type Description System.SByte Properties x Declaration public float x { get; set; } Property Value Type Description System.Single y Declaration public float y { get; set; } Property Value Type Description System.Single Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Implicit(Vector2b to Vector2) Declaration public static implicit operator Vector2(Vector2b vector) Parameters Type Name Description Vector2b vector Returns Type Description Vector2 Implicit(Vector2 to Vector2b) Declaration public static implicit operator Vector2b(Vector2 vector) Parameters Type Name Description Vector2 vector Returns Type Description Vector2b"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Players.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Players.html",
    "title": "Namespace HouraiTeahouse.FantasyCrescendo.Players | Fantasy Crescendo",
    "keywords": "Namespace HouraiTeahouse.FantasyCrescendo.Players Classes InputUtil PlayerActive PlayerDamage A UI Component that allows displaying a players current damage. PlayerDiedEvent PlayerDisplayFactory PlayerEvent PlayerResetEvent PlayerRespawnEvent PlayerSimulation PlayerStockDisplay PlayerUtil Utility static class for management of Player related components. Structs ButtonContext A simple data object for managing the state and change of a single button over two ticks of gameplay. DirectionalInput PlayerInput A data object representing the complete input of one player for a given tick. PlayerInputContext A data object for managing the state and change of a single player's input over two ticks of gameplay. PlayerState A complete representation of a player's state at a given tick. Vector2b Interfaces IPlayerComponent IPlayerSimulation IPlayerView Enums Direction"
  },
  "api/HouraiTeahouse.FantasyCrescendo.PostProcessingOptionsControl.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.PostProcessingOptionsControl.html",
    "title": "Class PostProcessingOptionsControl | Fantasy Crescendo",
    "keywords": "Class PostProcessingOptionsControl Inheritance MonoBehaviour PostProcessingOptionsControl Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class PostProcessingOptionsControl : MonoBehaviour Fields Antialiasing Declaration public Option Antialiasing Field Value Type Description Option BloomOption Declaration public Option BloomOption Field Value Type Description Option DepthOfFieldOption Declaration public Option DepthOfFieldOption Field Value Type Description Option GlobalVolume Declaration public PostProcessVolume GlobalVolume Field Value Type Description PostProcessVolume PostProcessLayer Declaration public PostProcessLayer PostProcessLayer Field Value Type Description PostProcessLayer"
  },
  "api/HouraiTeahouse.FantasyCrescendo.QualityManager.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.QualityManager.html",
    "title": "Class QualityManager | Fantasy Crescendo",
    "keywords": "Class QualityManager Inheritance MonoBehaviour QualityManager Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class QualityManager : MonoBehaviour Fields QualityLevelOption Declaration public Option QualityLevelOption Field Value Type Description Option TextureQualityOption Declaration public Option TextureQualityOption Field Value Type Description Option Properties BypassTextureQuality Declaration public bool BypassTextureQuality { get; set; } Property Value Type Description System.Boolean"
  },
  "api/HouraiTeahouse.FantasyCrescendo.RegisteredBehaviour-2.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.RegisteredBehaviour-2.html",
    "title": "Class RegisteredBehaviour<T, TID> | Fantasy Crescendo",
    "keywords": "Class RegisteredBehaviour<T, TID> Inheritance MonoBehaviour RegisteredBehaviour<T, TID> Ledge Platform Implements IEntity Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public abstract class RegisteredBehaviour<T, TID> : MonoBehaviour, IEntity where T : RegisteredBehaviour<T, TID> Type Parameters Name Description T TID Fields Id Declaration public TID Id Field Value Type Description TID Methods Awake() Awake is called when the script instance is being loaded. Declaration protected virtual void Awake() OnDestroy() This function is called when the MonoBehaviour will be destroyed. Declaration protected virtual void OnDestroy() Explicit Interface Implementations IEntity.Id Declaration uint IEntity.Id { get; } Returns Type Description System.UInt32 Implements IEntity"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Registry-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Registry-1.html",
    "title": "Class Registry<T> | Fantasy Crescendo",
    "keywords": "Class Registry<T> Inheritance System.Object Registry<T> Implements System.Collections.Generic.ICollection <T> System.Collections.Generic.IEnumerable <T> System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class Registry<T> : ICollection<T>, IEnumerable<T>, IEnumerable where T : IEntity Type Parameters Name Description T Constructors Registry() Declaration public Registry() Properties Count Declaration public int Count { get; } Property Value Type Description System.Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean Methods Add(T) Declaration public void Add(T obj) Parameters Type Name Description T obj Clear() Declaration public void Clear() Contains(T) Declaration public bool Contains(T obj) Parameters Type Name Description T obj Returns Type Description System.Boolean CopyTo(T[], Int32) Declaration public void CopyTo(T[] array, int start) Parameters Type Name Description T[] array System.Int32 start Get(UInt32) Declaration public T Get(uint id) Parameters Type Name Description System.UInt32 id Returns Type Description T GetEnumerator() Declaration public Dictionary<uint, T>.ValueCollection.Enumerator GetEnumerator() Returns Type Description System.Collections.Generic.Dictionary.ValueCollection.Enumerator <> Remove(T) Declaration public bool Remove(T obj) Parameters Type Name Description T obj Returns Type Description System.Boolean Explicit Interface Implementations IEnumerable<T>.GetEnumerator() Declaration IEnumerator<T> IEnumerable<T>.GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator <T> IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Registry.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Registry.html",
    "title": "Class Registry | Fantasy Crescendo",
    "keywords": "Class Registry A type-safe global object registry. Inheritance System.Object Registry Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public static class Registry Remarks Only supports types that implement IIdentifiable. Objects are referred to by their IDs, and the ID for a given object is assumed to be globally unique. Methods ClearAll() Clears all registries of all types and the values they store. Declaration public static void ClearAll() Get<T>() Retrieves or creates a new registry for given type. Declaration public static Registry<T> Get<T>()where T : IEntity Returns Type Description Registry <T> the retrieved registry for the type. Type Parameters Name Description T Register(Type, IEntity) Declaration public static void Register(Type targetType, IEntity obj) Parameters Type Name Description Type targetType IEntity obj"
  },
  "api/HouraiTeahouse.FantasyCrescendo.RequireSteam.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.RequireSteam.html",
    "title": "Class RequireSteam | Fantasy Crescendo",
    "keywords": "Class RequireSteam Inheritance MonoBehaviour RequireSteam Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class RequireSteam : MonoBehaviour Fields Invert Declaration public bool Invert Field Value Type Description System.Boolean toDisable Declaration public Object[] toDisable Field Value Type Description Object [] toEnable Declaration public Object[] toEnable Field Value Type Description Object []"
  },
  "api/HouraiTeahouse.FantasyCrescendo.SceneConfig.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.SceneConfig.html",
    "title": "Class SceneConfig | Fantasy Crescendo",
    "keywords": "Class SceneConfig Inheritance ScriptableObject SceneConfig Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class SceneConfig : ScriptableObject Fields SpawnTag Declaration public string SpawnTag Field Value Type Description System.String Properties AdditionalStageScenes Declaration public ReadOnlyCollection<IScene> AdditionalStageScenes { get; } Property Value Type Description ReadOnlyCollection < IScene > ErrorScene Declaration public IScene ErrorScene { get; } Property Value Type Description IScene MainMenuScene Declaration public IScene MainMenuScene { get; } Property Value Type Description IScene MatchEndScene Declaration public IScene MatchEndScene { get; } Property Value Type Description IScene"
  },
  "api/HouraiTeahouse.FantasyCrescendo.SceneData.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.SceneData.html",
    "title": "Class SceneData | Fantasy Crescendo",
    "keywords": "Class SceneData Inheritance ScriptableObject GameDataBase SceneData Implements IEntity Inherited Members GameDataBase.Id GameDataBase.IsSelectable GameDataBase.IsVisible GameDataBase.IsDebug Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class SceneData : GameDataBase, IEntity Fields LoadPriority Declaration public int LoadPriority Field Value Type Description System.Int32 Music Declaration public BGM[] Music Field Value Type Description BGM [] Name Declaration public string Name Field Value Type Description System.String Type Declaration public SceneType Type Field Value Type Description SceneType Properties GameScene Declaration public IScene GameScene { get; } Property Value Type Description IScene Icon Declaration public IAsset<Sprite> Icon { get; } Property Value Type Description IAsset < Sprite > PreviewImage Declaration public IAsset<Sprite> PreviewImage { get; } Property Value Type Description IAsset < Sprite > Methods ToString() Declaration public override string ToString() Returns Type Description System.String Implements IEntity"
  },
  "api/HouraiTeahouse.FantasyCrescendo.SceneLoader.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.SceneLoader.html",
    "title": "Class SceneLoader | Fantasy Crescendo",
    "keywords": "Class SceneLoader Inheritance MonoBehaviour SceneLoader Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class SceneLoader : MonoBehaviour Fields LoadOnAwake Declaration public bool LoadOnAwake Field Value Type Description System.Boolean Mode Declaration public LoadSceneMode Mode Field Value Type Description LoadSceneMode Methods LoadScenes() Declaration public void LoadScenes()"
  },
  "api/HouraiTeahouse.FantasyCrescendo.SceneType.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.SceneType.html",
    "title": "Enum SceneType | Fantasy Crescendo",
    "keywords": "Enum SceneType Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public enum SceneType Fields Name Description Menu Stage"
  },
  "api/HouraiTeahouse.FantasyCrescendo.SimulationBuilder-2.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.SimulationBuilder-2.html",
    "title": "Class SimulationBuilder<TState, TContext> | Fantasy Crescendo",
    "keywords": "Class SimulationBuilder<TState, TContext> Builder object for AggregateSimulation<TState, TContext> objects. Inheritance System.Object AggregateBuilder < ISimulation <TState, TContext>, SimulationBuilder <TState, TContext>> SimulationBuilder<TState, TContext> Inherited Members AggregateBuilder<ISimulation<TState, TContext>, SimulationBuilder<TState, TContext>>.AddSubitem(ISimulation<TState, TContext>) AggregateBuilder<ISimulation<TState, TContext>, SimulationBuilder<TState, TContext>>.AddSubitems(IEnumerable<ISimulation<TState, TContext>>) AggregateBuilder<ISimulation<TState, TContext>, SimulationBuilder<TState, TContext>>.Build() AggregateBuilder<ISimulation<TState, TContext>, SimulationBuilder<TState, TContext>>.BuildImpl(IEnumerable<ISimulation<TState, TContext>>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class SimulationBuilder<TState, TContext> : AggregateBuilder<ISimulation<TState, TContext>, SimulationBuilder<TState, TContext>> Type Parameters Name Description TState the target state type TContext the context for the simulation Methods BuildImpl(IEnumerable<ISimulation<TState, TContext>>) Declaration protected override ISimulation<TState, TContext> BuildImpl(IEnumerable<ISimulation<TState, TContext>> simulations) Parameters Type Name Description System.Collections.Generic.IEnumerable < ISimulation <TState, TContext>> simulations Returns Type Description ISimulation <TState, TContext> Overrides HouraiTeahouse.FantasyCrescendo.AggregateBuilder<HouraiTeahouse.FantasyCrescendo.ISimulation<TState, TContext>, HouraiTeahouse.FantasyCrescendo.SimulationBuilder<TState, TContext>>.BuildImpl(System.Collections.Generic.IEnumerable<HouraiTeahouse.FantasyCrescendo.ISimulation<TState, TContext>>)"
  },
  "api/HouraiTeahouse.FantasyCrescendo.SoundEffect.ClipSelectionMethod.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.SoundEffect.ClipSelectionMethod.html",
    "title": "Enum SoundEffect.ClipSelectionMethod | Fantasy Crescendo",
    "keywords": "Enum SoundEffect.ClipSelectionMethod Methods for selecting a clip for a SoundEffect Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public enum ClipSelectionMethod Fields Name Description Cycle Cycles through the set in sequential order. Random Randomly selects a clip"
  },
  "api/HouraiTeahouse.FantasyCrescendo.SoundEffect.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.SoundEffect.html",
    "title": "Class SoundEffect | Fantasy Crescendo",
    "keywords": "Class SoundEffect A Inheritance ScriptableObject SoundEffect Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class SoundEffect : ScriptableObject Fields Clips All playable clips from this specific SoundEffect. Which clip is selected depends on SelectionMethod . Declaration public AudioClip[] Clips Field Value Type Description AudioClip [] Output Which AudioMixerGroup to output the audio to. Declaration public AudioMixerGroup Output Field Value Type Description AudioMixerGroup Pitch What pitch to play the sound effect at. Note: lower pitches will stretch the length of the effect Declaration public float Pitch Field Value Type Description System.Single Priority Declaration public int Priority Field Value Type Description System.Int32 SelectionMethod The methodology for which clip is selected from Clips . Declaration public SoundEffect.ClipSelectionMethod SelectionMethod Field Value Type Description SoundEffect.ClipSelectionMethod SpatialBlend What pitch to play the sound effect at. Note: lower pitches will stretch the length of the effect Declaration public float SpatialBlend Field Value Type Description System.Single Volume How loud the sound effect will be. Declaration public float Volume Field Value Type Description System.Single Methods Apply(AudioSource) Applies the properties of the SoundEffect to a AudioSource. Declaration public void Apply(AudioSource audioSource) Parameters Type Name Description AudioSource audioSource Play(Transform) Plays the sound effect at the position of a Transform. Declaration public void Play(Transform transform) Parameters Type Name Description Transform transform the object to play the sound effect at Play(Vector3) Plays the sound effect at a given position. Declaration public void Play(Vector3 position = null) Parameters Type Name Description Vector3 position the position to play the sound effect at"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Stages.BlastZone.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Stages.BlastZone.html",
    "title": "Class BlastZone | Fantasy Crescendo",
    "keywords": "Class BlastZone Inheritance MonoBehaviour BlastZone Namespace : HouraiTeahouse.FantasyCrescendo.Stages Assembly : cs.temp.dll.dll Syntax public class BlastZone : MonoBehaviour Fields Bounds Declaration public Bounds Bounds Field Value Type Description Bounds Methods Simulate(MatchState) Declaration public MatchState Simulate(MatchState state) Parameters Type Name Description MatchState state Returns Type Description MatchState"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Stages.RespawnController.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Stages.RespawnController.html",
    "title": "Class RespawnController | Fantasy Crescendo",
    "keywords": "Class RespawnController Inheritance MonoBehaviour RespawnController Namespace : HouraiTeahouse.FantasyCrescendo.Stages Assembly : cs.temp.dll.dll Syntax public class RespawnController : MonoBehaviour Fields RespawnBounds Declaration public Vector3 RespawnBounds Field Value Type Description Vector3 RespawnPositions Declaration public Transform[] RespawnPositions Field Value Type Description Transform [] RespawnTime Declaration public float RespawnTime Field Value Type Description System.Single"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Stages.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Stages.html",
    "title": "Namespace HouraiTeahouse.FantasyCrescendo.Stages | Fantasy Crescendo",
    "keywords": "Namespace HouraiTeahouse.FantasyCrescendo.Stages Classes BlastZone RespawnController"
  },
  "api/HouraiTeahouse.FantasyCrescendo.StateEntryPolicy.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.StateEntryPolicy.html",
    "title": "Enum StateEntryPolicy | Fantasy Crescendo",
    "keywords": "Enum StateEntryPolicy Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public enum StateEntryPolicy Fields Name Description Blocked Normal Passthrough"
  },
  "api/HouraiTeahouse.FantasyCrescendo.TapPlayerInputSource.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.TapPlayerInputSource.html",
    "title": "Class TapPlayerInputSource | Fantasy Crescendo",
    "keywords": "Class TapPlayerInputSource Inheritance System.Object TapPlayerInputSource Implements IInputSource < PlayerInput > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class TapPlayerInputSource : IInputSource<PlayerInput> Constructors TapPlayerInputSource(IInputSource<PlayerInput>) Declaration public TapPlayerInputSource(IInputSource<PlayerInput> baseInput) Parameters Type Name Description IInputSource < PlayerInput > baseInput Methods SampleInput() Declaration public PlayerInput SampleInput() Returns Type Description PlayerInput Implements IInputSource<I>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.TestAssetDisplay.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.TestAssetDisplay.html",
    "title": "Class TestAssetDisplay | Fantasy Crescendo",
    "keywords": "Class TestAssetDisplay A script for setting up a UI Text object with text from a TextAsset. Inheritance MonoBehaviour TestAssetDisplay Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class TestAssetDisplay : MonoBehaviour Fields Text Declaration public Text Text Field Value Type Description Text TextAsset Declaration public TextAsset TextAsset Field Value Type Description TextAsset Methods SetText(TextAsset) Sets the text of the UI Text to the string data stored in a provided TextAsset. Declaration public void SetText(TextAsset asset) Parameters Type Name Description TextAsset asset the source TextAsset."
  },
  "api/HouraiTeahouse.FantasyCrescendo.TestInputSource.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.TestInputSource.html",
    "title": "Class TestInputSource | Fantasy Crescendo",
    "keywords": "Class TestInputSource Inheritance System.Object TestInputSource Implements IMatchInputSource IInputSource < MatchInput > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class TestInputSource : IMatchInputSource, IInputSource<MatchInput> Constructors TestInputSource(MatchConfig) Declaration public TestInputSource(MatchConfig config) Parameters Type Name Description MatchConfig config Properties ValidMask Declaration public byte ValidMask { get; } Property Value Type Description System.Byte Methods SampleInput() Declaration public MatchInput SampleInput() Returns Type Description MatchInput Implements IMatchInputSource IInputSource<I>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.TimeScaledAudio.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.TimeScaledAudio.html",
    "title": "Class TimeScaledAudio | Fantasy Crescendo",
    "keywords": "Class TimeScaledAudio A MonoBehaivour that will stretch out the length and pitch of an AudioSource based on Time.deltaTime Inheritance MonoBehaviour TimeScaledAudio Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class TimeScaledAudio : MonoBehaviour Remarks This has the effect of stopping audio while Time.timeScale is 0 (game is paused). As well as slowing down/speeding up sounds when the game is slowed or sped up. This is done by changing the Pitch of the AudioSource this component controls. It is better to use the Pitch property on the component over directly alterting the pitch of the AudioSource. Properties AudioSource The controlled AudioSource. Declaration public AudioSource AudioSource { get; } Property Value Type Description AudioSource Pitch Gets or sets original pitch of AudioSource. Declaration public float Pitch { get; set; } Property Value Type Description System.Single"
  },
  "api/HouraiTeahouse.FantasyCrescendo.TimedInput-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.TimedInput-1.html",
    "title": "Struct TimedInput<I> | Fantasy Crescendo",
    "keywords": "Struct TimedInput<I> A timed input summary. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public struct TimedInput<I> Type Parameters Name Description I Fields Input The input value. Declaration public I Input Field Value Type Description I Timestep The timestep associated with the input. Declaration public uint Timestep Field Value Type Description System.UInt32"
  },
  "api/HouraiTeahouse.FantasyCrescendo.TrainingGameMode.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.TrainingGameMode.html",
    "title": "Class TrainingGameMode | Fantasy Crescendo",
    "keywords": "Class TrainingGameMode Inheritance ScriptableObject GameDataBase GameMode TrainingGameMode Implements IEntity Inherited Members GameMode.GlobalMaxPlayers GameMode.Name GameMode.MinPlayers GameMode.MaxPlayers GameMode.SupportsNetworkPlay GameMode.IsValidConfig(MatchConfig) GameMode.Execute(MatchConfig, Boolean) GameMode.Reset() GameDataBase.Id GameDataBase.IsSelectable GameDataBase.IsVisible GameDataBase.IsDebug Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class TrainingGameMode : GameMode, IEntity Methods RunGame(MatchConfig, Boolean) Declaration protected override Task RunGame(MatchConfig config, bool loadStage = true) Parameters Type Name Description MatchConfig config System.Boolean loadStage Returns Type Description Task Overrides GameMode.RunGame(MatchConfig, Boolean) Implements IEntity"
  },
  "api/HouraiTeahouse.FantasyCrescendo.UI.CharacterSelectMenu.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.UI.CharacterSelectMenu.html",
    "title": "Class CharacterSelectMenu | Fantasy Crescendo",
    "keywords": "Class CharacterSelectMenu Inheritance MonoBehaviour CharacterSelectMenu Implements IStateView < MatchConfig > IDisposable Namespace : HouraiTeahouse.FantasyCrescendo.UI Assembly : cs.temp.dll.dll Syntax public class CharacterSelectMenu : MonoBehaviour, IStateView<MatchConfig>, IDisposable Fields CharacterView Declaration public RectTransform CharacterView Field Value Type Description RectTransform Container Declaration public RectTransform Container Field Value Type Description RectTransform MainMenu Declaration public MainMenu MainMenu Field Value Type Description MainMenu Properties Players Declaration public ReadOnlyCollection<PlayerSelectControls> Players { get; } Property Value Type Description ReadOnlyCollection < PlayerSelectControls > Methods BuildMatchConfig(MatchConfig) Declaration public MatchConfig BuildMatchConfig(MatchConfig baseConfig) Parameters Type Name Description MatchConfig baseConfig Returns Type Description MatchConfig CreateNewSelection(Byte) Declaration public PlayerSelection CreateNewSelection(byte playerId) Parameters Type Name Description System.Byte playerId Returns Type Description PlayerSelection Dispose() Declaration public void Dispose() NextCharacterID(UInt32, Boolean) Declaration public uint NextCharacterID(uint currentId, bool backwards) Parameters Type Name Description System.UInt32 currentId System.Boolean backwards Returns Type Description System.UInt32 NextPallete(PlayerSelection, Byte, Boolean) Declaration public PlayerSelection NextPallete(PlayerSelection selection, byte playerId, bool backwards) Parameters Type Name Description PlayerSelection selection System.Byte playerId System.Boolean backwards Returns Type Description PlayerSelection UpdateView(MatchConfig) Declaration public void UpdateView(in MatchConfig config) Parameters Type Name Description MatchConfig config Implements IStateView<S> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.UI.CreditsUIBuilder.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.UI.CreditsUIBuilder.html",
    "title": "Class CreditsUIBuilder | Fantasy Crescendo",
    "keywords": "Class CreditsUIBuilder Inheritance MonoBehaviour CreditsUIBuilder Namespace : HouraiTeahouse.FantasyCrescendo.UI Assembly : cs.temp.dll.dll Syntax public class CreditsUIBuilder : MonoBehaviour Fields CategoryLabelTemplate Declaration public RectTransform CategoryLabelTemplate Field Value Type Description RectTransform Container Declaration public RectTransform Container Field Value Type Description RectTransform CreditHeight Declaration public float CreditHeight Field Value Type Description System.Single Credits Declaration public CreditsAsset Credits Field Value Type Description CreditsAsset Indent Declaration public float Indent Field Value Type Description System.Single LabelSize Declaration public float LabelSize Field Value Type Description System.Single MaxContributorsPerLine Declaration public int MaxContributorsPerLine Field Value Type Description System.Int32 OptionLabelTemplate Declaration public RectTransform OptionLabelTemplate Field Value Type Description RectTransform SpaceHeight Declaration public float SpaceHeight Field Value Type Description System.Single"
  },
  "api/HouraiTeahouse.FantasyCrescendo.UI.GameSetupMenu.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.UI.GameSetupMenu.html",
    "title": "Class GameSetupMenu | Fantasy Crescendo",
    "keywords": "Class GameSetupMenu Inheritance MonoBehaviour GameSetupMenu Namespace : HouraiTeahouse.FantasyCrescendo.UI Assembly : cs.temp.dll.dll Syntax public class GameSetupMenu : MonoBehaviour Fields CharacterSelectMenu Declaration public CharacterSelectMenu CharacterSelectMenu Field Value Type Description CharacterSelectMenu Config Declaration public MatchConfig Config Field Value Type Description MatchConfig MainMenu Declaration public MainMenu MainMenu Field Value Type Description MainMenu StageDropdwon Declaration public Dropdown StageDropdwon Field Value Type Description Dropdown ValidationUIElements Declaration public Button[] ValidationUIElements Field Value Type Description Button [] Methods LaunchGame() Declaration public void LaunchGame() Events OnStartMatch Declaration public event Func<MatchConfig, Task> OnStartMatch Event Type Type Description Func < MatchConfig , Task >"
  },
  "api/HouraiTeahouse.FantasyCrescendo.UI.PlayerSelectControls.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.UI.PlayerSelectControls.html",
    "title": "Class PlayerSelectControls | Fantasy Crescendo",
    "keywords": "Class PlayerSelectControls Inheritance MonoBehaviour PlayerSelectControls Namespace : HouraiTeahouse.FantasyCrescendo.UI Assembly : cs.temp.dll.dll Syntax public class PlayerSelectControls : MonoBehaviour Fields ActiveComponents Declaration public Object[] ActiveComponents Field Value Type Description Object [] Buttons Declaration public Button[] Buttons Field Value Type Description Button [] CharacterSelectMenu Declaration public CharacterSelectMenu CharacterSelectMenu Field Value Type Description CharacterSelectMenu IsActive Declaration public bool IsActive Field Value Type Description System.Boolean LocalOnlyButtons Declaration public List<Button> LocalOnlyButtons Field Value Type Description System.Collections.Generic.List < Button > PlayerID Declaration public byte PlayerID Field Value Type Description System.Byte Properties Config Declaration public PlayerConfig Config { get; set; } Property Value Type Description PlayerConfig Methods CycleCharacter(Boolean) Declaration public void CycleCharacter(bool backward) Parameters Type Name Description System.Boolean backward CycleColor(Boolean) Declaration public void CycleColor(bool backward) Parameters Type Name Description System.Boolean backward SetActive(Boolean) Declaration public void SetActive(bool active) Parameters Type Name Description System.Boolean active ToggleActive() Declaration public void ToggleActive() Events PlayerUpdated Declaration public event Action<byte, PlayerConfig> PlayerUpdated Event Type Type Description Action < System.Byte , PlayerConfig >"
  },
  "api/HouraiTeahouse.FantasyCrescendo.UI.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.UI.html",
    "title": "Namespace HouraiTeahouse.FantasyCrescendo.UI | Fantasy Crescendo",
    "keywords": "Namespace HouraiTeahouse.FantasyCrescendo.UI Classes CharacterSelectMenu CreditsUIBuilder GameSetupMenu PlayerSelectControls"
  },
  "api/HouraiTeahouse.FantasyCrescendo.UnityInputInterface.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.UnityInputInterface.html",
    "title": "Class UnityInputInterface | Fantasy Crescendo",
    "keywords": "Class UnityInputInterface Inheritance BaseInput UnityInputInterface Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class UnityInputInterface : BaseInput Properties mousePosition Declaration public override Vector2 mousePosition { get; } Property Value Type Description Vector2 mousePresent Declaration public override bool mousePresent { get; } Property Value Type Description System.Boolean Methods GetAxisRaw(String) Declaration public override float GetAxisRaw(string controlPath) Parameters Type Name Description System.String controlPath Returns Type Description System.Single GetButtonDown(String) Declaration public override bool GetButtonDown(string controlPath) Parameters Type Name Description System.String controlPath Returns Type Description System.Boolean GetMouseButton(Int32) Declaration public override bool GetMouseButton(int button) Parameters Type Name Description System.Int32 button Returns Type Description System.Boolean GetMouseButtonDown(Int32) Declaration public override bool GetMouseButtonDown(int button) Parameters Type Name Description System.Int32 button Returns Type Description System.Boolean GetMouseButtonUp(Int32) Declaration public override bool GetMouseButtonUp(int button) Parameters Type Name Description System.Int32 button Returns Type Description System.Boolean"
  },
  "api/HouraiTeahouse.FantasyCrescendo.UnityInputSource.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.UnityInputSource.html",
    "title": "Class UnityInputSource | Fantasy Crescendo",
    "keywords": "Class UnityInputSource Inheritance System.Object MatchInputSourceBase < UnityPlayerInputSource > UnityInputSource Implements IMatchInputSource IInputSource < MatchInput > Inherited Members MatchInputSourceBase<UnityPlayerInputSource>.ValidMask MatchInputSourceBase<UnityPlayerInputSource>.SampleInput() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class UnityInputSource : MatchInputSourceBase<UnityPlayerInputSource>, IMatchInputSource, IInputSource<MatchInput> Constructors UnityInputSource(MatchConfig) Declaration public UnityInputSource(MatchConfig config) Parameters Type Name Description MatchConfig config Implements IMatchInputSource IInputSource<I>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.UnityPlayerInputSource.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.UnityPlayerInputSource.html",
    "title": "Class UnityPlayerInputSource | Fantasy Crescendo",
    "keywords": "Class UnityPlayerInputSource Inheritance System.Object UnityPlayerInputSource Implements IInputSource < PlayerInput > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class UnityPlayerInputSource : IInputSource<PlayerInput> Constructors UnityPlayerInputSource(PlayerConfig) Declaration public UnityPlayerInputSource(PlayerConfig config) Parameters Type Name Description PlayerConfig config Methods SampleInput() Declaration public PlayerInput SampleInput() Returns Type Description PlayerInput Implements IInputSource<I>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.VersionText.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.VersionText.html",
    "title": "Class VersionText | Fantasy Crescendo",
    "keywords": "Class VersionText Inheritance MonoBehaviour VersionText Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class VersionText : MonoBehaviour Fields Format Declaration public string Format Field Value Type Description System.String Text Declaration public TMP_Text Text Field Value Type Description TMP_Text"
  },
  "api/HouraiTeahouse.FantasyCrescendo.ViewBuilder-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.ViewBuilder-1.html",
    "title": "Class ViewBuilder<T> | Fantasy Crescendo",
    "keywords": "Class ViewBuilder<T> Builder object for AggregateView<T> objects. Inheritance System.Object AggregateBuilder < IStateView <T>, ViewBuilder <T>> ViewBuilder<T> Inherited Members AggregateBuilder<IStateView<T>, ViewBuilder<T>>.AddSubitem(IStateView<T>) AggregateBuilder<IStateView<T>, ViewBuilder<T>>.AddSubitems(IEnumerable<IStateView<T>>) AggregateBuilder<IStateView<T>, ViewBuilder<T>>.Build() AggregateBuilder<IStateView<T>, ViewBuilder<T>>.BuildImpl(IEnumerable<IStateView<T>>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class ViewBuilder<T> : AggregateBuilder<IStateView<T>, ViewBuilder<T>> Type Parameters Name Description T the state type for the view to build Methods BuildImpl(IEnumerable<IStateView<T>>) Declaration protected override IStateView<T> BuildImpl(IEnumerable<IStateView<T>> views) Parameters Type Name Description System.Collections.Generic.IEnumerable < IStateView <T>> views Returns Type Description IStateView <T> Overrides HouraiTeahouse.FantasyCrescendo.AggregateBuilder<HouraiTeahouse.FantasyCrescendo.IStateView<T>, HouraiTeahouse.FantasyCrescendo.ViewBuilder<T>>.BuildImpl(System.Collections.Generic.IEnumerable<HouraiTeahouse.FantasyCrescendo.IStateView<T>>)"
  },
  "api/HouraiTeahouse.FantasyCrescendo.ViewFactory-2.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.ViewFactory-2.html",
    "title": "Class ViewFactory<TState, TConfig> | Fantasy Crescendo",
    "keywords": "Class ViewFactory<TState, TConfig> Inheritance MonoBehaviour ViewFactory<TState, TConfig> MatchTimerUI PlayerViewFactory<T> Implements IViewFactory <TState, TConfig> Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public abstract class ViewFactory<TState, TConfig> : MonoBehaviour, IViewFactory<TState, TConfig> Type Parameters Name Description TState TConfig Methods CreateViews(TConfig) Declaration public abstract Task<IStateView<TState>[]> CreateViews(TConfig config) Parameters Type Name Description TConfig config Returns Type Description Task < IStateView <TState>[]> Implements IViewFactory<TState, TConfig>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.VisualConfig.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.VisualConfig.html",
    "title": "Class VisualConfig | Fantasy Crescendo",
    "keywords": "Class VisualConfig Inheritance ScriptableObject VisualConfig Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class VisualConfig : ScriptableObject Fields PlayerColors Declaration public Color[] PlayerColors Field Value Type Description Color [] RespawnPlatformPrefab Declaration public GameObject RespawnPlatformPrefab Field Value Type Description GameObject Methods GetPlayerColor(UInt32) Declaration public Color GetPlayerColor(uint playerId) Parameters Type Name Description System.UInt32 playerId Returns Type Description Color"
  },
  "api/HouraiTeahouse.FantasyCrescendo.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.html",
    "title": "Namespace HouraiTeahouse.FantasyCrescendo | Fantasy Crescendo",
    "keywords": "Namespace HouraiTeahouse.FantasyCrescendo Classes AbstractHitDetector AggregateBuilder<T, TBuilder> Abstract class for building aggregate interfaces. AggregateObject<T> AggregateSimulation<TState, TContext> AggregateView<T> AnalyticsManager AnimationTriggerOnChange ArrayUtil AudioConfig AudioManager Singleton manager of all audio related functions in the game. BGM BGMPlayer BootstrapSceneLoader BufferedInputSource<I> CameraController CameraTarget CharacterData A data object representing a playable character. CharacterPallete CharacterStateData ConstantRotation CoreUtility CustomControllerLayouts CustomEventBuilder DataLoader A iniitalizer component that loads dynamically loadable data into the global Registry. DebugConfig DebugDisplay DefaultGameMode DiscordManager DrawColliders EditorQuickMatch EditorQuickMatchResults ErrorManager ErrorScreen FPSCounter GameDataBase GameMode GameplayConfig GizmoUtil Hitbox HitboxUtil HitEffect Hurtbox InputConfig InputHistory<I> A managed history of a set of inputs. InputModule IValidatableExtensions A set of extension methods for IValidatable objects and their enumerations. KeyboardOverridePlayerInputSource Ledge LoadingScreen MainMenu ManagedAudio A reference to an AudioSource managed by the AudioManager MatchCameraTarget MatchInputSourceBase<T> MatchPauseController MatchStateDebugView MatchTimerUI Menu MenuManager Merger<T> A static class for creating IMerger<I> objects. MessageCodes Messaging NetworkConfig NetworkMenu PauseCamera PauseSFX PauseVisibility PhysicsConfig Platform PlayerColor A UI component for changing a Unity UI component's color to match that of a given player. The color is defined by the registered VisualConfig. PlayerComponent PlayerControllerMapping PlayerIndicatorFactory PlayerMatchResultDisplayFactory PlayerName PlayerStateDebugView PlayerViewFactory<T> PostProcessingOptionsControl QualityManager RegisteredBehaviour<T, TID> Registry A type-safe global object registry. Registry<T> RequireSteam SceneConfig SceneData SceneLoader SimulationBuilder<TState, TContext> Builder object for AggregateSimulation<TState, TContext> objects. SoundEffect A TapPlayerInputSource TestAssetDisplay A script for setting up a UI Text object with text from a TextAsset. TestInputSource TimeScaledAudio A MonoBehaivour that will stretch out the length and pitch of an AudioSource based on Time.deltaTime TrainingGameMode UnityInputInterface UnityInputSource UnityPlayerInputSource VersionText ViewBuilder<T> Builder object for AggregateView<T> objects. ViewFactory<TState, TConfig> VisualConfig Structs AudioManager.VolumeOptionBinding A serializable binding between an Option and a AudioMixer control. HitboxCollision HitInfo InputHistory<I>.Enumerator PlayerConfig A data object for configuring a single player within a multiplayer match. PlayerMatchStats PlayerSelection A data object for managing the human selected elements of a player's configuration. TimedInput<I> A timed input summary. Interfaces IEntity An (almost) uniquely identifiable object. IInitializable<T> An asynchronously initializable object. IInputSource<I> A source of MatchInputs. IMatchInputSource IMergable<T> A generic interface for supporting merging with instances of type T IMerger<I> A merge strategy for combining two objects into one. ISimulation<S, I> A stateless simulation for advancing states through time given some external input. IStateView<S> A player-facing display for showing a state. IValidatable An object with potentially invalid states. IValidator<T> A validation policy to check the validity of the state of provided objects. IViewFactory<TState, TConfig> Enums DirectionMode HitboxType HurtboxType MovementType NetworkReliablity PlatformHardness SceneType SoundEffect.ClipSelectionMethod Methods for selecting a clip for a SoundEffect StateEntryPolicy"
  },
  "api/HouraiTeahouse.OptionsUIBuilder.OptionMenuElement.html": {
    "href": "api/HouraiTeahouse.OptionsUIBuilder.OptionMenuElement.html",
    "title": "Struct OptionsUIBuilder.OptionMenuElement | Fantasy Crescendo",
    "keywords": "Struct OptionsUIBuilder.OptionMenuElement Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse Assembly : cs.temp.dll.dll Syntax public struct OptionMenuElement Fields Category Declaration public string Category Field Value Type Description System.String Label Declaration public string Label Field Value Type Description System.String Object Declaration public RectTransform Object Field Value Type Description RectTransform SortPriority Declaration public int SortPriority Field Value Type Description System.Int32"
  },
  "api/HouraiTeahouse.OptionsUIBuilder.html": {
    "href": "api/HouraiTeahouse.OptionsUIBuilder.html",
    "title": "Class OptionsUIBuilder | Fantasy Crescendo",
    "keywords": "Class OptionsUIBuilder Inheritance MonoBehaviour OptionsUIBuilder Namespace : HouraiTeahouse Assembly : cs.temp.dll.dll Syntax public class OptionsUIBuilder : MonoBehaviour Fields AdditionalObjects Declaration public OptionsUIBuilder.OptionMenuElement[] AdditionalObjects Field Value Type Description OptionsUIBuilder.OptionMenuElement [] AutoSave Declaration public bool AutoSave Field Value Type Description System.Boolean DisplayContainer Declaration public RectTransform DisplayContainer Field Value Type Description RectTransform DropdownPrefab Declaration public RectTransform DropdownPrefab Field Value Type Description RectTransform GroupInjectionPoint Declaration public string GroupInjectionPoint Field Value Type Description System.String GroupPrefab Declaration public RectTransform GroupPrefab Field Value Type Description RectTransform HorizontalPadding Declaration public float HorizontalPadding Field Value Type Description System.Single LabelPrefab Declaration public TextMeshProUGUI LabelPrefab Field Value Type Description TextMeshProUGUI LabelWidth Declaration public float LabelWidth Field Value Type Description System.Single LoadFromResources Declaration public bool LoadFromResources Field Value Type Description System.Boolean Options Declaration public List<Option> Options Field Value Type Description System.Collections.Generic.List < Option > RowPrefab Declaration public RectTransform RowPrefab Field Value Type Description RectTransform SaveTimer Declaration public float SaveTimer Field Value Type Description System.Single SliderPrefab Declaration public RectTransform SliderPrefab Field Value Type Description RectTransform TabContainer Declaration public RectTransform TabContainer Field Value Type Description RectTransform TabPrefab Declaration public RectTransform TabPrefab Field Value Type Description RectTransform TogglePrefab Declaration public RectTransform TogglePrefab Field Value Type Description RectTransform VerticalPadding Declaration public float VerticalPadding Field Value Type Description System.Single"
  },
  "api/HouraiTeahouse.Screenshot.html": {
    "href": "api/HouraiTeahouse.Screenshot.html",
    "title": "Class Screenshot | Fantasy Crescendo",
    "keywords": "Class Screenshot Takes screenshots upon pressing a specified keyboard key Inheritance MonoBehaviour Screenshot Namespace : HouraiTeahouse Assembly : cs.temp.dll.dll Syntax public class Screenshot : MonoBehaviour Fields DateTimeFormat Declaration public string DateTimeFormat Field Value Type Description System.String Format Declaration public string Format Field Value Type Description System.String Key Declaration public KeyCode Key Field Value Type Description KeyCode"
  },
  "api/HouraiTeahouse.html": {
    "href": "api/HouraiTeahouse.html",
    "title": "Namespace HouraiTeahouse | Fantasy Crescendo",
    "keywords": "Namespace HouraiTeahouse Classes CreditsAsset Custom asset for allowing easy editing of the game's credits.! Used with to automatically generate the UI on the credits screen. CreditsAsset.Category OptionsUIBuilder Screenshot Takes screenshots upon pressing a specified keyboard key Structs OptionsUIBuilder.OptionMenuElement"
  },
  "api/HouraiTeahouse.FantasyCrescendo.MatchCameraTarget.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.MatchCameraTarget.html",
    "title": "Class MatchCameraTarget | Fantasy Crescendo",
    "keywords": "Class MatchCameraTarget Inheritance MonoBehaviour MatchCameraTarget Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class MatchCameraTarget : MonoBehaviour Fields CameraTarget Declaration public CameraTarget CameraTarget Field Value Type Description CameraTarget FoVRange Declaration public Vector2 FoVRange Field Value Type Description Vector2 MaxSpreadDistance Declaration public float MaxSpreadDistance Field Value Type Description System.Single SmoothTime Declaration public float SmoothTime Field Value Type Description System.Single TargetPositionBias Declaration public Vector3 TargetPositionBias Field Value Type Description Vector3 Targets Declaration public List<Transform> Targets Field Value Type Description System.Collections.Generic.List < Transform > WidthPadding Declaration public float WidthPadding Field Value Type Description System.Single Methods RegisterTarget(Transform) Declaration public void RegisterTarget(Transform target) Parameters Type Name Description Transform target UnregisterTarget(Transform) Declaration public void UnregisterTarget(Transform target) Parameters Type Name Description Transform target"
  },
  "api/HouraiTeahouse.FantasyCrescendo.MatchInputSourceBase-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.MatchInputSourceBase-1.html",
    "title": "Class MatchInputSourceBase<T> | Fantasy Crescendo",
    "keywords": "Class MatchInputSourceBase<T> Inheritance System.Object MatchInputSourceBase<T> UnityInputSource Implements IMatchInputSource IInputSource < MatchInput > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public abstract class MatchInputSourceBase<T> : IMatchInputSource, IInputSource<MatchInput> where T : IInputSource<PlayerInput> Type Parameters Name Description T Constructors MatchInputSourceBase(MatchConfig) Declaration protected MatchInputSourceBase(MatchConfig config) Parameters Type Name Description MatchConfig config Properties ValidMask Declaration public byte ValidMask { get; } Property Value Type Description System.Byte Methods SampleInput() Declaration public MatchInput SampleInput() Returns Type Description MatchInput Implements IMatchInputSource IInputSource<I>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.MatchPauseController.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.MatchPauseController.html",
    "title": "Class MatchPauseController | Fantasy Crescendo",
    "keywords": "Class MatchPauseController Inheritance MonoBehaviour MatchPauseController Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class MatchPauseController : MonoBehaviour Fields PausedPlayer Declaration public int PausedPlayer Field Value Type Description System.Int32 PlayerOneKey Declaration public KeyCode PlayerOneKey Field Value Type Description KeyCode ResetKeys Declaration public KeyCode[] ResetKeys Field Value Type Description KeyCode [] Properties MatchManager Declaration public MatchManager MatchManager { get; } Property Value Type Description MatchManager"
  },
  "api/HouraiTeahouse.FantasyCrescendo.MatchStateDebugView.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.MatchStateDebugView.html",
    "title": "Class MatchStateDebugView | Fantasy Crescendo",
    "keywords": "Class MatchStateDebugView Inheritance MonoBehaviour MatchStateDebugView Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class MatchStateDebugView : MonoBehaviour Fields Manager Declaration public MatchManager Manager Field Value Type Description MatchManager State Declaration public MatchState State Field Value Type Description MatchState"
  },
  "api/HouraiTeahouse.FantasyCrescendo.MatchTimerUI.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.MatchTimerUI.html",
    "title": "Class MatchTimerUI | Fantasy Crescendo",
    "keywords": "Class MatchTimerUI Inheritance MonoBehaviour ViewFactory < MatchState , MatchConfig > MatchTimerUI Implements IViewFactory < MatchState , MatchConfig > IStateView < MatchState > IDisposable Inherited Members ViewFactory<MatchState, MatchConfig>.CreateViews(MatchConfig) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class MatchTimerUI : ViewFactory<MatchState, MatchConfig>, IViewFactory<MatchState, MatchConfig>, IStateView<MatchState>, IDisposable Fields DisplayText Declaration public TMP_Text DisplayText Field Value Type Description TMP_Text Methods CreateViews(MatchConfig) Declaration public override Task<IStateView<MatchState>[]> CreateViews(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description Task < IStateView < MatchState >[]> Overrides HouraiTeahouse.FantasyCrescendo.ViewFactory<HouraiTeahouse.FantasyCrescendo.Matches.MatchState, HouraiTeahouse.FantasyCrescendo.Matches.MatchConfig>.CreateViews(HouraiTeahouse.FantasyCrescendo.Matches.MatchConfig) Dispose() Declaration public void Dispose() UpdateView(MatchState) Declaration public void UpdateView(in MatchState state) Parameters Type Name Description MatchState state Implements IViewFactory<TState, TConfig> IStateView<S> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.DefaultMatch.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.DefaultMatch.html",
    "title": "Class DefaultMatch | Fantasy Crescendo",
    "keywords": "Class DefaultMatch Inheritance System.Object Match DefaultMatch TrainingMatch NetworkMatch Inherited Members Match.RunMatch(MatchConfig, Boolean) Match.CreateRules(MatchConfig) Match.CreateSimulation(MatchConfig) Match.CreateMatchController(MatchConfig) Match.CreateInitialState(MatchConfig) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class DefaultMatch : Match Methods InitializeMatch(MatchManager, MatchConfig) Declaration protected override Task InitializeMatch(MatchManager gameManager, MatchConfig config) Parameters Type Name Description MatchManager gameManager MatchConfig config Returns Type Description Task Overrides Match.InitializeMatch(MatchManager, MatchConfig)"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.IMatchController.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.IMatchController.html",
    "title": "Interface IMatchController | Fantasy Crescendo",
    "keywords": "Interface IMatchController A top-level controller and manager of a multiplayer game's state. Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public interface IMatchController : IDisposable Properties CurrentState The current game state of the game. Declaration MatchState CurrentState { get; set; } Property Value Type Description MatchState InputSource Declaration IMatchInputSource InputSource { get; set; } Property Value Type Description IMatchInputSource Simulation Declaration ISimulation<MatchState, MatchInputContext> Simulation { get; set; } Property Value Type Description ISimulation < MatchState , MatchInputContext > Timestep Gets the current tick number. This should be monotonically increasing over time. Declaration uint Timestep { get; set; } Property Value Type Description System.UInt32 Methods Update() Update the game state. Expected to be called once per Unity FixedUpdate. Declaration void Update()"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.IMatchRule.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.IMatchRule.html",
    "title": "Interface IMatchRule | Fantasy Crescendo",
    "keywords": "Interface IMatchRule Inherited Members IInitializable<MatchConfig>.Initialize(MatchConfig) ISimulation<MatchState, MatchInputContext>.Simulate(MatchState, MatchInputContext) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public interface IMatchRule : IInitializable<MatchConfig>, ISimulation<MatchState, MatchInputContext>, IDisposable Methods GetResolution(MatchState) Declaration MatchResolution? GetResolution(MatchState state) Parameters Type Name Description MatchState state Returns Type Description System.Nullable < MatchResolution > GetWinner(MatchState) Declaration int GetWinner(MatchState state) Parameters Type Name Description MatchState state Returns Type Description System.Int32"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.IMatchSimulation.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.IMatchSimulation.html",
    "title": "Interface IMatchSimulation | Fantasy Crescendo",
    "keywords": "Interface IMatchSimulation Inherited Members IInitializable<MatchConfig>.Initialize(MatchConfig) ISimulation<MatchState, MatchInputContext>.Simulate(MatchState, MatchInputContext) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public interface IMatchSimulation : IInitializable<MatchConfig>, ISimulation<MatchState, MatchInputContext>, IDisposable Methods ResetState(MatchState) Declaration MatchState ResetState(MatchState state) Parameters Type Name Description MatchState state Returns Type Description MatchState"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.Match.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.Match.html",
    "title": "Class Match | Fantasy Crescendo",
    "keywords": "Class Match Inheritance System.Object Match DefaultMatch Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public abstract class Match Methods CreateInitialState(MatchConfig) Declaration protected MatchState CreateInitialState(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description MatchState CreateMatchController(MatchConfig) Declaration protected virtual IMatchController CreateMatchController(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description IMatchController CreateRules(MatchConfig) Declaration protected virtual IEnumerable<IMatchRule> CreateRules(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description System.Collections.Generic.IEnumerable < IMatchRule > CreateSimulation(MatchConfig) Declaration protected IMatchSimulation CreateSimulation(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description IMatchSimulation InitializeMatch(MatchManager, MatchConfig) Declaration protected abstract Task InitializeMatch(MatchManager manager, MatchConfig config) Parameters Type Name Description MatchManager manager MatchConfig config Returns Type Description Task RunMatch(MatchConfig, Boolean) Declaration public Task<MatchResult> RunMatch(MatchConfig config, bool loadScene = true) Parameters Type Name Description MatchConfig config System.Boolean loadScene Returns Type Description Task < MatchResult >"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchConfig.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchConfig.html",
    "title": "Struct MatchConfig | Fantasy Crescendo",
    "keywords": "Struct MatchConfig A data object for configuring a game between multiple players. Implements IValidatable INetworkSerializable Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public struct MatchConfig : IValidatable, INetworkSerializable Fields PlayerConfigs Individual configurations for each participating player. Declaration public PlayerConfig[] PlayerConfigs Field Value Type Description PlayerConfig [] Remarks Note that each player's player ID does not directly correspond with the array index for the player's config. All players in the game with a valid configuration are assumed to be active. For example, the player at index 1 may not be P2. Player 2 may be inactive and the player may be P3 or P4 instead. StageID The ID of the stage that the match will be played on. Declaration public uint StageID Field Value Type Description System.UInt32 Stocks The number of stocks each player starts off with. If set to zero, the match will not be a stock match. Declaration public uint Stocks Field Value Type Description System.UInt32 Time The amount of time the match will last for in ticks. If zero the game will not have a time limit. Declaration public uint Time Field Value Type Description System.UInt32 Properties IsLocal Declaration public bool IsLocal { get; } Property Value Type Description System.Boolean IsValid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean PlayerCount Gets the number of participating players in the game. Declaration public int PlayerCount { get; } Property Value Type Description System.Int32 Methods Deserialize(Deserializer) Declaration public void Deserialize(Deserializer deserializer) Parameters Type Name Description Deserializer deserializer Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Serialize(Serializer) Declaration public void Serialize(Serializer serializer) Parameters Type Name Description Serializer serializer ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Implements IValidatable INetworkSerializable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchController.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchController.html",
    "title": "Class MatchController | Fantasy Crescendo",
    "keywords": "Class MatchController An default IMatchController implementation that runs a normal local game. Inheritance System.Object MatchController ClientGameController ServerGameController Implements IMatchController IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class MatchController : IMatchController, IDisposable Constructors MatchController(MatchConfig) Declaration public MatchController(MatchConfig config) Parameters Type Name Description MatchConfig config Properties CurrentState Declaration public virtual MatchState CurrentState { get; set; } Property Value Type Description MatchState InputSource Declaration public virtual IMatchInputSource InputSource { get; set; } Property Value Type Description IMatchInputSource Simulation Declaration public virtual ISimulation<MatchState, MatchInputContext> Simulation { get; set; } Property Value Type Description ISimulation < MatchState , MatchInputContext > Timestep Declaration public virtual uint Timestep { get; set; } Property Value Type Description System.UInt32 Methods Dispose() Declaration public void Dispose() Update() Declaration public virtual void Update() Implements IMatchController IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchCountdownUI.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchCountdownUI.html",
    "title": "Class MatchCountdownUI | Fantasy Crescendo",
    "keywords": "Class MatchCountdownUI Inheritance MonoBehaviour MatchCountdownUI Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class MatchCountdownUI : MonoBehaviour Fields AudioPlayer Declaration public AudioSource AudioPlayer Field Value Type Description AudioSource CountdownClips Declaration public MatchStateDisplayData[] CountdownClips Field Value Type Description MatchStateDisplayData [] DisableCountdown Declaration public bool DisableCountdown Field Value Type Description System.Boolean InitialDelay Declaration public float InitialDelay Field Value Type Description System.Single MinimumDelay Declaration public float MinimumDelay Field Value Type Description System.Single TextUI Declaration public TextMeshProUGUI TextUI Field Value Type Description TextMeshProUGUI"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchEndEvent.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchEndEvent.html",
    "title": "Class MatchEndEvent | Fantasy Crescendo",
    "keywords": "Class MatchEndEvent Called when match ends, whether it be time out or the gamemode's victory conditions are met. Inheritance System.Object MatchEvent MatchEndEvent Inherited Members MatchEvent.MatchConfig MatchEvent.MatchState MatchEvent.Copy(MatchEvent) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class MatchEndEvent : MatchEvent Fields MatchResult Declaration public MatchResult MatchResult Field Value Type Description MatchResult"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchEndUI.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchEndUI.html",
    "title": "Class MatchEndUI | Fantasy Crescendo",
    "keywords": "Class MatchEndUI Inheritance MonoBehaviour MatchEndUI Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class MatchEndUI : MonoBehaviour Fields AudioPlayer Declaration public AudioSource AudioPlayer Field Value Type Description AudioSource Game Declaration public MatchStateDisplayData Game Field Value Type Description MatchStateDisplayData PostGameWait Declaration public float PostGameWait Field Value Type Description System.Single TextUI Declaration public TextMeshProUGUI TextUI Field Value Type Description TextMeshProUGUI Time Declaration public MatchStateDisplayData Time Field Value Type Description MatchStateDisplayData"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchEvent.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchEvent.html",
    "title": "Class MatchEvent | Fantasy Crescendo",
    "keywords": "Class MatchEvent Inheritance System.Object MatchEvent MatchEndEvent MatchPauseStateChangedEvent MatchStartCountdownEvent MatchStartEvent PlayerEvent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public abstract class MatchEvent Fields MatchConfig Declaration public MatchConfig MatchConfig Field Value Type Description MatchConfig MatchState Declaration public MatchState MatchState Field Value Type Description MatchState Methods Copy(MatchEvent) Declaration public void Copy(MatchEvent evt) Parameters Type Name Description MatchEvent evt"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchState.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchState.html",
    "title": "Class MatchState | Fantasy Crescendo",
    "keywords": "Class MatchState A complete representation of a given game's state at a given tick. Inheritance INetworkSerializable MatchState Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class MatchState : INetworkSerializable Constructors MatchState() Declaration public MatchState() MatchState(MatchConfig) Constructs a new GameState based on a given GameConfig. Declaration public MatchState(MatchConfig config) Parameters Type Name Description MatchConfig config the configuration for the game. MatchState(IEnumerable<PlayerState>) Declaration public MatchState(IEnumerable<PlayerState> playerStates) Parameters Type Name Description System.Collections.Generic.IEnumerable < PlayerState > playerStates MatchState(Int32) Declaration public MatchState(int playerCount) Parameters Type Name Description System.Int32 playerCount Fields StateID Declaration public MatchProgressionState StateID Field Value Type Description MatchProgressionState Time Declaration public uint Time Field Value Type Description System.UInt32 Properties Item[Int32] Declaration public PlayerState this[int idx] { get; } Parameters Type Name Description System.Int32 idx Property Value Type Description PlayerState PlayerCount Declaration public int PlayerCount { get; } Property Value Type Description System.Int32 Methods Clone() Creates a deep clone of the state. Declaration public MatchState Clone() Returns Type Description MatchState a deep cloned copy of the state. Deserialize(Deserializer) Declaration public void Deserialize(Deserializer deserializer) Parameters Type Name Description Deserializer deserializer Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Finalize() Declaration protected void Finalize() GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Serialize(Serializer) Declaration public void Serialize(Serializer writer) Parameters Type Name Description Serializer writer ToString() Declaration public override string ToString() Returns Type Description System.String"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchStateDisplayData.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchStateDisplayData.html",
    "title": "Struct MatchStateDisplayData | Fantasy Crescendo",
    "keywords": "Struct MatchStateDisplayData Data object for playing sound effects and displaying game state. Controls an AudioSource and Text display object. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax [Serializable] public struct MatchStateDisplayData Fields Clip Declaration public AudioClip Clip Field Value Type Description AudioClip Color Declaration public TMP_ColorGradient Color Field Value Type Description TMP_ColorGradient Text Declaration public string Text Field Value Type Description System.String Methods Apply(AudioSource, TMP_Text) Plays Clip on the provided and sets the provided to show Text with the gradient described by Color . Declaration public void Apply(AudioSource audioSource, TMP_Text text) Parameters Type Name Description AudioSource audioSource the AudioSource to play the clip. TMP_Text text the text UI object to project onto. Remarks Will not do anything if the provided components are null."
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.PlayerCollisionManager.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.PlayerCollisionManager.html",
    "title": "Class PlayerCollisionManager | Fantasy Crescendo",
    "keywords": "Class PlayerCollisionManager Inheritance System.Object PlayerCollisionManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class PlayerCollisionManager Constructors PlayerCollisionManager(MatchConfig) Declaration public PlayerCollisionManager(MatchConfig config) Parameters Type Name Description MatchConfig config Fields PlayerCollisions Declaration public readonly List<HitboxCollision>[] PlayerCollisions Field Value Type Description System.Collections.Generic.List < HitboxCollision >[] Methods Add(HitboxCollision) Declaration public void Add(HitboxCollision collision) Parameters Type Name Description HitboxCollision collision Clear() Declaration public void Clear() GetPlayerCollisions(UInt32) Declaration public List<HitboxCollision> GetPlayerCollisions(uint id) Parameters Type Name Description System.UInt32 id Returns Type Description System.Collections.Generic.List < HitboxCollision >"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.Rules.MatchRuleFactory.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.Rules.MatchRuleFactory.html",
    "title": "Class MatchRuleFactory | Fantasy Crescendo",
    "keywords": "Class MatchRuleFactory Inheritance System.Object MatchRuleFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches.Rules Assembly : cs.temp.dll.dll Syntax public static class MatchRuleFactory Methods CreateRules(MatchConfig) Declaration public static IEnumerable<IMatchRule> CreateRules(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description System.Collections.Generic.IEnumerable < IMatchRule >"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.Rules.StockMatchRule.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.Rules.StockMatchRule.html",
    "title": "Class StockMatchRule | Fantasy Crescendo",
    "keywords": "Class StockMatchRule Match Rule for normal stock matches. Players have a limited number of lives. After expending all lives, they will no longer respawn. Last player alive will be declared the winner. Inheritance System.Object StockMatchRule TimeStockMatchRule Implements IMatchRule IInitializable < MatchConfig > ISimulation < MatchState , MatchInputContext > IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches.Rules Assembly : cs.temp.dll.dll Syntax public class StockMatchRule : IMatchRule, IInitializable<MatchConfig>, ISimulation<MatchState, MatchInputContext>, IDisposable Methods Dispose() Declaration public void Dispose() GetResolution(MatchState) Declaration public virtual MatchResolution? GetResolution(MatchState state) Parameters Type Name Description MatchState state Returns Type Description System.Nullable < MatchResolution > GetWinner(MatchState) Declaration public virtual int GetWinner(MatchState state) Parameters Type Name Description MatchState state Returns Type Description System.Int32 Initialize(MatchConfig) Declaration public Task Initialize(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description Task Simulate(ref MatchState, MatchInputContext) Declaration public virtual void Simulate(ref MatchState state, MatchInputContext input) Parameters Type Name Description MatchState state MatchInputContext input Implements IMatchRule IInitializable<T> ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.Rules.TimeMatchRule.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.Rules.TimeMatchRule.html",
    "title": "Class TimeMatchRule | Fantasy Crescendo",
    "keywords": "Class TimeMatchRule Inheritance System.Object TimeMatchRule Implements IMatchRule IInitializable < MatchConfig > ISimulation < MatchState , MatchInputContext > IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches.Rules Assembly : cs.temp.dll.dll Syntax public sealed class TimeMatchRule : IMatchRule, IInitializable<MatchConfig>, ISimulation<MatchState, MatchInputContext>, IDisposable Methods Dispose() Declaration public void Dispose() GetResolution(MatchState) Declaration public MatchResolution? GetResolution(MatchState state) Parameters Type Name Description MatchState state Returns Type Description System.Nullable < MatchResolution > GetWinner(MatchState) Declaration public int GetWinner(MatchState state) Parameters Type Name Description MatchState state Returns Type Description System.Int32 Initialize(MatchConfig) Declaration public Task Initialize(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description Task Simulate(ref MatchState, MatchInputContext) Declaration public void Simulate(ref MatchState state, MatchInputContext input) Parameters Type Name Description MatchState state MatchInputContext input Implements IMatchRule IInitializable<T> ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.Rules.TimeStockMatchRule.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.Rules.TimeStockMatchRule.html",
    "title": "Class TimeStockMatchRule | Fantasy Crescendo",
    "keywords": "Class TimeStockMatchRule Inheritance System.Object StockMatchRule TimeStockMatchRule Implements IMatchRule IInitializable < MatchConfig > ISimulation < MatchState , MatchInputContext > IDisposable Inherited Members StockMatchRule.Initialize(MatchConfig) StockMatchRule.GetWinner(MatchState) StockMatchRule.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches.Rules Assembly : cs.temp.dll.dll Syntax public class TimeStockMatchRule : StockMatchRule, IMatchRule, IInitializable<MatchConfig>, ISimulation<MatchState, MatchInputContext>, IDisposable Methods GetResolution(MatchState) Declaration public override MatchResolution? GetResolution(MatchState state) Parameters Type Name Description MatchState state Returns Type Description System.Nullable < MatchResolution > Overrides StockMatchRule.GetResolution(MatchState) Simulate(ref MatchState, MatchInputContext) Declaration public override void Simulate(ref MatchState state, MatchInputContext input) Parameters Type Name Description MatchState state MatchInputContext input Overrides StockMatchRule.Simulate(ref MatchState, MatchInputContext) Implements IMatchRule IInitializable<T> ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.Rules.TrainingMatchRule.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.Rules.TrainingMatchRule.html",
    "title": "Class TrainingMatchRule | Fantasy Crescendo",
    "keywords": "Class TrainingMatchRule Match Rule for normal stock matches. Players have a limited number of lives. After expending all lives, they will no longer respawn. Last player alive will be declared the winner. Inheritance System.Object TrainingMatchRule Implements IMatchRule IInitializable < MatchConfig > ISimulation < MatchState , MatchInputContext > IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches.Rules Assembly : cs.temp.dll.dll Syntax public sealed class TrainingMatchRule : IMatchRule, IInitializable<MatchConfig>, ISimulation<MatchState, MatchInputContext>, IDisposable Methods Dispose() Declaration public void Dispose() GetResolution(MatchState) Declaration public MatchResolution? GetResolution(MatchState state) Parameters Type Name Description MatchState state Returns Type Description System.Nullable < MatchResolution > GetWinner(MatchState) Declaration public int GetWinner(MatchState state) Parameters Type Name Description MatchState state Returns Type Description System.Int32 Initialize(MatchConfig) Declaration public Task Initialize(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description Task Simulate(ref MatchState, MatchInputContext) Declaration public void Simulate(ref MatchState state, MatchInputContext input) Parameters Type Name Description MatchState state MatchInputContext input Implements IMatchRule IInitializable<T> ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.Rules.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.Rules.html",
    "title": "Namespace HouraiTeahouse.FantasyCrescendo.Matches.Rules | Fantasy Crescendo",
    "keywords": "Namespace HouraiTeahouse.FantasyCrescendo.Matches.Rules Classes MatchRuleFactory StockMatchRule Match Rule for normal stock matches. Players have a limited number of lives. After expending all lives, they will no longer respawn. Last player alive will be declared the winner. TimeMatchRule TimeStockMatchRule TrainingMatchRule Match Rule for normal stock matches. Players have a limited number of lives. After expending all lives, they will no longer respawn. Last player alive will be declared the winner."
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.TrainingMatch.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.TrainingMatch.html",
    "title": "Class TrainingMatch | Fantasy Crescendo",
    "keywords": "Class TrainingMatch Inheritance System.Object Match DefaultMatch TrainingMatch Inherited Members DefaultMatch.InitializeMatch(MatchManager, MatchConfig) Match.RunMatch(MatchConfig, Boolean) Match.CreateSimulation(MatchConfig) Match.CreateMatchController(MatchConfig) Match.CreateInitialState(MatchConfig) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class TrainingMatch : DefaultMatch Methods CreateRules(MatchConfig) Declaration protected override IEnumerable<IMatchRule> CreateRules(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description System.Collections.Generic.IEnumerable < IMatchRule > Overrides Match.CreateRules(MatchConfig)"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.html",
    "title": "Namespace HouraiTeahouse.FantasyCrescendo.Matches | Fantasy Crescendo",
    "keywords": "Namespace HouraiTeahouse.FantasyCrescendo.Matches Classes DefaultMatch Match MatchController An default IMatchController implementation that runs a normal local game. MatchCountdownUI MatchEndEvent Called when match ends, whether it be time out or the gamemode's victory conditions are met. MatchEndUI MatchEvent MatchHitboxSimulation MatchInputContext MatchManager MatchPauseStateChangedEvent MatchPlayerSimulation MatchPlayerView MatchResultUtil MatchRuleSimulation MatchSimulation MatchStartCountdownEvent Called on the match's countdown sequence. Before the game begins. MatchStartEvent MatchState A complete representation of a given game's state at a given tick. PlayerCollisionManager TrainingMatch Structs MatchConfig A data object for configuring a game between multiple players. MatchInput MatchResult MatchStateDisplayData Data object for playing sound effects and displaying game state. Controls an AudioSource and Text display object. Interfaces IMatchController A top-level controller and manager of a multiplayer game's state. IMatchRule IMatchSimulation Enums MatchInputMergeStrategy MatchProgressionState Represents the match's state in game MatchResolution"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matchmaking.IMatchmaker.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matchmaking.IMatchmaker.html",
    "title": "Interface IMatchmaker | Fantasy Crescendo",
    "keywords": "Interface IMatchmaker Namespace : HouraiTeahouse.FantasyCrescendo.Matchmaking Assembly : cs.temp.dll.dll Syntax public interface IMatchmaker Properties NetworkInterfaceType Declaration Type NetworkInterfaceType { get; } Property Value Type Description Type Methods CreateLobby() Declaration Task<LobbyInfo> CreateLobby() Returns Type Description Task < LobbyInfo > GetLobbies() Declaration Task<IEnumerable<LobbyInfo>> GetLobbies() Returns Type Description Task < System.Collections.Generic.IEnumerable < LobbyInfo >> JoinLobby(LobbyInfo) Declaration Task JoinLobby(LobbyInfo lobby) Parameters Type Name Description LobbyInfo lobby Returns Type Description Task"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matchmaking.LobbyDisplay.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matchmaking.LobbyDisplay.html",
    "title": "Class LobbyDisplay | Fantasy Crescendo",
    "keywords": "Class LobbyDisplay Inheritance MonoBehaviour LobbyDisplay Implements IStateView < LobbyInfo > IStateView < MatchmakerController > IDisposable Namespace : HouraiTeahouse.FantasyCrescendo.Matchmaking Assembly : cs.temp.dll.dll Syntax public class LobbyDisplay : MonoBehaviour, IStateView<LobbyInfo>, IStateView<MatchmakerController>, IDisposable Fields lobbyInfo Declaration public LobbyInfo lobbyInfo Field Value Type Description LobbyInfo Name Declaration public Text Name Field Value Type Description Text Owner Declaration public Text Owner Field Value Type Description Text Players Declaration public Text Players Field Value Type Description Text Methods Dispose() Declaration public void Dispose() JoinLobby() Declaration public void JoinLobby() UpdateView(LobbyInfo) Declaration public void UpdateView(in LobbyInfo lobby) Parameters Type Name Description LobbyInfo lobby UpdateView(MatchmakerController) Declaration public void UpdateView(in MatchmakerController controller) Parameters Type Name Description MatchmakerController controller Implements IStateView<S> IStateView<S> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matchmaking.LobbyInfo.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matchmaking.LobbyInfo.html",
    "title": "Class LobbyInfo | Fantasy Crescendo",
    "keywords": "Class LobbyInfo Inheritance System.Object LobbyInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matchmaking Assembly : cs.temp.dll.dll Syntax public class LobbyInfo Fields CurrentPlayers Declaration public int CurrentPlayers Field Value Type Description System.Int32 Id Declaration public ulong Id Field Value Type Description System.UInt64 MatchMaker Declaration public readonly IMatchmaker MatchMaker Field Value Type Description IMatchmaker MaxPlayers Declaration public int MaxPlayers Field Value Type Description System.Int32 Name Declaration public string Name Field Value Type Description System.String OnwerName Declaration public string OnwerName Field Value Type Description System.String StageID Declaration public uint StageID Field Value Type Description System.UInt32 Methods Join() Declaration public void Join()"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matchmaking.LobbyListUI.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matchmaking.LobbyListUI.html",
    "title": "Class LobbyListUI | Fantasy Crescendo",
    "keywords": "Class LobbyListUI Inheritance MonoBehaviour LobbyListUI Implements IStateView < System.Collections.Generic.IEnumerable < LobbyInfo >> IDisposable Namespace : HouraiTeahouse.FantasyCrescendo.Matchmaking Assembly : cs.temp.dll.dll Syntax public class LobbyListUI : MonoBehaviour, IStateView<IEnumerable<LobbyInfo>>, IDisposable Fields Container Declaration public RectTransform Container Field Value Type Description RectTransform DisplayPrefab Declaration public LobbyDisplay DisplayPrefab Field Value Type Description LobbyDisplay Methods Dispose() Declaration public void Dispose() UpdateView(IEnumerable<LobbyInfo>) Declaration public void UpdateView(in IEnumerable<LobbyInfo> state) Parameters Type Name Description System.Collections.Generic.IEnumerable < LobbyInfo > state Implements IStateView<S> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matchmaking.MatchmakerController.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matchmaking.MatchmakerController.html",
    "title": "Class MatchmakerController | Fantasy Crescendo",
    "keywords": "Class MatchmakerController Inheritance MonoBehaviour MatchmakerController Namespace : HouraiTeahouse.FantasyCrescendo.Matchmaking Assembly : cs.temp.dll.dll Syntax public class MatchmakerController : MonoBehaviour Fields ConnectingScreen Declaration public GameObject ConnectingScreen Field Value Type Description GameObject ErrorScreen Declaration public GameObject ErrorScreen Field Value Type Description GameObject ErrorText Declaration public Text ErrorText Field Value Type Description Text NetworkMenuScreen Declaration public GameObject NetworkMenuScreen Field Value Type Description GameObject RefreshTimer Declaration public float RefreshTimer Field Value Type Description System.Single SuccessScreen Declaration public GameObject SuccessScreen Field Value Type Description GameObject Methods CreateLobby() Declaration public void CreateLobby() JoinLobby(LobbyInfo) Declaration public Task JoinLobby(LobbyInfo lobby) Parameters Type Name Description LobbyInfo lobby Returns Type Description Task Refresh() Declaration public void Refresh()"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkingException.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.NetworkingException.html",
    "title": "Class NetworkingException | Fantasy Crescendo",
    "keywords": "Class NetworkingException Inheritance Exception NetworkingException Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public class NetworkingException : Exception Constructors NetworkingException(String) Declaration public NetworkingException(string message) Parameters Type Name Description System.String message"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.PeerReadyMessage.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.PeerReadyMessage.html",
    "title": "Struct PeerReadyMessage | Fantasy Crescendo",
    "keywords": "Struct PeerReadyMessage Implements INetworkSerializable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public struct PeerReadyMessage : INetworkSerializable Fields IsReady Declaration public bool IsReady Field Value Type Description System.Boolean Methods Deserialize(Deserializer) Declaration public void Deserialize(Deserializer deserializer) Parameters Type Name Description Deserializer deserializer Serialize(Serializer) Declaration public void Serialize(Serializer serializer) Parameters Type Name Description Serializer serializer Implements INetworkSerializable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.RollbackStrategy.Client.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.RollbackStrategy.Client.html",
    "title": "Class RollbackStrategy.Client | Fantasy Crescendo",
    "keywords": "Class RollbackStrategy.Client Inheritance System.Object MatchController ClientGameController RollbackStrategy.Client Implements IMatchController IDisposable Inherited Members ClientGameController.NetworkClient MatchController.CurrentState MatchController.Simulation MatchController.InputSource System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public sealed class Client : ClientGameController, IMatchController, IDisposable Properties Timestep Declaration public override uint Timestep { get; set; } Property Value Type Description System.UInt32 Overrides MatchController.Timestep Methods Dispose() Declaration public override void Dispose() Overrides ClientGameController.Dispose() Update() Declaration public override void Update() Overrides ClientGameController.Update() Implements IMatchController IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.RollbackStrategy.Server.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.RollbackStrategy.Server.html",
    "title": "Class RollbackStrategy.Server | Fantasy Crescendo",
    "keywords": "Class RollbackStrategy.Server Inheritance System.Object MatchController ServerGameController RollbackStrategy.Server Implements IMatchController IDisposable Inherited Members ServerGameController.NetworkServer MatchController.CurrentState MatchController.Simulation MatchController.InputSource System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public sealed class Server : ServerGameController, IMatchController, IDisposable Properties Timestep Declaration public override uint Timestep { get; set; } Property Value Type Description System.UInt32 Overrides MatchController.Timestep Methods Dispose() Declaration public override void Dispose() Overrides ServerGameController.Dispose() Update() Declaration public override void Update() Overrides ServerGameController.Update() Implements IMatchController IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.RollbackStrategy.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.RollbackStrategy.html",
    "title": "Class RollbackStrategy | Fantasy Crescendo",
    "keywords": "Class RollbackStrategy Inheritance System.Object RollbackStrategy Implements INetworkStrategy Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public class RollbackStrategy : INetworkStrategy Methods CreateClient(INetworkClient, MatchConfig) Declaration public ClientGameController CreateClient(INetworkClient client, MatchConfig config) Parameters Type Name Description INetworkClient client MatchConfig config Returns Type Description ClientGameController CreateServer(INetworkServer, MatchConfig) Declaration public ServerGameController CreateServer(INetworkServer server, MatchConfig config) Parameters Type Name Description INetworkServer server MatchConfig config Returns Type Description ServerGameController Implements INetworkStrategy"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.Serializer.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.Serializer.html",
    "title": "Class Serializer | Fantasy Crescendo",
    "keywords": "Class Serializer Inheritance System.Object Serializer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public class Serializer Constructors Serializer() Declaration public Serializer() Serializer(Byte[]) Declaration public Serializer(byte[] buffer) Parameters Type Name Description System.Byte [] buffer Properties Position Declaration public short Position { get; } Property Value Type Description System.Int16 Methods AsArray() Declaration public byte[] AsArray() Returns Type Description System.Byte [] FinishMessage() Declaration public void FinishMessage() SeekZero() Declaration public void SeekZero() StartMessage(Int16) Declaration public void StartMessage(short msgType) Parameters Type Name Description System.Int16 msgType ToArray() Declaration public byte[] ToArray() Returns Type Description System.Byte [] Write(Color) Declaration public void Write(Color value) Parameters Type Name Description Color value Write(Color32) Declaration public void Write(Color32 value) Parameters Type Name Description Color32 value Write(INetworkSerializable) Declaration public void Write(INetworkSerializable msg) Parameters Type Name Description INetworkSerializable msg Write(Matrix4x4) Declaration public void Write(Matrix4x4 value) Parameters Type Name Description Matrix4x4 value Write(Plane) Declaration public void Write(Plane value) Parameters Type Name Description Plane value Write(Quaternion) Declaration public void Write(Quaternion value) Parameters Type Name Description Quaternion value Write(Ray) Declaration public void Write(Ray value) Parameters Type Name Description Ray value Write(Rect) Declaration public void Write(Rect value) Parameters Type Name Description Rect value Write(Boolean) Declaration public void Write(bool value) Parameters Type Name Description System.Boolean value Write(Byte) Declaration public void Write(byte value) Parameters Type Name Description System.Byte value Write(Byte[], Int32) Declaration public void Write(byte[] buffer, int count) Parameters Type Name Description System.Byte [] buffer System.Int32 count Write(Byte[], Int32, Int32) Declaration public void Write(byte[] buffer, int offset, int count) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count Write(Char) Declaration public void Write(char value) Parameters Type Name Description System.Char value Write(Double) Declaration public void Write(double value) Parameters Type Name Description System.Double value Write(Int16) Declaration public void Write(short value) Parameters Type Name Description System.Int16 value Write(Int32) Declaration public void Write(int value) Parameters Type Name Description System.Int32 value Write(Int64) Declaration public void Write(long value) Parameters Type Name Description System.Int64 value Write(SByte) Declaration public void Write(sbyte value) Parameters Type Name Description System.SByte value Write(Single) Declaration public void Write(float value) Parameters Type Name Description System.Single value Write(String) Declaration public void Write(string value) Parameters Type Name Description System.String value Write(UInt16) Declaration public void Write(ushort value) Parameters Type Name Description System.UInt16 value Write(UInt32) Declaration public void Write(UInt32 value) Parameters Type Name Description UInt32 value Write(UInt64) Declaration public void Write(UInt64 value) Parameters Type Name Description UInt64 value Write(Vector2) Declaration public void Write(Vector2 value) Parameters Type Name Description Vector2 value Write(Vector3) Declaration public void Write(Vector3 value) Parameters Type Name Description Vector3 value Write(Vector4) Declaration public void Write(Vector4 value) Parameters Type Name Description Vector4 value WriteBytesAndSize(Byte[], Int32) Declaration public void WriteBytesAndSize(byte[] buffer, int count) Parameters Type Name Description System.Byte [] buffer System.Int32 count WriteBytesFull(Byte[]) Declaration public void WriteBytesFull(byte[] buffer) Parameters Type Name Description System.Byte [] buffer"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.ServerGameController.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.ServerGameController.html",
    "title": "Class ServerGameController | Fantasy Crescendo",
    "keywords": "Class ServerGameController Inheritance System.Object MatchController ServerGameController LockstepStrategy.Server RollbackStrategy.Server Implements IMatchController IDisposable Inherited Members MatchController.Timestep MatchController.CurrentState MatchController.Simulation MatchController.InputSource System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public abstract class ServerGameController : MatchController, IMatchController, IDisposable Constructors ServerGameController(INetworkServer, MatchConfig) Declaration protected ServerGameController(INetworkServer server, MatchConfig config) Parameters Type Name Description INetworkServer server MatchConfig config Properties NetworkServer Declaration public INetworkServer NetworkServer { get; } Property Value Type Description INetworkServer Methods Dispose() Declaration public virtual void Dispose() Update() Declaration public override void Update() Overrides MatchController.Update() Implements IMatchController IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.ServerStateMessage.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.ServerStateMessage.html",
    "title": "Struct ServerStateMessage | Fantasy Crescendo",
    "keywords": "Struct ServerStateMessage Implements INetworkSerializable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public struct ServerStateMessage : INetworkSerializable Fields LatestInput Declaration public MatchInput? LatestInput Field Value Type Description System.Nullable < MatchInput > State Declaration public MatchState State Field Value Type Description MatchState Timestamp Declaration public uint Timestamp Field Value Type Description System.UInt32 Methods Deserialize(Deserializer) Declaration public void Deserialize(Deserializer deserializer) Parameters Type Name Description Deserializer deserializer Serialize(Serializer) Declaration public void Serialize(Serializer serializer) Parameters Type Name Description Serializer serializer Implements INetworkSerializable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.ServerUpdateConfigMessage.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.ServerUpdateConfigMessage.html",
    "title": "Struct ServerUpdateConfigMessage | Fantasy Crescendo",
    "keywords": "Struct ServerUpdateConfigMessage Implements INetworkSerializable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public struct ServerUpdateConfigMessage : INetworkSerializable Fields MatchConfig Declaration public MatchConfig MatchConfig Field Value Type Description MatchConfig Methods Deserialize(Deserializer) Declaration public void Deserialize(Deserializer deserializer) Parameters Type Name Description Deserializer deserializer Serialize(Serializer) Declaration public void Serialize(Serializer serializer) Parameters Type Name Description Serializer serializer Implements INetworkSerializable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.Steam.SteamNetworkInterface.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.Steam.SteamNetworkInterface.html",
    "title": "Class SteamNetworkInterface | Fantasy Crescendo",
    "keywords": "Class SteamNetworkInterface Inheritance System.Object NetworkInterface SteamNetworkInterface Implements INetworkInterface IDisposable Inherited Members NetworkInterface.MessageHandlers NetworkInterface.Connections NetworkInterface.Config NetworkInterface.OnPeerConnected NetworkInterface.OnPeerDisconnected NetworkInterface.ReadBuffer NetworkInterface.IsDisposed NetworkInterface.Send(Int32, Byte[], Int32, NetworkReliablity) NetworkInterface.OnRecieveData(Int32, Byte[], Int32) NetworkInterface.OnDisconnect(Int32, Exception) NetworkInterface.OnNewConnection(Int32) NetworkInterface.RemoveConnection(NetworkConnection) NetworkInterface.GetConnectionStats(Int32) NetworkInterface.GetConnection(Int32) NetworkInterface.AddConnection(Int32) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking.Steam Assembly : cs.temp.dll.dll Syntax public sealed class SteamNetworkInterface : NetworkInterface, INetworkInterface, IDisposable Constructors SteamNetworkInterface() Declaration public SteamNetworkInterface() Methods Connect(NetworkConnectionConfig) Declaration public override Task<NetworkConnection> Connect(NetworkConnectionConfig config) Parameters Type Name Description NetworkConnectionConfig config Returns Type Description Task < NetworkConnection > Overrides NetworkInterface.Connect(NetworkConnectionConfig) Disconnect(Int32) Declaration public override void Disconnect(int connectionId) Parameters Type Name Description System.Int32 connectionId Overrides NetworkInterface.Disconnect(Int32) Dispose() Declaration public override void Dispose() Overrides NetworkInterface.Dispose() Initialize(NetworkInterfaceConfiguration) Declaration public override Task Initialize(NetworkInterfaceConfiguration config) Parameters Type Name Description NetworkInterfaceConfiguration config Returns Type Description Task Overrides NetworkInterface.Initialize(NetworkInterfaceConfiguration) SendImpl(Int32, Byte[], Int32, NetworkReliablity) Declaration protected override void SendImpl(int connectionId, byte[] buffer, int count, NetworkReliablity reliability) Parameters Type Name Description System.Int32 connectionId System.Byte [] buffer System.Int32 count NetworkReliablity reliability Overrides NetworkInterface.SendImpl(Int32, Byte[], Int32, NetworkReliablity) Update() Declaration public override void Update() Overrides NetworkInterface.Update() Implements INetworkInterface IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.Steam.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.Steam.html",
    "title": "Namespace HouraiTeahouse.FantasyCrescendo.Networking.Steam | Fantasy Crescendo",
    "keywords": "Namespace HouraiTeahouse.FantasyCrescendo.Networking.Steam Classes SteamNetworkInterface"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.SteamUtility.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.SteamUtility.html",
    "title": "Class SteamUtility | Fantasy Crescendo",
    "keywords": "Class SteamUtility Inheritance System.Object SteamUtility Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public static class SteamUtility Methods CreateError(EResult) Creates an exception out of a UNET NetworkError. Declaration public static Exception CreateError(EResult result) Parameters Type Name Description EResult result the error code of the error. Returns Type Description Exception an exception representing the error, null if no error. HandleError(EResult) Creates error logs for a given error code. Does nothing if there is no error. Declaration public static void HandleError(EResult result) Parameters Type Name Description EResult result the error code of the error. IsError(EResult) Declaration public static bool IsError(EResult result) Parameters Type Name Description EResult result Returns Type Description System.Boolean ToTask<T>(SteamAPICall_t) Declaration public static Task<T> ToTask<T>(this SteamAPICall_t apiCall) Parameters Type Name Description SteamAPICall_t apiCall Returns Type Description Task <T> Type Parameters Name Description T WaitFor<T>() Declaration public static Task<T> WaitFor<T>() Returns Type Description Task <T> Type Parameters Name Description T"
  },
  "api/HouraiTeahouse.CreditsAsset.Category.html": {
    "href": "api/HouraiTeahouse.CreditsAsset.Category.html",
    "title": "Class CreditsAsset.Category | Fantasy Crescendo",
    "keywords": "Class CreditsAsset.Category Inheritance System.Object CreditsAsset.Category Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse Assembly : cs.temp.dll.dll Syntax public class Category Fields Contributors Declaration public string[] Contributors Field Value Type Description System.String [] Name Declaration public string Name Field Value Type Description System.String Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/HouraiTeahouse.CreditsAsset.html": {
    "href": "api/HouraiTeahouse.CreditsAsset.html",
    "title": "Class CreditsAsset | Fantasy Crescendo",
    "keywords": "Class CreditsAsset Custom asset for allowing easy editing of the game's credits.! Used with to automatically generate the UI on the credits screen. Inheritance ScriptableObject CreditsAsset Namespace : HouraiTeahouse Assembly : cs.temp.dll.dll Syntax public class CreditsAsset : ScriptableObject Fields Categories Declaration public CreditsAsset.Category[] Categories Field Value Type Description CreditsAsset.Category []"
  },
  "api/HouraiTeahouse.FantasyCrescendo.AbstractHitDetector.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.AbstractHitDetector.html",
    "title": "Class AbstractHitDetector | Fantasy Crescendo",
    "keywords": "Class AbstractHitDetector Inheritance MonoBehaviour AbstractHitDetector Hitbox Hurtbox Implements IComparable < AbstractHitDetector > Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public abstract class AbstractHitDetector : MonoBehaviour, IComparable<AbstractHitDetector> Fields PlayerID Declaration public uint PlayerID Field Value Type Description System.UInt32 Priority Declaration public uint Priority Field Value Type Description System.UInt32 Methods CompareTo(AbstractHitDetector) Declaration public int CompareTo(AbstractHitDetector hitDetector) Parameters Type Name Description AbstractHitDetector hitDetector Returns Type Description System.Int32 Implements IComparable<>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.AggregateBuilder-2.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.AggregateBuilder-2.html",
    "title": "Class AggregateBuilder<T, TBuilder> | Fantasy Crescendo",
    "keywords": "Class AggregateBuilder<T, TBuilder> Abstract class for building aggregate interfaces. Inheritance System.Object AggregateBuilder<T, TBuilder> SimulationBuilder<TState, TContext> ViewBuilder<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public abstract class AggregateBuilder<T, TBuilder> where TBuilder : class Type Parameters Name Description T the interface to build TBuilder self referential generic parameter Constructors AggregateBuilder() Declaration protected AggregateBuilder() Methods AddSubitem(T) Declaration public TBuilder AddSubitem(T view) Parameters Type Name Description T view Returns Type Description TBuilder AddSubitems(IEnumerable<T>) Declaration public TBuilder AddSubitems(IEnumerable<T> view) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> view Returns Type Description TBuilder Build() Declaration public T Build() Returns Type Description T BuildImpl(IEnumerable<T>) Declaration protected abstract T BuildImpl(IEnumerable<T> subitems) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> subitems Returns Type Description T"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchHitboxSimulation.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchHitboxSimulation.html",
    "title": "Class MatchHitboxSimulation | Fantasy Crescendo",
    "keywords": "Class MatchHitboxSimulation Inheritance System.Object MatchHitboxSimulation Implements IMatchSimulation IInitializable < MatchConfig > ISimulation < MatchState , MatchInputContext > IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class MatchHitboxSimulation : IMatchSimulation, IInitializable<MatchConfig>, ISimulation<MatchState, MatchInputContext>, IDisposable Constructors MatchHitboxSimulation(MatchConfig) Declaration public MatchHitboxSimulation(MatchConfig config) Parameters Type Name Description MatchConfig config Fields ActiveHitboxes Declaration public readonly HashSet<Hitbox> ActiveHitboxes Field Value Type Description HashSet < Hitbox > ActiveHurtboxes Declaration public readonly HashSet<Hurtbox> ActiveHurtboxes Field Value Type Description HashSet < Hurtbox > Properties Instance Declaration public static MatchHitboxSimulation Instance { get; set; } Property Value Type Description MatchHitboxSimulation Methods ApplyCollisions(List<HitboxCollision>, ref PlayerState, MatchState) Declaration public void ApplyCollisions(List<HitboxCollision> collisions, ref PlayerState state, MatchState match) Parameters Type Name Description System.Collections.Generic.List < HitboxCollision > collisions PlayerState state MatchState match CreateCollisions() Declaration public void CreateCollisions() Dispose() Declaration public void Dispose() Initialize(MatchConfig) Declaration public Task Initialize(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description Task ResetState(MatchState) Declaration public MatchState ResetState(MatchState state) Parameters Type Name Description MatchState state Returns Type Description MatchState Simulate(ref MatchState, MatchInputContext) Declaration public void Simulate(ref MatchState state, MatchInputContext input) Parameters Type Name Description MatchState state MatchInputContext input Implements IMatchSimulation IInitializable<T> ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchInput.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchInput.html",
    "title": "Struct MatchInput | Fantasy Crescendo",
    "keywords": "Struct MatchInput Implements IMergable < MatchInput > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public struct MatchInput : IMergable<MatchInput> Constructors MatchInput(MatchConfig) Declaration public MatchInput(MatchConfig config) Parameters Type Name Description MatchConfig config MatchInput(Int32) Declaration public MatchInput(int playerCount) Parameters Type Name Description System.Int32 playerCount Fields AllValid Declaration public const Mask AllValid = null Field Value Type Description Mask kMaxSupportedPlayers Declaration public const int kMaxSupportedPlayers = 4 Field Value Type Description System.Int32 Properties IsValid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean Item[Int32] Gets the input for the player at a given frame. Declaration public PlayerInput this[int index] { get; } Parameters Type Name Description System.Int32 index the index of the player's inputs. Property Value Type Description PlayerInput Remarks This indexer does not do any bounds checking. Be sure to do a check against 0 and PlayerCount before using it. PlayerCount Declaration public int PlayerCount { get; } Property Value Type Description System.Int32 Methods CreateValidMask() Declaration public Mask CreateValidMask() Returns Type Description Mask Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() MergeWith(MatchInput) Declaration public MatchInput MergeWith(MatchInput other) Parameters Type Name Description MatchInput other Returns Type Description MatchInput MergeWith(MatchInput, MatchInputMergeStrategy) Declaration public MatchInput MergeWith(MatchInput other, MatchInputMergeStrategy strategy) Parameters Type Name Description MatchInput other MatchInputMergeStrategy strategy Returns Type Description MatchInput Predict() Declaration public void Predict() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Implements IMergable<T>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchInputContext.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchInputContext.html",
    "title": "Class MatchInputContext | Fantasy Crescendo",
    "keywords": "Class MatchInputContext Inheritance System.Object MatchInputContext Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class MatchInputContext Constructors MatchInputContext(MatchConfig) Declaration public MatchInputContext(MatchConfig config) Parameters Type Name Description MatchConfig config MatchInputContext(MatchInput) Declaration public MatchInputContext(MatchInput input) Parameters Type Name Description MatchInput input Fields PlayerInputs Declaration public PlayerInputContext[] PlayerInputs Field Value Type Description PlayerInputContext [] Properties IsValid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean Methods Predict() Declaration public void Predict() Reset(MatchInput) Declaration public void Reset(MatchInput current) Parameters Type Name Description MatchInput current Reset(MatchInput, MatchInput) Declaration public void Reset(MatchInput previous, MatchInput current) Parameters Type Name Description MatchInput previous MatchInput current Update(MatchInput) Declaration public void Update(MatchInput input) Parameters Type Name Description MatchInput input"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchInputMergeStrategy.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchInputMergeStrategy.html",
    "title": "Enum MatchInputMergeStrategy | Fantasy Crescendo",
    "keywords": "Enum MatchInputMergeStrategy Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public enum MatchInputMergeStrategy Fields Name Description FullMerge KeepValidity"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchManager.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchManager.html",
    "title": "Class MatchManager | Fantasy Crescendo",
    "keywords": "Class MatchManager Inheritance MonoBehaviour MatchManager Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class MatchManager : MonoBehaviour Fields Config Declaration public MatchConfig Config Field Value Type Description MatchConfig MatchController Declaration public IMatchController MatchController Field Value Type Description IMatchController View Declaration public IStateView<MatchState> View Field Value Type Description IStateView < MatchState > Properties CurrentProgressionID Declaration public MatchProgressionState CurrentProgressionID { get; set; } Property Value Type Description MatchProgressionState Instance Declaration public static MatchManager Instance { get; } Property Value Type Description MatchManager IsLocal Declaration public bool IsLocal { get; } Property Value Type Description System.Boolean Methods EndMatch(MatchResult) Declaration public void EndMatch(MatchResult result) Parameters Type Name Description MatchResult result RunMatch() Declaration public Task<MatchResult> RunMatch() Returns Type Description Task < MatchResult > SetPaused(Boolean, Int32) Declaration public void SetPaused(bool paused, int pausedPlayer) Parameters Type Name Description System.Boolean paused System.Int32 pausedPlayer"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchPauseStateChangedEvent.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchPauseStateChangedEvent.html",
    "title": "Class MatchPauseStateChangedEvent | Fantasy Crescendo",
    "keywords": "Class MatchPauseStateChangedEvent Inheritance System.Object MatchEvent MatchPauseStateChangedEvent Inherited Members MatchEvent.MatchConfig MatchEvent.MatchState MatchEvent.Copy(MatchEvent) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class MatchPauseStateChangedEvent : MatchEvent Fields IsPaused Declaration public bool IsPaused Field Value Type Description System.Boolean PausedPlayerID Declaration public int PausedPlayerID Field Value Type Description System.Int32"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchPlayerSimulation.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchPlayerSimulation.html",
    "title": "Class MatchPlayerSimulation | Fantasy Crescendo",
    "keywords": "Class MatchPlayerSimulation Inheritance System.Object MatchPlayerSimulation Implements IMatchSimulation IInitializable < MatchConfig > ISimulation < MatchState , MatchInputContext > IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class MatchPlayerSimulation : IMatchSimulation, IInitializable<MatchConfig>, ISimulation<MatchState, MatchInputContext>, IDisposable Fields PlayerSimulations Declaration public PlayerSimulation[] PlayerSimulations Field Value Type Description PlayerSimulation [] Methods Dispose() Declaration public void Dispose() Initialize(MatchConfig) Declaration public Task Initialize(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description Task ResetState(MatchState) Declaration public MatchState ResetState(MatchState state) Parameters Type Name Description MatchState state Returns Type Description MatchState Simulate(ref MatchState, MatchInputContext) Declaration public void Simulate(ref MatchState state, MatchInputContext input) Parameters Type Name Description MatchState state MatchInputContext input Implements IMatchSimulation IInitializable<T> ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchPlayerView.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchPlayerView.html",
    "title": "Class MatchPlayerView | Fantasy Crescendo",
    "keywords": "Class MatchPlayerView Inheritance System.Object MatchPlayerView Implements IInitializable < MatchConfig > IStateView < MatchState > IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class MatchPlayerView : IInitializable<MatchConfig>, IStateView<MatchState>, IDisposable Methods Dispose() Declaration public void Dispose() Initialize(MatchConfig) Declaration public Task Initialize(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description Task UpdateView(MatchState) Declaration public void UpdateView(in MatchState state) Parameters Type Name Description MatchState state Implements IInitializable<T> IStateView<S> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchProgressionState.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchProgressionState.html",
    "title": "Enum MatchProgressionState | Fantasy Crescendo",
    "keywords": "Enum MatchProgressionState Represents the match's state in game Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public enum MatchProgressionState Fields Name Description End After the game results are in. Represents the GAME/TIME sequence. InGame Represents the game in progress. Intro Before the game begins. Represents the countdown sequence. Pause Represents the game while paused. Can only be paused during InGame."
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchResolution.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchResolution.html",
    "title": "Enum MatchResolution | Fantasy Crescendo",
    "keywords": "Enum MatchResolution Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public enum MatchResolution Fields Name Description HasWinner NoContest Tie"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchResult.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchResult.html",
    "title": "Struct MatchResult | Fantasy Crescendo",
    "keywords": "Struct MatchResult Implements INetworkSerializable Inherited Members System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public struct MatchResult : INetworkSerializable Fields PlayerStats Declaration public PlayerMatchStats[] PlayerStats Field Value Type Description PlayerMatchStats [] Resolution Declaration public MatchResolution Resolution Field Value Type Description MatchResolution WinningPlayerID Declaration public int WinningPlayerID Field Value Type Description System.Int32 Methods Deserialize(Deserializer) Declaration public void Deserialize(Deserializer deserializer) Parameters Type Name Description Deserializer deserializer Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Serialize(Serializer) Declaration public void Serialize(Serializer serializer) Parameters Type Name Description Serializer serializer Implements INetworkSerializable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchResultUtil.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchResultUtil.html",
    "title": "Class MatchResultUtil | Fantasy Crescendo",
    "keywords": "Class MatchResultUtil Inheritance System.Object MatchResultUtil Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public static class MatchResultUtil Methods CreateMatchStatsFromConfig(MatchConfig) Declaration public static PlayerMatchStats[] CreateMatchStatsFromConfig(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description PlayerMatchStats []"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchRuleSimulation.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchRuleSimulation.html",
    "title": "Class MatchRuleSimulation | Fantasy Crescendo",
    "keywords": "Class MatchRuleSimulation Inheritance System.Object MatchRuleSimulation Implements IMatchSimulation IInitializable < MatchConfig > ISimulation < MatchState , MatchInputContext > IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class MatchRuleSimulation : IMatchSimulation, IInitializable<MatchConfig>, ISimulation<MatchState, MatchInputContext>, IDisposable Constructors MatchRuleSimulation(IEnumerable<IMatchRule>) Declaration public MatchRuleSimulation(IEnumerable<IMatchRule> rules) Parameters Type Name Description System.Collections.Generic.IEnumerable < IMatchRule > rules Methods Dispose() Declaration public void Dispose() Initialize(MatchConfig) Declaration public Task Initialize(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description Task ResetState(MatchState) Declaration public MatchState ResetState(MatchState state) Parameters Type Name Description MatchState state Returns Type Description MatchState Simulate(ref MatchState, MatchInputContext) Declaration public void Simulate(ref MatchState state, MatchInputContext input) Parameters Type Name Description MatchState state MatchInputContext input Implements IMatchSimulation IInitializable<T> ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchSimulation.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchSimulation.html",
    "title": "Class MatchSimulation | Fantasy Crescendo",
    "keywords": "Class MatchSimulation Inheritance System.Object MatchSimulation Implements IMatchSimulation IInitializable < MatchConfig > ISimulation < MatchState , MatchInputContext > IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class MatchSimulation : IMatchSimulation, IInitializable<MatchConfig>, ISimulation<MatchState, MatchInputContext>, IDisposable Constructors MatchSimulation(IEnumerable<IMatchSimulation>) Declaration public MatchSimulation(IEnumerable<IMatchSimulation> simulationComponents) Parameters Type Name Description System.Collections.Generic.IEnumerable < IMatchSimulation > simulationComponents Methods Dispose() Declaration public void Dispose() Initialize(MatchConfig) Declaration public Task Initialize(MatchConfig config) Parameters Type Name Description MatchConfig config Returns Type Description Task ResetState(MatchState) Declaration public MatchState ResetState(MatchState state) Parameters Type Name Description MatchState state Returns Type Description MatchState Simulate(ref MatchState, MatchInputContext) Declaration public void Simulate(ref MatchState state, MatchInputContext input) Parameters Type Name Description MatchState state MatchInputContext input Implements IMatchSimulation IInitializable<T> ISimulation<S, I> IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchStartCountdownEvent.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchStartCountdownEvent.html",
    "title": "Class MatchStartCountdownEvent | Fantasy Crescendo",
    "keywords": "Class MatchStartCountdownEvent Called on the match's countdown sequence. Before the game begins. Inheritance System.Object MatchEvent MatchStartCountdownEvent Inherited Members MatchEvent.MatchConfig MatchEvent.MatchState MatchEvent.Copy(MatchEvent) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class MatchStartCountdownEvent : MatchEvent"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchStartEvent.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matches.MatchStartEvent.html",
    "title": "Class MatchStartEvent | Fantasy Crescendo",
    "keywords": "Class MatchStartEvent Inheritance System.Object MatchEvent MatchStartEvent Inherited Members MatchEvent.MatchConfig MatchEvent.MatchState MatchEvent.Copy(MatchEvent) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matches Assembly : cs.temp.dll.dll Syntax public class MatchStartEvent : MatchEvent"
  },
  "api/HouraiTeahouse.FantasyCrescendo.CharacterPallete.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.CharacterPallete.html",
    "title": "Class CharacterPallete | Fantasy Crescendo",
    "keywords": "Class CharacterPallete Inheritance System.Object CharacterPallete Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class CharacterPallete Properties Portrait Declaration public IAsset<Sprite> Portrait { get; } Property Value Type Description IAsset < Sprite > Prefab Declaration public IAsset<GameObject> Prefab { get; } Property Value Type Description IAsset < GameObject > Methods Unload() Declaration public void Unload()"
  },
  "api/HouraiTeahouse.FantasyCrescendo.CharacterStateData.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.CharacterStateData.html",
    "title": "Class CharacterStateData | Fantasy Crescendo",
    "keywords": "Class CharacterStateData Inheritance System.Object CharacterStateData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class CharacterStateData Fields DirectionMode Declaration public DirectionMode DirectionMode Field Value Type Description DirectionMode EntryPolicy Declaration public StateEntryPolicy EntryPolicy Field Value Type Description StateEntryPolicy KnockbackResistance Declaration public float KnockbackResistance Field Value Type Description System.Single MaxMoveSpeed Declaration public float MaxMoveSpeed Field Value Type Description System.Single MinMoveSpeed Declaration public float MinMoveSpeed Field Value Type Description System.Single MovementType Declaration public MovementType MovementType Field Value Type Description MovementType Timeline Declaration public TimelineAsset Timeline Field Value Type Description TimelineAsset Properties Length Declaration public float Length { get; } Property Value Type Description System.Single Methods GetScaledMoveSpeed(Vector2) Declaration public float GetScaledMoveSpeed(Vector2 movement) Parameters Type Name Description Vector2 movement Returns Type Description System.Single"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.BaseStateAsset.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.BaseStateAsset.html",
    "title": "Class BaseStateAsset | Fantasy Crescendo",
    "keywords": "Class BaseStateAsset An asset that represents a single state or a group of states in built StateController. Inheritance ScriptableObject BaseStateAsset StateAsset StateGroupAsset Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public abstract class BaseStateAsset : ScriptableObject Properties StateMachine Gets the StateMachine that owns the state Declaration public StateMachineAsset StateMachine { get; } Property Value Type Description StateMachineAsset Transitions Get a list of all transitions that originate from the state(s). The order is the same order as they are evaluated at in the built StateController. Declaration public ReadOnlyCollection<StateTransitionAsset> Transitions { get; } Property Value Type Description ReadOnlyCollection < StateTransitionAsset > Methods CreateTransition(BaseStateAsset) Creates a StateTransitionAsset and adds it to the state machine's set of transitions. Declaration public StateTransitionAsset CreateTransition(BaseStateAsset dst) Parameters Type Name Description BaseStateAsset dst the target state for the transition Returns Type Description StateTransitionAsset the created transition asset Remarks This will save any unsaved changes with the state machine to disk. Destroy() Destroys the state and all of its transitions. Declaration public void Destroy() GetBaseStates() Gets the full set of states that constitute the state. Order not guarenteed to be deterministic. Declaration public abstract IEnumerable<StateAsset> GetBaseStates() Returns Type Description System.Collections.Generic.IEnumerable < StateAsset > an enumeration of all the consittuent base state OnEnable() This function is called when the object becomes enabled and active. Declaration protected virtual void OnEnable() RemoveTransition(StateTransitionAsset) Removes and destroys a transition from the state. Declaration public bool RemoveTransition(StateTransitionAsset transition) Parameters Type Name Description StateTransitionAsset transition Returns Type Description System.Boolean RemoveTransitionsTo(BaseStateAsset) Removes and destroys a transition from the state. Declaration public bool RemoveTransitionsTo(BaseStateAsset target) Parameters Type Name Description BaseStateAsset target Returns Type Description System.Boolean"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.BaseStateMachineAsset.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.BaseStateMachineAsset.html",
    "title": "Class BaseStateMachineAsset | Fantasy Crescendo",
    "keywords": "Class BaseStateMachineAsset A base abstract class for assets that create runtime StateControllers Inheritance ScriptableObject BaseStateMachineAsset StateMachineAsset Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public abstract class BaseStateMachineAsset : ScriptableObject Methods BuildController() Creates a StateController based on the asset. Declaration public abstract StateController BuildController() Returns Type Description StateController the created StateController"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterAnimation.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterAnimation.html",
    "title": "Class CharacterAnimation | Fantasy Crescendo",
    "keywords": "Class CharacterAnimation Inheritance MonoBehaviour PlayerComponent CharacterAnimation Implements IPlayerView IPlayerSimulation Inherited Members PlayerComponent.Dispose() PlayerComponent.ResetState(PlayerState) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class CharacterAnimation : PlayerComponent, IPlayerView, IPlayerSimulation Methods Initialize(PlayerConfig, Boolean) Declaration public override Task Initialize(PlayerConfig config, bool isView = false) Parameters Type Name Description PlayerConfig config System.Boolean isView Returns Type Description Task Overrides PlayerComponent.Initialize(PlayerConfig, Boolean) Presimulate(PlayerState) Declaration public override void Presimulate(in PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.Presimulate(PlayerState) Simulate(ref PlayerState, PlayerInputContext) Declaration public override void Simulate(ref PlayerState state, PlayerInputContext input) Parameters Type Name Description PlayerState state PlayerInputContext input Overrides PlayerComponent.Simulate(ref PlayerState, PlayerInputContext) UpdateView(PlayerState) Declaration public override void UpdateView(in PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.UpdateView(PlayerState) Implements IPlayerView IPlayerSimulation"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterCamera.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterCamera.html",
    "title": "Class CharacterCamera | Fantasy Crescendo",
    "keywords": "Class CharacterCamera Inheritance MonoBehaviour CharacterCamera Implements IPlayerComponent Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class CharacterCamera : MonoBehaviour, IPlayerComponent Methods Initialize(PlayerConfig, Boolean) Declaration public Task Initialize(PlayerConfig config, bool isView = false) Parameters Type Name Description PlayerConfig config System.Boolean isView Returns Type Description Task Implements IPlayerComponent"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterContext.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterContext.html",
    "title": "Class CharacterContext | Fantasy Crescendo",
    "keywords": "Class CharacterContext Inheritance System.Object CharacterContext Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class CharacterContext Fields CanJump Declaration public bool CanJump Field Value Type Description System.Boolean Input Declaration public PlayerInputContext Input Field Value Type Description PlayerInputContext IsGrounded Declaration public bool IsGrounded Field Value Type Description System.Boolean ShieldBroken Declaration public bool ShieldBroken Field Value Type Description System.Boolean State Declaration public PlayerState State Field Value Type Description PlayerState StateLength Declaration public float StateLength Field Value Type Description System.Single Properties Direction Declaration public float Direction { get; } Property Value Type Description System.Single NormalizedStateTime Declaration public float NormalizedStateTime { get; } Property Value Type Description System.Single Methods Clone() Declaration public CharacterContext Clone() Returns Type Description CharacterContext"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterControllerBuilder.ShieldStates.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterControllerBuilder.ShieldStates.html",
    "title": "Class CharacterControllerBuilder.ShieldStates | Fantasy Crescendo",
    "keywords": "Class CharacterControllerBuilder.ShieldStates Inheritance System.Object CharacterControllerBuilder.ShieldStates Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class ShieldStates Properties Broken Declaration public State Broken { get; set; } Property Value Type Description State Main Declaration public ShieldState Main { get; set; } Property Value Type Description ShieldState Off Declaration public State Off { get; set; } Property Value Type Description State On Declaration public ShieldState On { get; set; } Property Value Type Description ShieldState Perfect Declaration public ShieldState Perfect { get; set; } Property Value Type Description ShieldState Stunned Declaration public State Stunned { get; set; } Property Value Type Description State"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterControllerBuilder.SmashAttackStates.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterControllerBuilder.SmashAttackStates.html",
    "title": "Class CharacterControllerBuilder.SmashAttackStates | Fantasy Crescendo",
    "keywords": "Class CharacterControllerBuilder.SmashAttackStates Inheritance System.Object CharacterControllerBuilder.SmashAttackStates Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class SmashAttackStates Properties Attack Declaration public SmashAttackState Attack { get; } Property Value Type Description SmashAttackState Charge Declaration public SmashChargeState Charge { get; } Property Value Type Description SmashChargeState"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterControllerBuilder.StateData.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterControllerBuilder.StateData.html",
    "title": "Class CharacterControllerBuilder.StateData | Fantasy Crescendo",
    "keywords": "Class CharacterControllerBuilder.StateData Inheritance System.Object CharacterControllerBuilder.StateData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class StateData Fields Data Declaration public CharacterStateData Data Field Value Type Description CharacterStateData Name Declaration public string Name Field Value Type Description System.String"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterControllerBuilder.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterControllerBuilder.html",
    "title": "Class CharacterControllerBuilder | Fantasy Crescendo",
    "keywords": "Class CharacterControllerBuilder Inheritance ScriptableObject CharacterControllerBuilder Implements ISerializationCallbackReceiver Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class CharacterControllerBuilder : ScriptableObject, ISerializationCallbackReceiver Fields _data Declaration public CharacterControllerBuilder.StateData[] _data Field Value Type Description CharacterControllerBuilder.StateData [] _default Declaration public CharacterStateData _default Field Value Type Description CharacterStateData _prefab Declaration public GameObject _prefab Field Value Type Description GameObject Properties AerialAttackLand Declaration public State AerialAttackLand { get; } Property Value Type Description State AerialBackward Declaration public State AerialBackward { get; } Property Value Type Description State AerialDown Declaration public State AerialDown { get; } Property Value Type Description State AerialForward Declaration public State AerialForward { get; } Property Value Type Description State AerialNeutral Declaration public State AerialNeutral { get; } Property Value Type Description State AerialUp Declaration public State AerialUp { get; } Property Value Type Description State Builder Declaration public StateControllerBuilder Builder { get; set; } Property Value Type Description StateControllerBuilder Crash Declaration public State Crash { get; } Property Value Type Description State Crouch Declaration public State Crouch { get; } Property Value Type Description State CrouchEnd Declaration public State CrouchEnd { get; } Property Value Type Description State CrouchStart Declaration public State CrouchStart { get; } Property Value Type Description State DamageFall Declaration public State DamageFall { get; } Property Value Type Description State DamageLaunched Declaration public State DamageLaunched { get; } Property Value Type Description State DamageStun Declaration public State DamageStun { get; } Property Value Type Description State DamageStunAir Declaration public State DamageStunAir { get; } Property Value Type Description State Dash Declaration public State Dash { get; } Property Value Type Description State Escape Declaration public State Escape { get; } Property Value Type Description State EscapeAir Declaration public State EscapeAir { get; } Property Value Type Description State EscapeBackward Declaration public State EscapeBackward { get; } Property Value Type Description State EscapeForward Declaration public State EscapeForward { get; } Property Value Type Description State Fall Declaration public State Fall { get; } Property Value Type Description State FallHelpless Declaration public State FallHelpless { get; } Property Value Type Description State GrabbedDamaged Declaration protected State GrabbedDamaged { get; } Property Value Type Description State GrabbedInterrupt Declaration protected State GrabbedInterrupt { get; } Property Value Type Description State GrabbedInterruptJump Declaration protected State GrabbedInterruptJump { get; } Property Value Type Description State GrabbedPulled Declaration protected State GrabbedPulled { get; } Property Value Type Description State GrabbedWait Declaration protected State GrabbedWait { get; } Property Value Type Description State GrabInterrupted Declaration protected State GrabInterrupted { get; } Property Value Type Description State GrabPull Declaration protected State GrabPull { get; } Property Value Type Description State GrabPummel Declaration protected State GrabPummel { get; } Property Value Type Description State GrabRunPull Declaration protected State GrabRunPull { get; } Property Value Type Description State GrabWait Declaration protected State GrabWait { get; } Property Value Type Description State Idle Declaration public State Idle { get; } Property Value Type Description State Jump Declaration public JumpState Jump { get; } Property Value Type Description JumpState JumpAerial Declaration public JumpState JumpAerial { get; } Property Value Type Description JumpState JumpStart Declaration public State JumpStart { get; } Property Value Type Description State Land Declaration public State Land { get; } Property Value Type Description State LedgeAttack Declaration public State LedgeAttack { get; } Property Value Type Description State LedgeClimb Declaration public State LedgeClimb { get; } Property Value Type Description State LedgeEscape Declaration public State LedgeEscape { get; } Property Value Type Description State LedgeGrab Declaration public State LedgeGrab { get; } Property Value Type Description State LedgeIdle Declaration public State LedgeIdle { get; } Property Value Type Description State LedgeJump Declaration public State LedgeJump { get; } Property Value Type Description State LedgeRelease Declaration public State LedgeRelease { get; } Property Value Type Description State LedgeTeeter Declaration public State LedgeTeeter { get; } Property Value Type Description State Neutral Declaration public State Neutral { get; } Property Value Type Description State Prone Declaration public State Prone { get; } Property Value Type Description State ProneAttack Declaration public State ProneAttack { get; } Property Value Type Description State ProneRollLeft Declaration public State ProneRollLeft { get; } Property Value Type Description State ProneRollRight Declaration public State ProneRollRight { get; } Property Value Type Description State ProneStand Declaration public State ProneStand { get; } Property Value Type Description State Run Declaration public State Run { get; } Property Value Type Description State RunBrake Declaration public State RunBrake { get; } Property Value Type Description State RunTurn Declaration public State RunTurn { get; } Property Value Type Description State Shield Declaration public CharacterControllerBuilder.ShieldStates Shield { get; } Property Value Type Description CharacterControllerBuilder.ShieldStates SmashDown Declaration public CharacterControllerBuilder.SmashAttackStates SmashDown { get; } Property Value Type Description CharacterControllerBuilder.SmashAttackStates SmashSide Declaration public CharacterControllerBuilder.SmashAttackStates SmashSide { get; } Property Value Type Description CharacterControllerBuilder.SmashAttackStates SmashUp Declaration public CharacterControllerBuilder.SmashAttackStates SmashUp { get; } Property Value Type Description CharacterControllerBuilder.SmashAttackStates SpecialDown Declaration public State SpecialDown { get; } Property Value Type Description State SpecialNeutral Declaration public State SpecialNeutral { get; } Property Value Type Description State SpecialSide Declaration public State SpecialSide { get; } Property Value Type Description State SpecialUp Declaration public State SpecialUp { get; } Property Value Type Description State StopCeiling Declaration public State StopCeiling { get; } Property Value Type Description State StopWall Declaration public State StopWall { get; } Property Value Type Description State Tech Declaration public State Tech { get; } Property Value Type Description State TechRollLeft Declaration public State TechRollLeft { get; } Property Value Type Description State TechRollRight Declaration public State TechRollRight { get; } Property Value Type Description State TechWall Declaration public State TechWall { get; } Property Value Type Description State TechWallJump Declaration public State TechWallJump { get; } Property Value Type Description State ThrowBackward Declaration protected State ThrowBackward { get; } Property Value Type Description State ThrowDown Declaration protected State ThrowDown { get; } Property Value Type Description State ThrowForward Declaration protected State ThrowForward { get; } Property Value Type Description State ThrownBackward Declaration protected State ThrownBackward { get; } Property Value Type Description State ThrownDown Declaration protected State ThrownDown { get; } Property Value Type Description State ThrownForward Declaration protected State ThrownForward { get; } Property Value Type Description State ThrownUp Declaration protected State ThrownUp { get; } Property Value Type Description State ThrowUp Declaration protected State ThrowUp { get; } Property Value Type Description State TiltDown Declaration public State TiltDown { get; } Property Value Type Description State TiltSide Declaration public State TiltSide { get; } Property Value Type Description State TiltUp Declaration public State TiltUp { get; } Property Value Type Description State Walk Declaration public State Walk { get; } Property Value Type Description State Methods Attack(Func<PlayerInputContext, Boolean>) Declaration protected Func<CharacterContext, bool> Attack(Func<PlayerInputContext, bool> inputFunc = null) Parameters Type Name Description Func < PlayerInputContext , System.Boolean > inputFunc Returns Type Description Func < CharacterContext , System.Boolean > BuildCharacterController() Declaration protected virtual void BuildCharacterController() BuildCharacterControllerImpl(StateControllerBuilder) Declaration public StateController BuildCharacterControllerImpl(StateControllerBuilder builder) Parameters Type Name Description StateControllerBuilder builder Returns Type Description StateController DirectionalSmash(Direction) Declaration protected Func<CharacterContext, bool> DirectionalSmash(Direction direction) Parameters Type Name Description Direction direction Returns Type Description Func < CharacterContext , System.Boolean > DirectionInput(Direction) Declaration protected Func<CharacterContext, bool> DirectionInput(Direction direction) Parameters Type Name Description Direction direction Returns Type Description Func < CharacterContext , System.Boolean > Input(Func<PlayerInputContext, Boolean>) Declaration protected Func<CharacterContext, bool> Input(Func<PlayerInputContext, bool> input) Parameters Type Name Description Func < PlayerInputContext , System.Boolean > input Returns Type Description Func < CharacterContext , System.Boolean > Special(Func<PlayerInputContext, Boolean>) Declaration protected Func<CharacterContext, bool> Special(Func<PlayerInputContext, bool> inputFunc = null) Parameters Type Name Description Func < PlayerInputContext , System.Boolean > inputFunc Returns Type Description Func < CharacterContext , System.Boolean > Implements ISerializationCallbackReceiver"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterHitboxController.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterHitboxController.html",
    "title": "Class CharacterHitboxController | Fantasy Crescendo",
    "keywords": "Class CharacterHitboxController Inheritance MonoBehaviour PlayerComponent CharacterHitboxController Implements IPlayerView IPlayerSimulation Inherited Members PlayerComponent.UpdateView(PlayerState) PlayerComponent.Dispose() PlayerComponent.ResetState(PlayerState) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class CharacterHitboxController : PlayerComponent, IPlayerView, IPlayerSimulation Methods Initialize(PlayerConfig, Boolean) Declaration public override Task Initialize(PlayerConfig config, bool isView = false) Parameters Type Name Description PlayerConfig config System.Boolean isView Returns Type Description Task Overrides PlayerComponent.Initialize(PlayerConfig, Boolean) Presimulate(PlayerState) Declaration public override void Presimulate(in PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.Presimulate(PlayerState) Simulate(ref PlayerState, PlayerInputContext) Declaration public override void Simulate(ref PlayerState state, PlayerInputContext input) Parameters Type Name Description PlayerState state PlayerInputContext input Overrides PlayerComponent.Simulate(ref PlayerState, PlayerInputContext) Implements IPlayerView IPlayerSimulation"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterIndicator.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterIndicator.html",
    "title": "Class CharacterIndicator | Fantasy Crescendo",
    "keywords": "Class CharacterIndicator Inheritance MonoBehaviour PlayerComponent CharacterIndicator Implements IPlayerView IPlayerSimulation Inherited Members PlayerComponent.Presimulate(PlayerState) PlayerComponent.Simulate(PlayerState, PlayerInputContext) PlayerComponent.Dispose() PlayerComponent.ResetState(PlayerState) Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class CharacterIndicator : PlayerComponent, IPlayerView, IPlayerSimulation Fields PositionBias Declaration public Vector3 PositionBias Field Value Type Description Vector3 TargetTransform Declaration public Transform TargetTransform Field Value Type Description Transform Methods Initialize(PlayerConfig, Boolean) Declaration public override Task Initialize(PlayerConfig config, bool isView = false) Parameters Type Name Description PlayerConfig config System.Boolean isView Returns Type Description Task Overrides PlayerComponent.Initialize(PlayerConfig, Boolean) UpdateView(PlayerState) Declaration public override void UpdateView(in PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.UpdateView(PlayerState) Implements IPlayerView IPlayerSimulation"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterLedge.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Characters.CharacterLedge.html",
    "title": "Class CharacterLedge | Fantasy Crescendo",
    "keywords": "Class CharacterLedge Inheritance MonoBehaviour PlayerComponent CharacterLedge Implements IPlayerView IPlayerSimulation Inherited Members PlayerComponent.Presimulate(PlayerState) PlayerComponent.Dispose() Namespace : HouraiTeahouse.FantasyCrescendo.Characters Assembly : cs.temp.dll.dll Syntax public class CharacterLedge : PlayerComponent, IPlayerView, IPlayerSimulation Fields CheckRegions Declaration public Bounds[] CheckRegions Field Value Type Description Bounds [] Methods Initialize(PlayerConfig, Boolean) Declaration public override Task Initialize(PlayerConfig config, bool isView) Parameters Type Name Description PlayerConfig config System.Boolean isView Returns Type Description Task Overrides PlayerComponent.Initialize(PlayerConfig, Boolean) ResetState(ref PlayerState) Declaration public override void ResetState(ref PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.ResetState(ref PlayerState) Simulate(ref PlayerState, PlayerInputContext) Declaration public override void Simulate(ref PlayerState state, PlayerInputContext input) Parameters Type Name Description PlayerState state PlayerInputContext input Overrides PlayerComponent.Simulate(ref PlayerState, PlayerInputContext) UpdateView(PlayerState) Declaration public override void UpdateView(in PlayerState state) Parameters Type Name Description PlayerState state Overrides PlayerComponent.UpdateView(PlayerState) Implements IPlayerView IPlayerSimulation"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matchmaking.SteamMatchmaker.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matchmaking.SteamMatchmaker.html",
    "title": "Class SteamMatchmaker | Fantasy Crescendo",
    "keywords": "Class SteamMatchmaker Inheritance System.Object SteamMatchmaker Implements IMatchmaker Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Matchmaking Assembly : cs.temp.dll.dll Syntax public class SteamMatchmaker : IMatchmaker Constructors SteamMatchmaker() Declaration public SteamMatchmaker() Fields kNameKey Declaration public const string kNameKey = \"name\" Field Value Type Description System.String kOwnerName Declaration public const string kOwnerName = \"owner_name\" Field Value Type Description System.String Properties NetworkInterfaceType Declaration public Type NetworkInterfaceType { get; } Property Value Type Description Type Methods CreateLobby() Declaration public Task<LobbyInfo> CreateLobby() Returns Type Description Task < LobbyInfo > GetLobbies() Declaration public Task<IEnumerable<LobbyInfo>> GetLobbies() Returns Type Description Task < System.Collections.Generic.IEnumerable < LobbyInfo >> JoinLobby(LobbyInfo) Declaration public Task JoinLobby(LobbyInfo lobby) Parameters Type Name Description LobbyInfo lobby Returns Type Description Task Update() Declaration public void Update() Implements IMatchmaker"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Matchmaking.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Matchmaking.html",
    "title": "Namespace HouraiTeahouse.FantasyCrescendo.Matchmaking | Fantasy Crescendo",
    "keywords": "Namespace HouraiTeahouse.FantasyCrescendo.Matchmaking Classes LobbyDisplay LobbyInfo LobbyListUI MatchmakerController SteamMatchmaker Interfaces IMatchmaker"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Menu.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Menu.html",
    "title": "Class Menu | Fantasy Crescendo",
    "keywords": "Class Menu Inheritance MonoBehaviour Menu Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class Menu : MonoBehaviour"
  },
  "api/HouraiTeahouse.FantasyCrescendo.MenuManager.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.MenuManager.html",
    "title": "Class MenuManager | Fantasy Crescendo",
    "keywords": "Class MenuManager Inheritance MonoBehaviour MenuManager Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class MenuManager : MonoBehaviour Fields MainMenu Declaration public Menu MainMenu Field Value Type Description Menu Properties Breadcrumbs Declaration public IReadOnlyCollection<Menu> Breadcrumbs { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < Menu > CurrentMenu Declaration public Menu CurrentMenu { get; } Property Value Type Description Menu Instance Declaration public static MenuManager Instance { get; } Property Value Type Description MenuManager Menus Declaration public IReadOnlyCollection<Menu> Menus { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < Menu > Methods Return() Declaration public void Return() SetMenu(Menu) Declaration public void SetMenu(Menu currentMenu) Parameters Type Name Description Menu currentMenu"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Merger-1.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Merger-1.html",
    "title": "Class Merger<T> | Fantasy Crescendo",
    "keywords": "Class Merger<T> A static class for creating IMerger<I> objects. Inheritance System.Object Merger<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public static class Merger<T> Type Parameters Name Description T Properties Default Gets the default merger for a type. Declaration public static IMerger<T> Default { get; } Property Value Type Description IMerger <T> the default merger for the type. Remarks Currently only supports T types that derive from IMergable<T> . Attempting to get a default merger that does not derive from the interface will throw a System.NotImplementedException . Methods FromDelegate(Func<T, T, T>) Creates a merger based on a provided delegate. Declaration public static IMerger<T> FromDelegate(Func<T, T, T> mergeFunc) Parameters Type Name Description Func <T, T, T> mergeFunc the merge strategy for the merger. Returns Type Description IMerger <T> the merger object. Exceptions Type Condition System.ArgumentNullException is null."
  },
  "api/HouraiTeahouse.FantasyCrescendo.MessageCodes.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.MessageCodes.html",
    "title": "Class MessageCodes | Fantasy Crescendo",
    "keywords": "Class MessageCodes Inheritance System.Object MessageCodes Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public static class MessageCodes Fields ClientReady Declaration public const MessageHeader ClientReady = null Field Value Type Description MessageHeader Connect Declaration public const MessageHeader Connect = null Field Value Type Description MessageHeader Disconnect Declaration public const MessageHeader Disconnect = null Field Value Type Description MessageHeader Error Declaration public const MessageHeader Error = null Field Value Type Description MessageHeader MatchFinish Declaration public const MessageHeader MatchFinish = null Field Value Type Description MessageHeader MatchStart Declaration public const MessageHeader MatchStart = null Field Value Type Description MessageHeader ServerReady Declaration public const MessageHeader ServerReady = null Field Value Type Description MessageHeader UpdateConfig Declaration public const MessageHeader UpdateConfig = null Field Value Type Description MessageHeader UpdateInput Declaration public const MessageHeader UpdateInput = null Field Value Type Description MessageHeader UpdateState Declaration public const MessageHeader UpdateState = null Field Value Type Description MessageHeader"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Messaging.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Messaging.html",
    "title": "Class Messaging | Fantasy Crescendo",
    "keywords": "Class Messaging Inheritance System.Object Messaging Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public static class Messaging Methods Broadcast<T>(GameObject, Action<T>) Declaration public static T[] Broadcast<T>(this GameObject gameObject, Action<T> message) Parameters Type Name Description GameObject gameObject Action <T> message Returns Type Description T[] Type Parameters Name Description T Broadcast<T>(GameObject, Func<T, Task>) Declaration public static Task Broadcast<T>(this GameObject gameObject, Func<T, Task> message) Parameters Type Name Description GameObject gameObject Func <T, Task > message Returns Type Description Task Type Parameters Name Description T"
  },
  "api/HouraiTeahouse.FantasyCrescendo.MovementType.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.MovementType.html",
    "title": "Enum MovementType | Fantasy Crescendo",
    "keywords": "Enum MovementType Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public enum MovementType Fields Name Description DirectionalInfluenceOnly Forced Locked Normal"
  },
  "api/HouraiTeahouse.FantasyCrescendo.NetworkConfig.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.NetworkConfig.html",
    "title": "Class NetworkConfig | Fantasy Crescendo",
    "keywords": "Class NetworkConfig Inheritance ScriptableObject NetworkConfig Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class NetworkConfig : ScriptableObject Fields InputSendRate Declaration public uint InputSendRate Field Value Type Description System.UInt32 StateSendRate Declaration public uint StateSendRate Field Value Type Description System.UInt32"
  },
  "api/HouraiTeahouse.FantasyCrescendo.NetworkMenu.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.NetworkMenu.html",
    "title": "Class NetworkMenu | Fantasy Crescendo",
    "keywords": "Class NetworkMenu Inheritance MonoBehaviour NetworkMenu Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public class NetworkMenu : MonoBehaviour Fields ConnectingScreen Declaration public GameObject ConnectingScreen Field Value Type Description GameObject ErrorScreen Declaration public GameObject ErrorScreen Field Value Type Description GameObject ErrorText Declaration public Text ErrorText Field Value Type Description Text IP Declaration public InputField IP Field Value Type Description InputField NetworkMenuScreen Declaration public GameObject NetworkMenuScreen Field Value Type Description GameObject Port Declaration public InputField Port Field Value Type Description InputField SuccessScreen Declaration public GameObject SuccessScreen Field Value Type Description GameObject Methods ReturnToMainScreen() Declaration public void ReturnToMainScreen() StartClient() Declaration public void StartClient() StartHost() Declaration public void StartHost()"
  },
  "api/HouraiTeahouse.FantasyCrescendo.NetworkReliablity.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.NetworkReliablity.html",
    "title": "Enum NetworkReliablity | Fantasy Crescendo",
    "keywords": "Enum NetworkReliablity Namespace : HouraiTeahouse.FantasyCrescendo Assembly : cs.temp.dll.dll Syntax public enum NetworkReliablity Fields Name Description Reliable Unreliable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.ClientGameController.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.ClientGameController.html",
    "title": "Class ClientGameController | Fantasy Crescendo",
    "keywords": "Class ClientGameController Inheritance System.Object MatchController ClientGameController LockstepStrategy.Client RollbackStrategy.Client Implements IMatchController IDisposable Inherited Members MatchController.Timestep MatchController.CurrentState MatchController.Simulation MatchController.InputSource System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public abstract class ClientGameController : MatchController, IMatchController, IDisposable Constructors ClientGameController(INetworkClient, MatchConfig) Declaration protected ClientGameController(INetworkClient client, MatchConfig config) Parameters Type Name Description INetworkClient client MatchConfig config Properties NetworkClient Declaration public INetworkClient NetworkClient { get; } Property Value Type Description INetworkClient Methods Dispose() Declaration public virtual void Dispose() Update() Declaration public override void Update() Overrides MatchController.Update() Implements IMatchController IDisposable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.ClientUpdateConfigMessage.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.ClientUpdateConfigMessage.html",
    "title": "Struct ClientUpdateConfigMessage | Fantasy Crescendo",
    "keywords": "Struct ClientUpdateConfigMessage Implements INetworkSerializable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public struct ClientUpdateConfigMessage : INetworkSerializable Fields PlayerConfig Declaration public PlayerConfig PlayerConfig Field Value Type Description PlayerConfig Methods Deserialize(Deserializer) Declaration public void Deserialize(Deserializer deserializer) Parameters Type Name Description Deserializer deserializer Serialize(Serializer) Declaration public void Serialize(Serializer serializer) Parameters Type Name Description Serializer serializer Implements INetworkSerializable"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.ConnectionStats.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.ConnectionStats.html",
    "title": "Struct ConnectionStats | Fantasy Crescendo",
    "keywords": "Struct ConnectionStats Implements IMergable < ConnectionStats > Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public struct ConnectionStats : IMergable<ConnectionStats> Fields CurrentRTT Declaration public int CurrentRTT Field Value Type Description System.Int32 IncomingPacketsCount Declaration public int IncomingPacketsCount Field Value Type Description System.Int32 IncomingPacketsLost Declaration public int IncomingPacketsLost Field Value Type Description System.Int32 TotalBytesOut Declaration public int TotalBytesOut Field Value Type Description System.Int32 Properties PacketLossPercent Declaration public float PacketLossPercent { get; } Property Value Type Description System.Single Methods MergeWith(ConnectionStats) Declaration public ConnectionStats MergeWith(ConnectionStats other) Parameters Type Name Description ConnectionStats other Returns Type Description ConnectionStats Implements IMergable<T>"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.ConnectionStatus.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.ConnectionStatus.html",
    "title": "Enum ConnectionStatus | Fantasy Crescendo",
    "keywords": "Enum ConnectionStatus Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public enum ConnectionStatus Fields Name Description Connected Connecting Disconnected"
  },
  "api/HouraiTeahouse.FantasyCrescendo.Networking.Deserializer.html": {
    "href": "api/HouraiTeahouse.FantasyCrescendo.Networking.Deserializer.html",
    "title": "Class Deserializer | Fantasy Crescendo",
    "keywords": "Class Deserializer Inheritance System.Object Deserializer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : HouraiTeahouse.FantasyCrescendo.Networking Assembly : cs.temp.dll.dll Syntax public class Deserializer Constructors Deserializer() Declaration public Deserializer() Deserializer(Serializer) Declaration public Deserializer(Serializer serializer) Parameters Type Name Description Serializer serializer Deserializer(Byte[]) Declaration public Deserializer(byte[] buffer) Parameters Type Name Description System.Byte [] buffer Properties Position Declaration public uint Position { get; } Property Value Type Description System.UInt32 Size Declaration public int Size { get; } Property Value Type Description System.Int32 Methods Read<TMsg>() Declaration public TMsg Read<TMsg>()where TMsg : struct, INetworkSerializable Returns Type Description TMsg Type Parameters Name Description TMsg ReadBoolean() Declaration public bool ReadBoolean() Returns Type Description System.Boolean ReadByte() Declaration public byte ReadByte() Returns Type Description System.Byte ReadBytes(Int32) Declaration public byte[] ReadBytes(int count) Parameters Type Name Description System.Int32 count Returns Type Description System.Byte [] ReadBytesAndSize() Declaration public byte[] ReadBytesAndSize() Returns Type Description System.Byte [] ReadChar() Declaration public char ReadChar() Returns Type Description System.Char ReadColor() Declaration public Color ReadColor() Returns Type Description Color ReadColor32() Declaration public Color32 ReadColor32() Returns Type Description Color32 ReadDouble() Declaration public double ReadDouble() Returns Type Description System.Double ReadInt16() Declaration public short ReadInt16() Returns Type Description System.Int16 ReadInt32() Declaration public int ReadInt32() Returns Type Description System.Int32 ReadInt64() Declaration public long ReadInt64() Returns Type Description System.Int64 ReadMatrix4x4() Declaration public Matrix4x4 ReadMatrix4x4() Returns Type Description Matrix4x4 ReadMessage<TMsg>() Declaration public TMsg ReadMessage<TMsg>()where TMsg : class, INetworkSerializable, new () Returns Type Description TMsg Type Parameters Name Description TMsg ReadPlane() Declaration public Plane ReadPlane() Returns Type Description Plane ReadQuaternion() Declaration public Quaternion ReadQuaternion() Returns Type Description Quaternion ReadRay() Declaration public Ray ReadRay() Returns Type Description Ray ReadRect() Declaration public Rect ReadRect() Returns Type Description Rect ReadSByte() Declaration public sbyte ReadSByte() Returns Type Description System.SByte ReadSingle() Declaration public float ReadSingle() Returns Type Description System.Single ReadString() Declaration public string ReadString() Returns Type Description System.String ReadUInt16() Declaration public ushort ReadUInt16() Returns Type Description System.UInt16 ReadUInt32() Declaration public UInt32 ReadUInt32() Returns Type Description UInt32 ReadUInt64() Declaration public UInt64 ReadUInt64() Returns Type Description UInt64 ReadVector2() Declaration public Vector2 ReadVector2() Returns Type Description Vector2 ReadVector3() Declaration public Vector3 ReadVector3() Returns Type Description Vector3 ReadVector4() Declaration public Vector4 ReadVector4() Returns Type Description Vector4 Replace(Byte[]) Declaration public void Replace(byte[] buffer) Parameters Type Name Description System.Byte [] buffer SeekZero() Declaration public void SeekZero() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  }
}